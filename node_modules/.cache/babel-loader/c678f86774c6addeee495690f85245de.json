{"ast":null,"code":"var picker = function picker(type) {\n  return function () {\n    return new Promise(function (resolve, reject) {\n      var fileLoader = function fileLoader(e) {\n        var directory = {};\n        var totalFiles = e.target.files.length;\n        var loadedFiles = 0;\n        [].map.call(e.target.files, function (file) {\n          var reader = new FileReader();\n\n          reader.onload = function (e) {\n            var data = new Uint8Array(e.target.result);\n\n            if (type === \"directory\") {\n              var path = file.webkitRelativePath;\n              directory[path.slice(path.indexOf(\"/\") + 1)] = {\n                type: \"text/plain\",\n                data: data\n              };\n              if (++loadedFiles === totalFiles) resolve(directory);\n            } else if (type === \"file\") {\n              var _path = file.webkitRelativePath;\n              resolve({\n                \"type\": mimetype.lookup(_path),\n                \"data\": data\n              });\n            } else {\n              resolve(data);\n            }\n          };\n\n          reader.readAsArrayBuffer(file);\n        });\n      };\n\n      var fileInput;\n\n      if (type === \"directory\") {\n        fileInput = document.createElement(\"input\");\n        fileInput.addEventListener(\"change\", fileLoader);\n        fileInput.type = \"file\";\n        fileInput.webkitdirectory = true;\n        fileInput.mozdirectory = true;\n        fileInput.msdirectory = true;\n        fileInput.odirectory = true;\n        fileInput.directory = true;\n      } else {\n        fileInput = document.createElement(\"input\");\n        fileInput.addEventListener(\"change\", fileLoader);\n        fileInput.type = \"file\";\n      }\n\n      ;\n      var mouseEvent = document.createEvent(\"MouseEvents\");\n      mouseEvent.initEvent(\"click\", true, false);\n      fileInput.dispatchEvent(mouseEvent);\n    });\n  };\n};\n\nmodule.exports = {\n  data: picker(\"data\"),\n  file: picker(\"file\"),\n  directory: picker(\"directory\")\n};","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/node_modules/swarm-js/lib/pick.js"],"names":["picker","type","Promise","resolve","reject","fileLoader","e","directory","totalFiles","target","files","length","loadedFiles","map","call","file","reader","FileReader","onload","data","Uint8Array","result","path","webkitRelativePath","slice","indexOf","_path","mimetype","lookup","readAsArrayBuffer","fileInput","document","createElement","addEventListener","webkitdirectory","mozdirectory","msdirectory","odirectory","mouseEvent","createEvent","initEvent","dispatchEvent","module","exports"],"mappings":"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","sourcesContent":["var picker = function picker(type) {\n  return function () {\n    return new Promise(function (resolve, reject) {\n      var fileLoader = function fileLoader(e) {\n        var directory = {};\n        var totalFiles = e.target.files.length;\n        var loadedFiles = 0;\n        [].map.call(e.target.files, function (file) {\n          var reader = new FileReader();\n\n          reader.onload = function (e) {\n            var data = new Uint8Array(e.target.result);\n\n            if (type === \"directory\") {\n              var path = file.webkitRelativePath;\n              directory[path.slice(path.indexOf(\"/\") + 1)] = {\n                type: \"text/plain\",\n                data: data\n              };\n              if (++loadedFiles === totalFiles) resolve(directory);\n            } else if (type === \"file\") {\n              var _path = file.webkitRelativePath;\n              resolve({\n                \"type\": mimetype.lookup(_path),\n                \"data\": data\n              });\n            } else {\n              resolve(data);\n            }\n          };\n\n          reader.readAsArrayBuffer(file);\n        });\n      };\n\n      var fileInput;\n\n      if (type === \"directory\") {\n        fileInput = document.createElement(\"input\");\n        fileInput.addEventListener(\"change\", fileLoader);\n        fileInput.type = \"file\";\n        fileInput.webkitdirectory = true;\n        fileInput.mozdirectory = true;\n        fileInput.msdirectory = true;\n        fileInput.odirectory = true;\n        fileInput.directory = true;\n      } else {\n        fileInput = document.createElement(\"input\");\n        fileInput.addEventListener(\"change\", fileLoader);\n        fileInput.type = \"file\";\n      }\n\n      ;\n      var mouseEvent = document.createEvent(\"MouseEvents\");\n      mouseEvent.initEvent(\"click\", true, false);\n      fileInput.dispatchEvent(mouseEvent);\n    });\n  };\n};\n\nmodule.exports = {\n  data: picker(\"data\"),\n  file: picker(\"file\"),\n  directory: picker(\"directory\")\n};"]},"metadata":{},"sourceType":"script"}