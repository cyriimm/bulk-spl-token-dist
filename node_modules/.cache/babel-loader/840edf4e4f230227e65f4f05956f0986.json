{"ast":null,"code":"var types = {\n  Array: function (value) {\n    return value !== null && value !== undefined && value.constructor === Array;\n  },\n  Boolean: function (value) {\n    return typeof value === 'boolean';\n  },\n  Function: function (value) {\n    return typeof value === 'function';\n  },\n  Nil: function (value) {\n    return value === undefined || value === null;\n  },\n  Number: function (value) {\n    return typeof value === 'number';\n  },\n  Object: function (value) {\n    return typeof value === 'object';\n  },\n  String: function (value) {\n    return typeof value === 'string';\n  },\n  '': function () {\n    return true;\n  }\n}; // TODO: deprecate\n\ntypes.Null = types.Nil;\n\nfor (var typeName in types) {\n  types[typeName].toJSON = function (t) {\n    return t;\n  }.bind(null, typeName);\n}\n\nmodule.exports = types;","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/node_modules/typeforce/native.js"],"names":["types","Array","value","undefined","constructor","Boolean","Function","Nil","Number","Object","String","Null","typeName","toJSON","t","bind","module","exports"],"mappings":"AAAA,IAAIA,KAAK,GAAG;AACVC,EAAAA,KAAK,EAAE,UAAUC,KAAV,EAAiB;AAAE,WAAOA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKC,SAA5B,IAAyCD,KAAK,CAACE,WAAN,KAAsBH,KAAtE;AAA6E,GAD7F;AAEVI,EAAAA,OAAO,EAAE,UAAUH,KAAV,EAAiB;AAAE,WAAO,OAAOA,KAAP,KAAiB,SAAxB;AAAmC,GAFrD;AAGVI,EAAAA,QAAQ,EAAE,UAAUJ,KAAV,EAAiB;AAAE,WAAO,OAAOA,KAAP,KAAiB,UAAxB;AAAoC,GAHvD;AAIVK,EAAAA,GAAG,EAAE,UAAUL,KAAV,EAAiB;AAAE,WAAOA,KAAK,KAAKC,SAAV,IAAuBD,KAAK,KAAK,IAAxC;AAA8C,GAJ5D;AAKVM,EAAAA,MAAM,EAAE,UAAUN,KAAV,EAAiB;AAAE,WAAO,OAAOA,KAAP,KAAiB,QAAxB;AAAkC,GALnD;AAMVO,EAAAA,MAAM,EAAE,UAAUP,KAAV,EAAiB;AAAE,WAAO,OAAOA,KAAP,KAAiB,QAAxB;AAAkC,GANnD;AAOVQ,EAAAA,MAAM,EAAE,UAAUR,KAAV,EAAiB;AAAE,WAAO,OAAOA,KAAP,KAAiB,QAAxB;AAAkC,GAPnD;AAQV,MAAI,YAAY;AAAE,WAAO,IAAP;AAAa;AARrB,CAAZ,C,CAWA;;AACAF,KAAK,CAACW,IAAN,GAAaX,KAAK,CAACO,GAAnB;;AAEA,KAAK,IAAIK,QAAT,IAAqBZ,KAArB,EAA4B;AAC1BA,EAAAA,KAAK,CAACY,QAAD,CAAL,CAAgBC,MAAhB,GAAyB,UAAUC,CAAV,EAAa;AACpC,WAAOA,CAAP;AACD,GAFwB,CAEvBC,IAFuB,CAElB,IAFkB,EAEZH,QAFY,CAAzB;AAGD;;AAEDI,MAAM,CAACC,OAAP,GAAiBjB,KAAjB","sourcesContent":["var types = {\n  Array: function (value) { return value !== null && value !== undefined && value.constructor === Array },\n  Boolean: function (value) { return typeof value === 'boolean' },\n  Function: function (value) { return typeof value === 'function' },\n  Nil: function (value) { return value === undefined || value === null },\n  Number: function (value) { return typeof value === 'number' },\n  Object: function (value) { return typeof value === 'object' },\n  String: function (value) { return typeof value === 'string' },\n  '': function () { return true }\n}\n\n// TODO: deprecate\ntypes.Null = types.Nil\n\nfor (var typeName in types) {\n  types[typeName].toJSON = function (t) {\n    return t\n  }.bind(null, typeName)\n}\n\nmodule.exports = types\n"]},"metadata":{},"sourceType":"script"}