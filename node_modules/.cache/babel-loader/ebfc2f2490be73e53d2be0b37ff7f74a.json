{"ast":null,"code":"var _jsxFileName = \"/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/src/components/instructions/SystemInstruction.js\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport LabelValue from './LabelValue';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TYPE_LABELS = {\n  systemCreate: 'Create account',\n  systemCreateWithSeed: 'Create account with seed',\n  systemTransfer: 'Transfer SOL'\n};\nconst DATA_LABELS = {\n  toPubkey: {\n    label: 'To',\n    address: true\n  },\n  accountPubkey: {\n    label: 'Account',\n    address: true\n  },\n  basePubkey: {\n    label: 'Base',\n    address: true\n  },\n  seed: {\n    label: 'Seed',\n    address: false\n  },\n  noncePubkey: {\n    label: 'Nonce',\n    address: true\n  },\n  authorizedPubkey: {\n    label: 'Authorized',\n    address: true\n  },\n  newAuthorizedPubkey: {\n    label: 'New authorized',\n    address: true\n  },\n  newAccountPubkey: {\n    label: 'New account',\n    address: true\n  },\n  amount: {\n    label: 'Amount',\n    address: false\n  },\n  lamports: {\n    label: 'Lamports',\n    address: false\n  }\n};\nexport default function SystemInstruction({\n  instruction,\n  onOpenAddress\n}) {\n  const {\n    type,\n    data\n  } = instruction;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      style: {\n        fontWeight: 'bold'\n      },\n      gutterBottom: true,\n      children: TYPE_LABELS[type]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), data && Object.entries(data).map(([key, value]) => {\n      const dataLabel = DATA_LABELS[key];\n\n      if (!dataLabel) {\n        return null;\n      }\n\n      const {\n        label,\n        address\n      } = dataLabel;\n      return /*#__PURE__*/_jsxDEV(LabelValue, {\n        label: label + '',\n        value: address ? value === null || value === void 0 ? void 0 : value.toBase58() : value,\n        link: address,\n        onClick: () => address && onOpenAddress(value === null || value === void 0 ? void 0 : value.toBase58())\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true);\n}\n_c = SystemInstruction;\n\nvar _c;\n\n$RefreshReg$(_c, \"SystemInstruction\");","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/src/components/instructions/SystemInstruction.js"],"names":["React","Typography","LabelValue","TYPE_LABELS","systemCreate","systemCreateWithSeed","systemTransfer","DATA_LABELS","toPubkey","label","address","accountPubkey","basePubkey","seed","noncePubkey","authorizedPubkey","newAuthorizedPubkey","newAccountPubkey","amount","lamports","SystemInstruction","instruction","onOpenAddress","type","data","fontWeight","Object","entries","map","key","value","dataLabel","toBase58"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport LabelValue from './LabelValue';\n\nconst TYPE_LABELS = {\n  systemCreate: 'Create account',\n  systemCreateWithSeed: 'Create account with seed',\n  systemTransfer: 'Transfer SOL',\n};\n\nconst DATA_LABELS = {\n  toPubkey: { label: 'To', address: true },\n  accountPubkey: { label: 'Account', address: true },\n  basePubkey: { label: 'Base', address: true },\n  seed: { label: 'Seed', address: false },\n  noncePubkey: { label: 'Nonce', address: true },\n  authorizedPubkey: { label: 'Authorized', address: true },\n  newAuthorizedPubkey: { label: 'New authorized', address: true },\n  newAccountPubkey: { label: 'New account', address: true },\n  amount: { label: 'Amount', address: false },\n  lamports: { label: 'Lamports', address: false },\n};\n\nexport default function SystemInstruction({ instruction, onOpenAddress }) {\n  const { type, data } = instruction;\n\n  return (\n    <>\n      <Typography\n        variant=\"subtitle1\"\n        style={{ fontWeight: 'bold' }}\n        gutterBottom\n      >\n        {TYPE_LABELS[type]}\n      </Typography>\n      {data &&\n        Object.entries(data).map(([key, value]) => {\n          const dataLabel = DATA_LABELS[key];\n          if (!dataLabel) {\n            return null;\n          }\n          const { label, address } = dataLabel;\n          return (\n            <LabelValue\n              key={key}\n              label={label + ''}\n              value={address ? value?.toBase58() : value}\n              link={address}\n              onClick={() => address && onOpenAddress(value?.toBase58())}\n            />\n          );\n        })}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}