{"ast":null,"code":"var xhr = require('xhr');\n\nvar normalize = require('./normalize-response');\n\nvar noop = function () {};\n\nmodule.exports = xhrRequest;\n\nfunction xhrRequest(opt, cb) {\n  delete opt.uri; // for better JSON.parse error handling than xhr module\n\n  var useJson = false;\n\n  if (opt.responseType === 'json') {\n    opt.responseType = 'text';\n    useJson = true;\n  }\n\n  var req = xhr(opt, function xhrRequestResult(err, resp, body) {\n    if (useJson && !err) {\n      try {\n        var text = resp.rawRequest.responseText;\n        body = JSON.parse(text);\n      } catch (e) {\n        err = e;\n      }\n    }\n\n    resp = normalize(opt, resp);\n    if (err) cb(err, null, resp);else cb(err, body, resp);\n    cb = noop;\n  }); // Patch abort() so that it also calls the callback, but with an error\n\n  var onabort = req.onabort;\n\n  req.onabort = function () {\n    var ret = onabort.apply(req, Array.prototype.slice.call(arguments));\n    cb(new Error('XHR Aborted'));\n    cb = noop;\n    return ret;\n  };\n\n  return req;\n}","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/node_modules/xhr-request/lib/request-browser.js"],"names":["xhr","require","normalize","noop","module","exports","xhrRequest","opt","cb","uri","useJson","responseType","req","xhrRequestResult","err","resp","body","text","rawRequest","responseText","JSON","parse","e","onabort","ret","apply","Array","prototype","slice","call","arguments","Error"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAjB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,sBAAD,CAAvB;;AACA,IAAIE,IAAI,GAAG,YAAY,CAAE,CAAzB;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,UAAjB;;AACA,SAASA,UAAT,CAAqBC,GAArB,EAA0BC,EAA1B,EAA8B;AAC5B,SAAOD,GAAG,CAACE,GAAX,CAD4B,CAG5B;;AACA,MAAIC,OAAO,GAAG,KAAd;;AACA,MAAIH,GAAG,CAACI,YAAJ,KAAqB,MAAzB,EAAiC;AAC/BJ,IAAAA,GAAG,CAACI,YAAJ,GAAmB,MAAnB;AACAD,IAAAA,OAAO,GAAG,IAAV;AACD;;AAED,MAAIE,GAAG,GAAGZ,GAAG,CAACO,GAAD,EAAM,SAASM,gBAAT,CAA2BC,GAA3B,EAAgCC,IAAhC,EAAsCC,IAAtC,EAA4C;AAC7D,QAAIN,OAAO,IAAI,CAACI,GAAhB,EAAqB;AACnB,UAAI;AACF,YAAIG,IAAI,GAAGF,IAAI,CAACG,UAAL,CAAgBC,YAA3B;AACAH,QAAAA,IAAI,GAAGI,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAP;AACD,OAHD,CAGE,OAAOK,CAAP,EAAU;AACVR,QAAAA,GAAG,GAAGQ,CAAN;AACD;AACF;;AAEDP,IAAAA,IAAI,GAAGb,SAAS,CAACK,GAAD,EAAMQ,IAAN,CAAhB;AACA,QAAID,GAAJ,EAASN,EAAE,CAACM,GAAD,EAAM,IAAN,EAAYC,IAAZ,CAAF,CAAT,KACKP,EAAE,CAACM,GAAD,EAAME,IAAN,EAAYD,IAAZ,CAAF;AACLP,IAAAA,EAAE,GAAGL,IAAL;AACD,GAdY,CAAb,CAV4B,CA0B5B;;AACA,MAAIoB,OAAO,GAAGX,GAAG,CAACW,OAAlB;;AACAX,EAAAA,GAAG,CAACW,OAAJ,GAAc,YAAY;AACxB,QAAIC,GAAG,GAAGD,OAAO,CAACE,KAAR,CAAcb,GAAd,EAAmBc,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,CAAnB,CAAV;AACAtB,IAAAA,EAAE,CAAC,IAAIuB,KAAJ,CAAU,aAAV,CAAD,CAAF;AACAvB,IAAAA,EAAE,GAAGL,IAAL;AACA,WAAOqB,GAAP;AACD,GALD;;AAOA,SAAOZ,GAAP;AACD","sourcesContent":["var xhr = require('xhr')\nvar normalize = require('./normalize-response')\nvar noop = function () {}\n\nmodule.exports = xhrRequest\nfunction xhrRequest (opt, cb) {\n  delete opt.uri\n\n  // for better JSON.parse error handling than xhr module\n  var useJson = false\n  if (opt.responseType === 'json') {\n    opt.responseType = 'text'\n    useJson = true\n  }\n\n  var req = xhr(opt, function xhrRequestResult (err, resp, body) {\n    if (useJson && !err) {\n      try {\n        var text = resp.rawRequest.responseText\n        body = JSON.parse(text)\n      } catch (e) {\n        err = e\n      }\n    }\n\n    resp = normalize(opt, resp)\n    if (err) cb(err, null, resp)\n    else cb(err, body, resp)\n    cb = noop\n  })\n\n  // Patch abort() so that it also calls the callback, but with an error\n  var onabort = req.onabort\n  req.onabort = function () {\n    var ret = onabort.apply(req, Array.prototype.slice.call(arguments))\n    cb(new Error('XHR Aborted'))\n    cb = noop\n    return ret\n  }\n\n  return req\n}\n"]},"metadata":{},"sourceType":"script"}