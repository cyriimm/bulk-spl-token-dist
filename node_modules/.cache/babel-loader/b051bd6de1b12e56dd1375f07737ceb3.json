{"ast":null,"code":"var _jsxFileName = \"/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/src/components/LoadingIndicator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useEffectAfterTimeout } from '../utils/utils';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n    padding: theme.spacing(2)\n  }\n}));\nexport default function LoadingIndicator({\n  height = null,\n  delay = 500,\n  ...rest\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [visible, setVisible] = useState(false);\n  useEffectAfterTimeout(() => setVisible(true), delay);\n  let style = {};\n\n  if (height) {\n    style.height = height;\n  }\n\n  if (!visible) {\n    return height ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }, this) : null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    style: style,\n    ...rest,\n    children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoadingIndicator, \"M1nt3ZtbQHAgLBkawAwZczAxG5A=\", false, function () {\n  return [useStyles, useEffectAfterTimeout];\n});\n\n_c = LoadingIndicator;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadingIndicator\");","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/src/components/LoadingIndicator.js"],"names":["React","useState","CircularProgress","useEffectAfterTimeout","makeStyles","useStyles","theme","root","display","alignItems","justifyContent","width","height","padding","spacing","LoadingIndicator","delay","rest","classes","visible","setVisible","style"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SAASC,qBAAT,QAAsC,gBAAtC;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,UAAU,EAAE,QAFR;AAGJC,IAAAA,cAAc,EAAE,QAHZ;AAIJC,IAAAA,KAAK,EAAE,MAJH;AAKJC,IAAAA,MAAM,EAAE,MALJ;AAMJC,IAAAA,OAAO,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd;AANL;AADiC,CAAZ,CAAD,CAA5B;AAWA,eAAe,SAASC,gBAAT,CAA0B;AACvCH,EAAAA,MAAM,GAAG,IAD8B;AAEvCI,EAAAA,KAAK,GAAG,GAF+B;AAGvC,KAAGC;AAHoC,CAA1B,EAIZ;AAAA;;AACD,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,KAAD,CAAtC;AAEAE,EAAAA,qBAAqB,CAAC,MAAMiB,UAAU,CAAC,IAAD,CAAjB,EAAyBJ,KAAzB,CAArB;AAEA,MAAIK,KAAK,GAAG,EAAZ;;AACA,MAAIT,MAAJ,EAAY;AACVS,IAAAA,KAAK,CAACT,MAAN,GAAeA,MAAf;AACD;;AAED,MAAI,CAACO,OAAL,EAAc;AACZ,WAAOP,MAAM,gBAAG;AAAK,MAAA,KAAK,EAAES;AAAZ;AAAA;AAAA;AAAA;AAAA,YAAH,GAA2B,IAAxC;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACX,IAAxB;AAA8B,IAAA,KAAK,EAAEc,KAArC;AAAA,OAAgDJ,IAAhD;AAAA,2BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAxBuBF,gB;UAKNV,S,EAGhBF,qB;;;KARsBY,gB","sourcesContent":["import React, { useState } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useEffectAfterTimeout } from '../utils/utils';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n    padding: theme.spacing(2),\n  },\n}));\n\nexport default function LoadingIndicator({\n  height = null,\n  delay = 500,\n  ...rest\n}) {\n  const classes = useStyles();\n  const [visible, setVisible] = useState(false);\n\n  useEffectAfterTimeout(() => setVisible(true), delay);\n\n  let style = {};\n  if (height) {\n    style.height = height;\n  }\n\n  if (!visible) {\n    return height ? <div style={style} /> : null;\n  }\n\n  return (\n    <div className={classes.root} style={style} {...rest}>\n      <CircularProgress />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}