{"ast":null,"code":"// This was ported from https://github.com/emn178/js-sha3, with some minor\n// modifications and pruning. It is licensed under MIT:\n//\n// Copyright 2015-2016 Chen, Yi-Cyuan\n//  \n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n// \n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar HEX_CHARS = '0123456789abcdef'.split('');\nvar KECCAK_PADDING = [1, 256, 65536, 16777216];\nvar SHIFT = [0, 8, 16, 24];\nvar RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n\nvar Keccak = function Keccak(bits) {\n  return {\n    blocks: [],\n    reset: true,\n    block: 0,\n    start: 0,\n    blockCount: 1600 - (bits << 1) >> 5,\n    outputBlocks: bits >> 5,\n    s: function (s) {\n      return [].concat(s, s, s, s, s);\n    }([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n  };\n};\n\nvar update = function update(state, message) {\n  var length = message.length,\n      blocks = state.blocks,\n      byteCount = state.blockCount << 2,\n      blockCount = state.blockCount,\n      outputBlocks = state.outputBlocks,\n      s = state.s,\n      index = 0,\n      i,\n      code; // update\n\n  while (index < length) {\n    if (state.reset) {\n      state.reset = false;\n      blocks[0] = state.block;\n\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n\n    if (typeof message !== \"string\") {\n      for (i = state.start; index < length && i < byteCount; ++index) {\n        blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n      }\n    } else {\n      for (i = state.start; index < length && i < byteCount; ++index) {\n        code = message.charCodeAt(index);\n\n        if (code < 0x80) {\n          blocks[i >> 2] |= code << SHIFT[i++ & 3];\n        } else if (code < 0x800) {\n          blocks[i >> 2] |= (0xc0 | code >> 6) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n        } else if (code < 0xd800 || code >= 0xe000) {\n          blocks[i >> 2] |= (0xe0 | code >> 12) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n        } else {\n          code = 0x10000 + ((code & 0x3ff) << 10 | message.charCodeAt(++index) & 0x3ff);\n          blocks[i >> 2] |= (0xf0 | code >> 18) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code >> 12 & 0x3f) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n        }\n      }\n    }\n\n    state.lastByteIndex = i;\n\n    if (i >= byteCount) {\n      state.start = i - byteCount;\n      state.block = blocks[blockCount];\n\n      for (i = 0; i < blockCount; ++i) {\n        s[i] ^= blocks[i];\n      }\n\n      f(s);\n      state.reset = true;\n    } else {\n      state.start = i;\n    }\n  } // finalize\n\n\n  i = state.lastByteIndex;\n  blocks[i >> 2] |= KECCAK_PADDING[i & 3];\n\n  if (state.lastByteIndex === byteCount) {\n    blocks[0] = blocks[blockCount];\n\n    for (i = 1; i < blockCount + 1; ++i) {\n      blocks[i] = 0;\n    }\n  }\n\n  blocks[blockCount - 1] |= 0x80000000;\n\n  for (i = 0; i < blockCount; ++i) {\n    s[i] ^= blocks[i];\n  }\n\n  f(s); // toString\n\n  var hex = '',\n      i = 0,\n      j = 0,\n      block;\n\n  while (j < outputBlocks) {\n    for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n      block = s[i];\n      hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F] + HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F] + HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F] + HEX_CHARS[block >> 28 & 0x0F] + HEX_CHARS[block >> 24 & 0x0F];\n    }\n\n    if (j % blockCount === 0) {\n      f(s);\n      i = 0;\n    }\n  }\n\n  return \"0x\" + hex;\n};\n\nvar f = function f(s) {\n  var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n\n  for (n = 0; n < 48; n += 2) {\n    c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n    c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n    c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n    c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n    c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n    c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n    c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n    c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n    c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n    c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n    h = c8 ^ (c2 << 1 | c3 >>> 31);\n    l = c9 ^ (c3 << 1 | c2 >>> 31);\n    s[0] ^= h;\n    s[1] ^= l;\n    s[10] ^= h;\n    s[11] ^= l;\n    s[20] ^= h;\n    s[21] ^= l;\n    s[30] ^= h;\n    s[31] ^= l;\n    s[40] ^= h;\n    s[41] ^= l;\n    h = c0 ^ (c4 << 1 | c5 >>> 31);\n    l = c1 ^ (c5 << 1 | c4 >>> 31);\n    s[2] ^= h;\n    s[3] ^= l;\n    s[12] ^= h;\n    s[13] ^= l;\n    s[22] ^= h;\n    s[23] ^= l;\n    s[32] ^= h;\n    s[33] ^= l;\n    s[42] ^= h;\n    s[43] ^= l;\n    h = c2 ^ (c6 << 1 | c7 >>> 31);\n    l = c3 ^ (c7 << 1 | c6 >>> 31);\n    s[4] ^= h;\n    s[5] ^= l;\n    s[14] ^= h;\n    s[15] ^= l;\n    s[24] ^= h;\n    s[25] ^= l;\n    s[34] ^= h;\n    s[35] ^= l;\n    s[44] ^= h;\n    s[45] ^= l;\n    h = c4 ^ (c8 << 1 | c9 >>> 31);\n    l = c5 ^ (c9 << 1 | c8 >>> 31);\n    s[6] ^= h;\n    s[7] ^= l;\n    s[16] ^= h;\n    s[17] ^= l;\n    s[26] ^= h;\n    s[27] ^= l;\n    s[36] ^= h;\n    s[37] ^= l;\n    s[46] ^= h;\n    s[47] ^= l;\n    h = c6 ^ (c0 << 1 | c1 >>> 31);\n    l = c7 ^ (c1 << 1 | c0 >>> 31);\n    s[8] ^= h;\n    s[9] ^= l;\n    s[18] ^= h;\n    s[19] ^= l;\n    s[28] ^= h;\n    s[29] ^= l;\n    s[38] ^= h;\n    s[39] ^= l;\n    s[48] ^= h;\n    s[49] ^= l;\n    b0 = s[0];\n    b1 = s[1];\n    b32 = s[11] << 4 | s[10] >>> 28;\n    b33 = s[10] << 4 | s[11] >>> 28;\n    b14 = s[20] << 3 | s[21] >>> 29;\n    b15 = s[21] << 3 | s[20] >>> 29;\n    b46 = s[31] << 9 | s[30] >>> 23;\n    b47 = s[30] << 9 | s[31] >>> 23;\n    b28 = s[40] << 18 | s[41] >>> 14;\n    b29 = s[41] << 18 | s[40] >>> 14;\n    b20 = s[2] << 1 | s[3] >>> 31;\n    b21 = s[3] << 1 | s[2] >>> 31;\n    b2 = s[13] << 12 | s[12] >>> 20;\n    b3 = s[12] << 12 | s[13] >>> 20;\n    b34 = s[22] << 10 | s[23] >>> 22;\n    b35 = s[23] << 10 | s[22] >>> 22;\n    b16 = s[33] << 13 | s[32] >>> 19;\n    b17 = s[32] << 13 | s[33] >>> 19;\n    b48 = s[42] << 2 | s[43] >>> 30;\n    b49 = s[43] << 2 | s[42] >>> 30;\n    b40 = s[5] << 30 | s[4] >>> 2;\n    b41 = s[4] << 30 | s[5] >>> 2;\n    b22 = s[14] << 6 | s[15] >>> 26;\n    b23 = s[15] << 6 | s[14] >>> 26;\n    b4 = s[25] << 11 | s[24] >>> 21;\n    b5 = s[24] << 11 | s[25] >>> 21;\n    b36 = s[34] << 15 | s[35] >>> 17;\n    b37 = s[35] << 15 | s[34] >>> 17;\n    b18 = s[45] << 29 | s[44] >>> 3;\n    b19 = s[44] << 29 | s[45] >>> 3;\n    b10 = s[6] << 28 | s[7] >>> 4;\n    b11 = s[7] << 28 | s[6] >>> 4;\n    b42 = s[17] << 23 | s[16] >>> 9;\n    b43 = s[16] << 23 | s[17] >>> 9;\n    b24 = s[26] << 25 | s[27] >>> 7;\n    b25 = s[27] << 25 | s[26] >>> 7;\n    b6 = s[36] << 21 | s[37] >>> 11;\n    b7 = s[37] << 21 | s[36] >>> 11;\n    b38 = s[47] << 24 | s[46] >>> 8;\n    b39 = s[46] << 24 | s[47] >>> 8;\n    b30 = s[8] << 27 | s[9] >>> 5;\n    b31 = s[9] << 27 | s[8] >>> 5;\n    b12 = s[18] << 20 | s[19] >>> 12;\n    b13 = s[19] << 20 | s[18] >>> 12;\n    b44 = s[29] << 7 | s[28] >>> 25;\n    b45 = s[28] << 7 | s[29] >>> 25;\n    b26 = s[38] << 8 | s[39] >>> 24;\n    b27 = s[39] << 8 | s[38] >>> 24;\n    b8 = s[48] << 14 | s[49] >>> 18;\n    b9 = s[49] << 14 | s[48] >>> 18;\n    s[0] = b0 ^ ~b2 & b4;\n    s[1] = b1 ^ ~b3 & b5;\n    s[10] = b10 ^ ~b12 & b14;\n    s[11] = b11 ^ ~b13 & b15;\n    s[20] = b20 ^ ~b22 & b24;\n    s[21] = b21 ^ ~b23 & b25;\n    s[30] = b30 ^ ~b32 & b34;\n    s[31] = b31 ^ ~b33 & b35;\n    s[40] = b40 ^ ~b42 & b44;\n    s[41] = b41 ^ ~b43 & b45;\n    s[2] = b2 ^ ~b4 & b6;\n    s[3] = b3 ^ ~b5 & b7;\n    s[12] = b12 ^ ~b14 & b16;\n    s[13] = b13 ^ ~b15 & b17;\n    s[22] = b22 ^ ~b24 & b26;\n    s[23] = b23 ^ ~b25 & b27;\n    s[32] = b32 ^ ~b34 & b36;\n    s[33] = b33 ^ ~b35 & b37;\n    s[42] = b42 ^ ~b44 & b46;\n    s[43] = b43 ^ ~b45 & b47;\n    s[4] = b4 ^ ~b6 & b8;\n    s[5] = b5 ^ ~b7 & b9;\n    s[14] = b14 ^ ~b16 & b18;\n    s[15] = b15 ^ ~b17 & b19;\n    s[24] = b24 ^ ~b26 & b28;\n    s[25] = b25 ^ ~b27 & b29;\n    s[34] = b34 ^ ~b36 & b38;\n    s[35] = b35 ^ ~b37 & b39;\n    s[44] = b44 ^ ~b46 & b48;\n    s[45] = b45 ^ ~b47 & b49;\n    s[6] = b6 ^ ~b8 & b0;\n    s[7] = b7 ^ ~b9 & b1;\n    s[16] = b16 ^ ~b18 & b10;\n    s[17] = b17 ^ ~b19 & b11;\n    s[26] = b26 ^ ~b28 & b20;\n    s[27] = b27 ^ ~b29 & b21;\n    s[36] = b36 ^ ~b38 & b30;\n    s[37] = b37 ^ ~b39 & b31;\n    s[46] = b46 ^ ~b48 & b40;\n    s[47] = b47 ^ ~b49 & b41;\n    s[8] = b8 ^ ~b0 & b2;\n    s[9] = b9 ^ ~b1 & b3;\n    s[18] = b18 ^ ~b10 & b12;\n    s[19] = b19 ^ ~b11 & b13;\n    s[28] = b28 ^ ~b20 & b22;\n    s[29] = b29 ^ ~b21 & b23;\n    s[38] = b38 ^ ~b30 & b32;\n    s[39] = b39 ^ ~b31 & b33;\n    s[48] = b48 ^ ~b40 & b42;\n    s[49] = b49 ^ ~b41 & b43;\n    s[0] ^= RC[n];\n    s[1] ^= RC[n + 1];\n  }\n};\n\nvar keccak = function keccak(bits) {\n  return function (str) {\n    var msg;\n\n    if (str.slice(0, 2) === \"0x\") {\n      msg = [];\n\n      for (var i = 2, l = str.length; i < l; i += 2) {\n        msg.push(parseInt(str.slice(i, i + 2), 16));\n      }\n    } else {\n      msg = str;\n    }\n\n    return update(Keccak(bits, bits), msg);\n  };\n};\n\nmodule.exports = {\n  keccak256: keccak(256),\n  keccak512: keccak(512),\n  keccak256s: keccak(256),\n  keccak512s: keccak(512)\n};","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/node_modules/swarm-js/node_modules/eth-lib/lib/hash.js"],"names":["HEX_CHARS","split","KECCAK_PADDING","SHIFT","RC","Keccak","bits","blocks","reset","block","start","blockCount","outputBlocks","s","concat","update","state","message","length","byteCount","index","i","code","charCodeAt","lastByteIndex","f","hex","j","h","l","n","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49","keccak","str","msg","slice","push","parseInt","module","exports","keccak256","keccak512","keccak256s","keccak512s"],"mappings":"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","sourcesContent":["// This was ported from https://github.com/emn178/js-sha3, with some minor\n// modifications and pruning. It is licensed under MIT:\n//\n// Copyright 2015-2016 Chen, Yi-Cyuan\n//  \n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n// \n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar HEX_CHARS = '0123456789abcdef'.split('');\nvar KECCAK_PADDING = [1, 256, 65536, 16777216];\nvar SHIFT = [0, 8, 16, 24];\nvar RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n\nvar Keccak = function Keccak(bits) {\n  return {\n    blocks: [],\n    reset: true,\n    block: 0,\n    start: 0,\n    blockCount: 1600 - (bits << 1) >> 5,\n    outputBlocks: bits >> 5,\n    s: function (s) {\n      return [].concat(s, s, s, s, s);\n    }([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n  };\n};\n\nvar update = function update(state, message) {\n  var length = message.length,\n      blocks = state.blocks,\n      byteCount = state.blockCount << 2,\n      blockCount = state.blockCount,\n      outputBlocks = state.outputBlocks,\n      s = state.s,\n      index = 0,\n      i,\n      code;\n\n  // update\n  while (index < length) {\n    if (state.reset) {\n      state.reset = false;\n      blocks[0] = state.block;\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    if (typeof message !== \"string\") {\n      for (i = state.start; index < length && i < byteCount; ++index) {\n        blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n      }\n    } else {\n      for (i = state.start; index < length && i < byteCount; ++index) {\n        code = message.charCodeAt(index);\n        if (code < 0x80) {\n          blocks[i >> 2] |= code << SHIFT[i++ & 3];\n        } else if (code < 0x800) {\n          blocks[i >> 2] |= (0xc0 | code >> 6) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n        } else if (code < 0xd800 || code >= 0xe000) {\n          blocks[i >> 2] |= (0xe0 | code >> 12) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n        } else {\n          code = 0x10000 + ((code & 0x3ff) << 10 | message.charCodeAt(++index) & 0x3ff);\n          blocks[i >> 2] |= (0xf0 | code >> 18) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code >> 12 & 0x3f) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n        }\n      }\n    }\n    state.lastByteIndex = i;\n    if (i >= byteCount) {\n      state.start = i - byteCount;\n      state.block = blocks[blockCount];\n      for (i = 0; i < blockCount; ++i) {\n        s[i] ^= blocks[i];\n      }\n      f(s);\n      state.reset = true;\n    } else {\n      state.start = i;\n    }\n  }\n\n  // finalize\n  i = state.lastByteIndex;\n  blocks[i >> 2] |= KECCAK_PADDING[i & 3];\n  if (state.lastByteIndex === byteCount) {\n    blocks[0] = blocks[blockCount];\n    for (i = 1; i < blockCount + 1; ++i) {\n      blocks[i] = 0;\n    }\n  }\n  blocks[blockCount - 1] |= 0x80000000;\n  for (i = 0; i < blockCount; ++i) {\n    s[i] ^= blocks[i];\n  }\n  f(s);\n\n  // toString\n  var hex = '',\n      i = 0,\n      j = 0,\n      block;\n  while (j < outputBlocks) {\n    for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n      block = s[i];\n      hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F] + HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F] + HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F] + HEX_CHARS[block >> 28 & 0x0F] + HEX_CHARS[block >> 24 & 0x0F];\n    }\n    if (j % blockCount === 0) {\n      f(s);\n      i = 0;\n    }\n  }\n  return \"0x\" + hex;\n};\n\nvar f = function f(s) {\n  var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n\n  for (n = 0; n < 48; n += 2) {\n    c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n    c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n    c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n    c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n    c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n    c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n    c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n    c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n    c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n    c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n    h = c8 ^ (c2 << 1 | c3 >>> 31);\n    l = c9 ^ (c3 << 1 | c2 >>> 31);\n    s[0] ^= h;\n    s[1] ^= l;\n    s[10] ^= h;\n    s[11] ^= l;\n    s[20] ^= h;\n    s[21] ^= l;\n    s[30] ^= h;\n    s[31] ^= l;\n    s[40] ^= h;\n    s[41] ^= l;\n    h = c0 ^ (c4 << 1 | c5 >>> 31);\n    l = c1 ^ (c5 << 1 | c4 >>> 31);\n    s[2] ^= h;\n    s[3] ^= l;\n    s[12] ^= h;\n    s[13] ^= l;\n    s[22] ^= h;\n    s[23] ^= l;\n    s[32] ^= h;\n    s[33] ^= l;\n    s[42] ^= h;\n    s[43] ^= l;\n    h = c2 ^ (c6 << 1 | c7 >>> 31);\n    l = c3 ^ (c7 << 1 | c6 >>> 31);\n    s[4] ^= h;\n    s[5] ^= l;\n    s[14] ^= h;\n    s[15] ^= l;\n    s[24] ^= h;\n    s[25] ^= l;\n    s[34] ^= h;\n    s[35] ^= l;\n    s[44] ^= h;\n    s[45] ^= l;\n    h = c4 ^ (c8 << 1 | c9 >>> 31);\n    l = c5 ^ (c9 << 1 | c8 >>> 31);\n    s[6] ^= h;\n    s[7] ^= l;\n    s[16] ^= h;\n    s[17] ^= l;\n    s[26] ^= h;\n    s[27] ^= l;\n    s[36] ^= h;\n    s[37] ^= l;\n    s[46] ^= h;\n    s[47] ^= l;\n    h = c6 ^ (c0 << 1 | c1 >>> 31);\n    l = c7 ^ (c1 << 1 | c0 >>> 31);\n    s[8] ^= h;\n    s[9] ^= l;\n    s[18] ^= h;\n    s[19] ^= l;\n    s[28] ^= h;\n    s[29] ^= l;\n    s[38] ^= h;\n    s[39] ^= l;\n    s[48] ^= h;\n    s[49] ^= l;\n\n    b0 = s[0];\n    b1 = s[1];\n    b32 = s[11] << 4 | s[10] >>> 28;\n    b33 = s[10] << 4 | s[11] >>> 28;\n    b14 = s[20] << 3 | s[21] >>> 29;\n    b15 = s[21] << 3 | s[20] >>> 29;\n    b46 = s[31] << 9 | s[30] >>> 23;\n    b47 = s[30] << 9 | s[31] >>> 23;\n    b28 = s[40] << 18 | s[41] >>> 14;\n    b29 = s[41] << 18 | s[40] >>> 14;\n    b20 = s[2] << 1 | s[3] >>> 31;\n    b21 = s[3] << 1 | s[2] >>> 31;\n    b2 = s[13] << 12 | s[12] >>> 20;\n    b3 = s[12] << 12 | s[13] >>> 20;\n    b34 = s[22] << 10 | s[23] >>> 22;\n    b35 = s[23] << 10 | s[22] >>> 22;\n    b16 = s[33] << 13 | s[32] >>> 19;\n    b17 = s[32] << 13 | s[33] >>> 19;\n    b48 = s[42] << 2 | s[43] >>> 30;\n    b49 = s[43] << 2 | s[42] >>> 30;\n    b40 = s[5] << 30 | s[4] >>> 2;\n    b41 = s[4] << 30 | s[5] >>> 2;\n    b22 = s[14] << 6 | s[15] >>> 26;\n    b23 = s[15] << 6 | s[14] >>> 26;\n    b4 = s[25] << 11 | s[24] >>> 21;\n    b5 = s[24] << 11 | s[25] >>> 21;\n    b36 = s[34] << 15 | s[35] >>> 17;\n    b37 = s[35] << 15 | s[34] >>> 17;\n    b18 = s[45] << 29 | s[44] >>> 3;\n    b19 = s[44] << 29 | s[45] >>> 3;\n    b10 = s[6] << 28 | s[7] >>> 4;\n    b11 = s[7] << 28 | s[6] >>> 4;\n    b42 = s[17] << 23 | s[16] >>> 9;\n    b43 = s[16] << 23 | s[17] >>> 9;\n    b24 = s[26] << 25 | s[27] >>> 7;\n    b25 = s[27] << 25 | s[26] >>> 7;\n    b6 = s[36] << 21 | s[37] >>> 11;\n    b7 = s[37] << 21 | s[36] >>> 11;\n    b38 = s[47] << 24 | s[46] >>> 8;\n    b39 = s[46] << 24 | s[47] >>> 8;\n    b30 = s[8] << 27 | s[9] >>> 5;\n    b31 = s[9] << 27 | s[8] >>> 5;\n    b12 = s[18] << 20 | s[19] >>> 12;\n    b13 = s[19] << 20 | s[18] >>> 12;\n    b44 = s[29] << 7 | s[28] >>> 25;\n    b45 = s[28] << 7 | s[29] >>> 25;\n    b26 = s[38] << 8 | s[39] >>> 24;\n    b27 = s[39] << 8 | s[38] >>> 24;\n    b8 = s[48] << 14 | s[49] >>> 18;\n    b9 = s[49] << 14 | s[48] >>> 18;\n\n    s[0] = b0 ^ ~b2 & b4;\n    s[1] = b1 ^ ~b3 & b5;\n    s[10] = b10 ^ ~b12 & b14;\n    s[11] = b11 ^ ~b13 & b15;\n    s[20] = b20 ^ ~b22 & b24;\n    s[21] = b21 ^ ~b23 & b25;\n    s[30] = b30 ^ ~b32 & b34;\n    s[31] = b31 ^ ~b33 & b35;\n    s[40] = b40 ^ ~b42 & b44;\n    s[41] = b41 ^ ~b43 & b45;\n    s[2] = b2 ^ ~b4 & b6;\n    s[3] = b3 ^ ~b5 & b7;\n    s[12] = b12 ^ ~b14 & b16;\n    s[13] = b13 ^ ~b15 & b17;\n    s[22] = b22 ^ ~b24 & b26;\n    s[23] = b23 ^ ~b25 & b27;\n    s[32] = b32 ^ ~b34 & b36;\n    s[33] = b33 ^ ~b35 & b37;\n    s[42] = b42 ^ ~b44 & b46;\n    s[43] = b43 ^ ~b45 & b47;\n    s[4] = b4 ^ ~b6 & b8;\n    s[5] = b5 ^ ~b7 & b9;\n    s[14] = b14 ^ ~b16 & b18;\n    s[15] = b15 ^ ~b17 & b19;\n    s[24] = b24 ^ ~b26 & b28;\n    s[25] = b25 ^ ~b27 & b29;\n    s[34] = b34 ^ ~b36 & b38;\n    s[35] = b35 ^ ~b37 & b39;\n    s[44] = b44 ^ ~b46 & b48;\n    s[45] = b45 ^ ~b47 & b49;\n    s[6] = b6 ^ ~b8 & b0;\n    s[7] = b7 ^ ~b9 & b1;\n    s[16] = b16 ^ ~b18 & b10;\n    s[17] = b17 ^ ~b19 & b11;\n    s[26] = b26 ^ ~b28 & b20;\n    s[27] = b27 ^ ~b29 & b21;\n    s[36] = b36 ^ ~b38 & b30;\n    s[37] = b37 ^ ~b39 & b31;\n    s[46] = b46 ^ ~b48 & b40;\n    s[47] = b47 ^ ~b49 & b41;\n    s[8] = b8 ^ ~b0 & b2;\n    s[9] = b9 ^ ~b1 & b3;\n    s[18] = b18 ^ ~b10 & b12;\n    s[19] = b19 ^ ~b11 & b13;\n    s[28] = b28 ^ ~b20 & b22;\n    s[29] = b29 ^ ~b21 & b23;\n    s[38] = b38 ^ ~b30 & b32;\n    s[39] = b39 ^ ~b31 & b33;\n    s[48] = b48 ^ ~b40 & b42;\n    s[49] = b49 ^ ~b41 & b43;\n\n    s[0] ^= RC[n];\n    s[1] ^= RC[n + 1];\n  }\n};\n\nvar keccak = function keccak(bits) {\n  return function (str) {\n    var msg;\n    if (str.slice(0, 2) === \"0x\") {\n      msg = [];\n      for (var i = 2, l = str.length; i < l; i += 2) {\n        msg.push(parseInt(str.slice(i, i + 2), 16));\n      }\n    } else {\n      msg = str;\n    }\n    return update(Keccak(bits, bits), msg);\n  };\n};\n\nmodule.exports = {\n  keccak256: keccak(256),\n  keccak512: keccak(512),\n  keccak256s: keccak(256),\n  keccak512s: keccak(512)\n};"]},"metadata":{},"sourceType":"script"}