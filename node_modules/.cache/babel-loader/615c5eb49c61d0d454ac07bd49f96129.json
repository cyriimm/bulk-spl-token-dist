{"ast":null,"code":"\"use strict\"; // This file is imported from secp256k1 v3\n// https://github.com/cryptocoinjs/secp256k1-node/blob/master/LICENSE\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar EC_PRIVKEY_EXPORT_DER_COMPRESSED = Buffer.from([// begin\n0x30, 0x81, 0xd3, 0x02, 0x01, 0x01, 0x04, 0x20, // private key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // middle\n0xa0, 0x81, 0x85, 0x30, 0x81, 0x82, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04, 0x21, 0x02, 0x79, 0xbe, 0x66, 0x7e, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xce, 0x87, 0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xce, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8, 0x17, 0x98, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xba, 0xae, 0xdc, 0xe6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5e, 0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x24, 0x03, 0x22, 0x00, // public key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]);\nvar EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED = Buffer.from([// begin\n0x30, 0x82, 0x01, 0x13, 0x02, 0x01, 0x01, 0x04, 0x20, // private key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // middle\n0xa0, 0x81, 0xa5, 0x30, 0x81, 0xa2, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04, 0x41, 0x04, 0x79, 0xbe, 0x66, 0x7e, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xce, 0x87, 0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xce, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8, 0x17, 0x98, 0x48, 0x3a, 0xda, 0x77, 0x26, 0xa3, 0xc4, 0x65, 0x5d, 0xa4, 0xfb, 0xfc, 0x0e, 0x11, 0x08, 0xa8, 0xfd, 0x17, 0xb4, 0x48, 0xa6, 0x85, 0x54, 0x19, 0x9c, 0x47, 0xd0, 0x8f, 0xfb, 0x10, 0xd4, 0xb8, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xba, 0xae, 0xdc, 0xe6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5e, 0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x44, 0x03, 0x42, 0x00, // public key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]);\n\nexports.privateKeyExport = function (privateKey, publicKey, compressed) {\n  if (compressed === void 0) {\n    compressed = true;\n  }\n\n  var result = Buffer.from(compressed ? EC_PRIVKEY_EXPORT_DER_COMPRESSED : EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED);\n  privateKey.copy(result, compressed ? 8 : 9);\n  publicKey.copy(result, compressed ? 181 : 214);\n  return result;\n};\n\nexports.privateKeyImport = function (privateKey) {\n  var length = privateKey.length; // sequence header\n\n  var index = 0;\n  if (length < index + 1 || privateKey[index] !== 0x30) return null;\n  index += 1; // sequence length constructor\n\n  if (length < index + 1 || !(privateKey[index] & 0x80)) return null;\n  var lenb = privateKey[index] & 0x7f;\n  index += 1;\n  if (lenb < 1 || lenb > 2) return null;\n  if (length < index + lenb) return null; // sequence length\n\n  var len = privateKey[index + lenb - 1] | (lenb > 1 ? privateKey[index + lenb - 2] << 8 : 0);\n  index += lenb;\n  if (length < index + len) return null; // sequence element 0: version number (=1)\n\n  if (length < index + 3 || privateKey[index] !== 0x02 || privateKey[index + 1] !== 0x01 || privateKey[index + 2] !== 0x01) {\n    return null;\n  }\n\n  index += 3; // sequence element 1: octet string, up to 32 bytes\n\n  if (length < index + 2 || privateKey[index] !== 0x04 || privateKey[index + 1] > 0x20 || length < index + 2 + privateKey[index + 1]) {\n    return null;\n  }\n\n  return privateKey.slice(index + 2, index + 2 + privateKey[index + 1]);\n};\n\nexports.signatureImportLax = function (signature) {\n  var r = Buffer.alloc(32, 0);\n  var s = Buffer.alloc(32, 0);\n  var length = signature.length;\n  var index = 0; // sequence tag byte\n\n  if (signature[index++] !== 0x30) {\n    return null;\n  } // sequence length byte\n\n\n  var lenbyte = signature[index++];\n\n  if (lenbyte & 0x80) {\n    index += lenbyte - 0x80;\n\n    if (index > length) {\n      return null;\n    }\n  } // sequence tag byte for r\n\n\n  if (signature[index++] !== 0x02) {\n    return null;\n  } // length for r\n\n\n  var rlen = signature[index++];\n\n  if (rlen & 0x80) {\n    lenbyte = rlen - 0x80;\n\n    if (index + lenbyte > length) {\n      return null;\n    }\n\n    for (; lenbyte > 0 && signature[index] === 0x00; index += 1, lenbyte -= 1);\n\n    for (rlen = 0; lenbyte > 0; index += 1, lenbyte -= 1) rlen = (rlen << 8) + signature[index];\n  }\n\n  if (rlen > length - index) {\n    return null;\n  }\n\n  var rindex = index;\n  index += rlen; // sequence tag byte for s\n\n  if (signature[index++] !== 0x02) {\n    return null;\n  } // length for s\n\n\n  var slen = signature[index++];\n\n  if (slen & 0x80) {\n    lenbyte = slen - 0x80;\n\n    if (index + lenbyte > length) {\n      return null;\n    }\n\n    for (; lenbyte > 0 && signature[index] === 0x00; index += 1, lenbyte -= 1);\n\n    for (slen = 0; lenbyte > 0; index += 1, lenbyte -= 1) slen = (slen << 8) + signature[index];\n  }\n\n  if (slen > length - index) {\n    return null;\n  }\n\n  var sindex = index;\n  index += slen; // ignore leading zeros in r\n\n  for (; rlen > 0 && signature[rindex] === 0x00; rlen -= 1, rindex += 1); // copy r value\n\n\n  if (rlen > 32) {\n    return null;\n  }\n\n  var rvalue = signature.slice(rindex, rindex + rlen);\n  rvalue.copy(r, 32 - rvalue.length); // ignore leading zeros in s\n\n  for (; slen > 0 && signature[sindex] === 0x00; slen -= 1, sindex += 1); // copy s value\n\n\n  if (slen > 32) {\n    return null;\n  }\n\n  var svalue = signature.slice(sindex, sindex + slen);\n  svalue.copy(s, 32 - svalue.length);\n  return {\n    r: r,\n    s: s\n  };\n};","map":{"version":3,"sources":["../../src/secp256k1v3-lib/der.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n// This file is imported from secp256k1 v3\n// https://github.com/cryptocoinjs/secp256k1-node/blob/master/LICENSE\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EC_PRIVKEY_EXPORT_DER_COMPRESSED = Buffer.from([\n    // begin\n    0x30,\n    0x81,\n    0xd3,\n    0x02,\n    0x01,\n    0x01,\n    0x04,\n    0x20,\n    // private key\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    // middle\n    0xa0,\n    0x81,\n    0x85,\n    0x30,\n    0x81,\n    0x82,\n    0x02,\n    0x01,\n    0x01,\n    0x30,\n    0x2c,\n    0x06,\n    0x07,\n    0x2a,\n    0x86,\n    0x48,\n    0xce,\n    0x3d,\n    0x01,\n    0x01,\n    0x02,\n    0x21,\n    0x00,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xfe,\n    0xff,\n    0xff,\n    0xfc,\n    0x2f,\n    0x30,\n    0x06,\n    0x04,\n    0x01,\n    0x00,\n    0x04,\n    0x01,\n    0x07,\n    0x04,\n    0x21,\n    0x02,\n    0x79,\n    0xbe,\n    0x66,\n    0x7e,\n    0xf9,\n    0xdc,\n    0xbb,\n    0xac,\n    0x55,\n    0xa0,\n    0x62,\n    0x95,\n    0xce,\n    0x87,\n    0x0b,\n    0x07,\n    0x02,\n    0x9b,\n    0xfc,\n    0xdb,\n    0x2d,\n    0xce,\n    0x28,\n    0xd9,\n    0x59,\n    0xf2,\n    0x81,\n    0x5b,\n    0x16,\n    0xf8,\n    0x17,\n    0x98,\n    0x02,\n    0x21,\n    0x00,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xfe,\n    0xba,\n    0xae,\n    0xdc,\n    0xe6,\n    0xaf,\n    0x48,\n    0xa0,\n    0x3b,\n    0xbf,\n    0xd2,\n    0x5e,\n    0x8c,\n    0xd0,\n    0x36,\n    0x41,\n    0x41,\n    0x02,\n    0x01,\n    0x01,\n    0xa1,\n    0x24,\n    0x03,\n    0x22,\n    0x00,\n    // public key\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n]);\nvar EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED = Buffer.from([\n    // begin\n    0x30,\n    0x82,\n    0x01,\n    0x13,\n    0x02,\n    0x01,\n    0x01,\n    0x04,\n    0x20,\n    // private key\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    // middle\n    0xa0,\n    0x81,\n    0xa5,\n    0x30,\n    0x81,\n    0xa2,\n    0x02,\n    0x01,\n    0x01,\n    0x30,\n    0x2c,\n    0x06,\n    0x07,\n    0x2a,\n    0x86,\n    0x48,\n    0xce,\n    0x3d,\n    0x01,\n    0x01,\n    0x02,\n    0x21,\n    0x00,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xfe,\n    0xff,\n    0xff,\n    0xfc,\n    0x2f,\n    0x30,\n    0x06,\n    0x04,\n    0x01,\n    0x00,\n    0x04,\n    0x01,\n    0x07,\n    0x04,\n    0x41,\n    0x04,\n    0x79,\n    0xbe,\n    0x66,\n    0x7e,\n    0xf9,\n    0xdc,\n    0xbb,\n    0xac,\n    0x55,\n    0xa0,\n    0x62,\n    0x95,\n    0xce,\n    0x87,\n    0x0b,\n    0x07,\n    0x02,\n    0x9b,\n    0xfc,\n    0xdb,\n    0x2d,\n    0xce,\n    0x28,\n    0xd9,\n    0x59,\n    0xf2,\n    0x81,\n    0x5b,\n    0x16,\n    0xf8,\n    0x17,\n    0x98,\n    0x48,\n    0x3a,\n    0xda,\n    0x77,\n    0x26,\n    0xa3,\n    0xc4,\n    0x65,\n    0x5d,\n    0xa4,\n    0xfb,\n    0xfc,\n    0x0e,\n    0x11,\n    0x08,\n    0xa8,\n    0xfd,\n    0x17,\n    0xb4,\n    0x48,\n    0xa6,\n    0x85,\n    0x54,\n    0x19,\n    0x9c,\n    0x47,\n    0xd0,\n    0x8f,\n    0xfb,\n    0x10,\n    0xd4,\n    0xb8,\n    0x02,\n    0x21,\n    0x00,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xfe,\n    0xba,\n    0xae,\n    0xdc,\n    0xe6,\n    0xaf,\n    0x48,\n    0xa0,\n    0x3b,\n    0xbf,\n    0xd2,\n    0x5e,\n    0x8c,\n    0xd0,\n    0x36,\n    0x41,\n    0x41,\n    0x02,\n    0x01,\n    0x01,\n    0xa1,\n    0x44,\n    0x03,\n    0x42,\n    0x00,\n    // public key\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n]);\nexports.privateKeyExport = function (privateKey, publicKey, compressed) {\n    if (compressed === void 0) { compressed = true; }\n    var result = Buffer.from(compressed ? EC_PRIVKEY_EXPORT_DER_COMPRESSED : EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED);\n    privateKey.copy(result, compressed ? 8 : 9);\n    publicKey.copy(result, compressed ? 181 : 214);\n    return result;\n};\nexports.privateKeyImport = function (privateKey) {\n    var length = privateKey.length;\n    // sequence header\n    var index = 0;\n    if (length < index + 1 || privateKey[index] !== 0x30)\n        return null;\n    index += 1;\n    // sequence length constructor\n    if (length < index + 1 || !(privateKey[index] & 0x80))\n        return null;\n    var lenb = privateKey[index] & 0x7f;\n    index += 1;\n    if (lenb < 1 || lenb > 2)\n        return null;\n    if (length < index + lenb)\n        return null;\n    // sequence length\n    var len = privateKey[index + lenb - 1] | (lenb > 1 ? privateKey[index + lenb - 2] << 8 : 0);\n    index += lenb;\n    if (length < index + len)\n        return null;\n    // sequence element 0: version number (=1)\n    if (length < index + 3 ||\n        privateKey[index] !== 0x02 ||\n        privateKey[index + 1] !== 0x01 ||\n        privateKey[index + 2] !== 0x01) {\n        return null;\n    }\n    index += 3;\n    // sequence element 1: octet string, up to 32 bytes\n    if (length < index + 2 ||\n        privateKey[index] !== 0x04 ||\n        privateKey[index + 1] > 0x20 ||\n        length < index + 2 + privateKey[index + 1]) {\n        return null;\n    }\n    return privateKey.slice(index + 2, index + 2 + privateKey[index + 1]);\n};\nexports.signatureImportLax = function (signature) {\n    var r = Buffer.alloc(32, 0);\n    var s = Buffer.alloc(32, 0);\n    var length = signature.length;\n    var index = 0;\n    // sequence tag byte\n    if (signature[index++] !== 0x30) {\n        return null;\n    }\n    // sequence length byte\n    var lenbyte = signature[index++];\n    if (lenbyte & 0x80) {\n        index += lenbyte - 0x80;\n        if (index > length) {\n            return null;\n        }\n    }\n    // sequence tag byte for r\n    if (signature[index++] !== 0x02) {\n        return null;\n    }\n    // length for r\n    var rlen = signature[index++];\n    if (rlen & 0x80) {\n        lenbyte = rlen - 0x80;\n        if (index + lenbyte > length) {\n            return null;\n        }\n        for (; lenbyte > 0 && signature[index] === 0x00; index += 1, lenbyte -= 1)\n            ;\n        for (rlen = 0; lenbyte > 0; index += 1, lenbyte -= 1)\n            rlen = (rlen << 8) + signature[index];\n    }\n    if (rlen > length - index) {\n        return null;\n    }\n    var rindex = index;\n    index += rlen;\n    // sequence tag byte for s\n    if (signature[index++] !== 0x02) {\n        return null;\n    }\n    // length for s\n    var slen = signature[index++];\n    if (slen & 0x80) {\n        lenbyte = slen - 0x80;\n        if (index + lenbyte > length) {\n            return null;\n        }\n        for (; lenbyte > 0 && signature[index] === 0x00; index += 1, lenbyte -= 1)\n            ;\n        for (slen = 0; lenbyte > 0; index += 1, lenbyte -= 1)\n            slen = (slen << 8) + signature[index];\n    }\n    if (slen > length - index) {\n        return null;\n    }\n    var sindex = index;\n    index += slen;\n    // ignore leading zeros in r\n    for (; rlen > 0 && signature[rindex] === 0x00; rlen -= 1, rindex += 1)\n        ;\n    // copy r value\n    if (rlen > 32) {\n        return null;\n    }\n    var rvalue = signature.slice(rindex, rindex + rlen);\n    rvalue.copy(r, 32 - rvalue.length);\n    // ignore leading zeros in s\n    for (; slen > 0 && signature[sindex] === 0x00; slen -= 1, sindex += 1)\n        ;\n    // copy s value\n    if (slen > 32) {\n        return null;\n    }\n    var svalue = signature.slice(sindex, sindex + slen);\n    svalue.copy(s, 32 - svalue.length);\n    return { r: r, s: s };\n};\n//# sourceMappingURL=der.js.map"]},"metadata":{},"sourceType":"script"}