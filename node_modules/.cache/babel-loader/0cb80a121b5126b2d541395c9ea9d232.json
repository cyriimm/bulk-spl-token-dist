{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DexInstructions = exports.decodeInstruction = exports.encodeInstruction = exports.INSTRUCTION_LAYOUT = exports.NEW_ORDER_V3_OWNER_INDEX = exports.NEW_ORDER_V3_OPEN_ORDERS_INDEX = exports.NEW_ORDER_OWNER_INDEX = exports.NEW_ORDER_OPEN_ORDERS_INDEX = exports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = exports.SETTLE_FUNDS_BASE_WALLET_INDEX = void 0;\n\nconst buffer_layout_1 = require(\"buffer-layout\");\n\nconst layout_1 = require(\"./layout\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst token_instructions_1 = require(\"./token-instructions\"); // NOTE: Update these if the position of arguments for the settleFunds instruction changes\n\n\nexports.SETTLE_FUNDS_BASE_WALLET_INDEX = 5;\nexports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = 6; // NOTE: Update these if the position of arguments for the newOrder instruction changes\n\nexports.NEW_ORDER_OPEN_ORDERS_INDEX = 1;\nexports.NEW_ORDER_OWNER_INDEX = 4; // NOTE: Update these if the position of arguments for the newOrder instruction changes\n\nexports.NEW_ORDER_V3_OPEN_ORDERS_INDEX = 1;\nexports.NEW_ORDER_V3_OWNER_INDEX = 7;\nexports.INSTRUCTION_LAYOUT = new layout_1.VersionedLayout(0, buffer_layout_1.union(buffer_layout_1.u32('instruction')));\nexports.INSTRUCTION_LAYOUT.inner.addVariant(0, buffer_layout_1.struct([layout_1.u64('baseLotSize'), layout_1.u64('quoteLotSize'), buffer_layout_1.u16('feeRateBps'), layout_1.u64('vaultSignerNonce'), layout_1.u64('quoteDustThreshold')]), 'initializeMarket');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(1, buffer_layout_1.struct([layout_1.sideLayout('side'), layout_1.u64('limitPrice'), layout_1.u64('maxQuantity'), layout_1.orderTypeLayout('orderType'), layout_1.u64('clientId')]), 'newOrder');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(2, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'matchOrders');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(3, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'consumeEvents');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(4, buffer_layout_1.struct([layout_1.sideLayout('side'), layout_1.u128('orderId'), layout_1.publicKeyLayout('openOrders'), buffer_layout_1.u8('openOrdersSlot')]), 'cancelOrder');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(5, buffer_layout_1.struct([]), 'settleFunds');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(6, buffer_layout_1.struct([layout_1.u64('clientId')]), 'cancelOrderByClientId');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(10, buffer_layout_1.struct([layout_1.sideLayout('side'), layout_1.u64('limitPrice'), layout_1.u64('maxBaseQuantity'), layout_1.u64('maxQuoteQuantity'), layout_1.selfTradeBehaviorLayout('selfTradeBehavior'), layout_1.orderTypeLayout('orderType'), layout_1.u64('clientId'), buffer_layout_1.u16('limit')]), 'newOrderV3');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(11, buffer_layout_1.struct([layout_1.sideLayout('side'), layout_1.u128('orderId')]), 'cancelOrderV2');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(12, buffer_layout_1.struct([layout_1.u64('clientId')]), 'cancelOrderByClientIdV2');\n\nfunction encodeInstruction(instruction) {\n  const b = Buffer.alloc(100);\n  return b.slice(0, exports.INSTRUCTION_LAYOUT.encode(instruction, b));\n}\n\nexports.encodeInstruction = encodeInstruction;\n\nfunction decodeInstruction(message) {\n  return exports.INSTRUCTION_LAYOUT.decode(message);\n}\n\nexports.decodeInstruction = decodeInstruction;\n\nclass DexInstructions {\n  static initializeMarket({\n    market,\n    requestQueue,\n    eventQueue,\n    bids,\n    asks,\n    baseVault,\n    quoteVault,\n    baseMint,\n    quoteMint,\n    baseLotSize,\n    quoteLotSize,\n    feeRateBps,\n    vaultSignerNonce,\n    quoteDustThreshold,\n    programId\n  }) {\n    let rentSysvar = new web3_js_1.PublicKey('SysvarRent111111111111111111111111111111111');\n    return new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: market,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: requestQueue,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: eventQueue,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: bids,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: asks,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: baseVault,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: quoteVault,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: baseMint,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: quoteMint,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: rentSysvar,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId,\n      data: encodeInstruction({\n        initializeMarket: {\n          baseLotSize,\n          quoteLotSize,\n          feeRateBps,\n          vaultSignerNonce,\n          quoteDustThreshold\n        }\n      })\n    });\n  }\n\n  static newOrder({\n    market,\n    openOrders,\n    payer,\n    owner,\n    requestQueue,\n    baseVault,\n    quoteVault,\n    side,\n    limitPrice,\n    maxQuantity,\n    orderType,\n    clientId,\n    programId,\n    feeDiscountPubkey = null\n  }) {\n    const keys = [{\n      pubkey: market,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: openOrders,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: requestQueue,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: payer,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: owner,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: baseVault,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: quoteVault,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: token_instructions_1.TOKEN_PROGRAM_ID,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n\n    if (feeDiscountPubkey) {\n      keys.push({\n        pubkey: feeDiscountPubkey,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n\n    return new web3_js_1.TransactionInstruction({\n      keys,\n      programId,\n      data: encodeInstruction({\n        newOrder: clientId ? {\n          side,\n          limitPrice,\n          maxQuantity,\n          orderType,\n          clientId\n        } : {\n          side,\n          limitPrice,\n          maxQuantity,\n          orderType\n        }\n      })\n    });\n  }\n\n  static newOrderV3({\n    market,\n    openOrders,\n    payer,\n    owner,\n    requestQueue,\n    eventQueue,\n    bids,\n    asks,\n    baseVault,\n    quoteVault,\n    side,\n    limitPrice,\n    maxBaseQuantity,\n    maxQuoteQuantity,\n    orderType,\n    clientId,\n    programId,\n    selfTradeBehavior,\n    feeDiscountPubkey = null\n  }) {\n    const keys = [{\n      pubkey: market,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: openOrders,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: requestQueue,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: eventQueue,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: bids,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: asks,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: payer,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: owner,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: baseVault,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: quoteVault,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: token_instructions_1.TOKEN_PROGRAM_ID,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n\n    if (feeDiscountPubkey) {\n      keys.push({\n        pubkey: feeDiscountPubkey,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n\n    return new web3_js_1.TransactionInstruction({\n      keys,\n      programId,\n      data: encodeInstruction({\n        newOrderV3: {\n          side,\n          limitPrice,\n          maxBaseQuantity,\n          maxQuoteQuantity,\n          selfTradeBehavior,\n          orderType,\n          clientId,\n          limit: 65535\n        }\n      })\n    });\n  }\n\n  static matchOrders({\n    market,\n    requestQueue,\n    eventQueue,\n    bids,\n    asks,\n    baseVault,\n    quoteVault,\n    limit,\n    programId\n  }) {\n    return new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: market,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: requestQueue,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: eventQueue,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: bids,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: asks,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: baseVault,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: quoteVault,\n        isSigner: false,\n        isWritable: true\n      }],\n      programId,\n      data: encodeInstruction({\n        matchOrders: {\n          limit\n        }\n      })\n    });\n  }\n\n  static consumeEvents({\n    market,\n    eventQueue,\n    openOrdersAccounts,\n    limit,\n    programId\n  }) {\n    return new web3_js_1.TransactionInstruction({\n      keys: [...openOrdersAccounts.map(account => ({\n        pubkey: account,\n        isSigner: false,\n        isWritable: true\n      })), {\n        pubkey: market,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: eventQueue,\n        isSigner: false,\n        isWritable: true\n      }],\n      programId,\n      data: encodeInstruction({\n        consumeEvents: {\n          limit\n        }\n      })\n    });\n  }\n\n  static cancelOrder({\n    market,\n    openOrders,\n    owner,\n    requestQueue,\n    side,\n    orderId,\n    openOrdersSlot,\n    programId\n  }) {\n    return new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: market,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: openOrders,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: requestQueue,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId,\n      data: encodeInstruction({\n        cancelOrder: {\n          side,\n          orderId,\n          openOrders,\n          openOrdersSlot\n        }\n      })\n    });\n  }\n\n  static cancelOrderV2({\n    market,\n    bids,\n    asks,\n    eventQueue,\n    openOrders,\n    owner,\n    side,\n    orderId,\n    openOrdersSlot,\n    programId\n  }) {\n    return new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: market,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: bids,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: asks,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: openOrders,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: eventQueue,\n        isSigner: false,\n        isWritable: true\n      }],\n      programId,\n      data: encodeInstruction({\n        cancelOrderV2: {\n          side,\n          orderId\n        }\n      })\n    });\n  }\n\n  static cancelOrderByClientId({\n    market,\n    openOrders,\n    owner,\n    requestQueue,\n    clientId,\n    programId\n  }) {\n    return new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: market,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: openOrders,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: requestQueue,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId,\n      data: encodeInstruction({\n        cancelOrderByClientId: {\n          clientId\n        }\n      })\n    });\n  }\n\n  static cancelOrderByClientIdV2({\n    market,\n    openOrders,\n    owner,\n    bids,\n    asks,\n    eventQueue,\n    clientId,\n    programId\n  }) {\n    return new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: market,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: bids,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: asks,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: openOrders,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: eventQueue,\n        isSigner: false,\n        isWritable: true\n      }],\n      programId,\n      data: encodeInstruction({\n        cancelOrderByClientIdV2: {\n          clientId\n        }\n      })\n    });\n  }\n\n  static settleFunds({\n    market,\n    openOrders,\n    owner,\n    baseVault,\n    quoteVault,\n    baseWallet,\n    quoteWallet,\n    vaultSigner,\n    programId,\n    referrerQuoteWallet = null\n  }) {\n    const keys = [{\n      pubkey: market,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: openOrders,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: owner,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: baseVault,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: quoteVault,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: baseWallet,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: quoteWallet,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: vaultSigner,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: token_instructions_1.TOKEN_PROGRAM_ID,\n      isSigner: false,\n      isWritable: false\n    }];\n\n    if (referrerQuoteWallet) {\n      keys.push({\n        pubkey: referrerQuoteWallet,\n        isSigner: false,\n        isWritable: true\n      });\n    }\n\n    return new web3_js_1.TransactionInstruction({\n      keys,\n      programId,\n      data: encodeInstruction({\n        settleFunds: {}\n      })\n    });\n  }\n\n}\n\nexports.DexInstructions = DexInstructions;","map":{"version":3,"sources":["../src/instructions.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DexInstructions = exports.decodeInstruction = exports.encodeInstruction = exports.INSTRUCTION_LAYOUT = exports.NEW_ORDER_V3_OWNER_INDEX = exports.NEW_ORDER_V3_OPEN_ORDERS_INDEX = exports.NEW_ORDER_OWNER_INDEX = exports.NEW_ORDER_OPEN_ORDERS_INDEX = exports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = exports.SETTLE_FUNDS_BASE_WALLET_INDEX = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst token_instructions_1 = require(\"./token-instructions\");\n// NOTE: Update these if the position of arguments for the settleFunds instruction changes\nexports.SETTLE_FUNDS_BASE_WALLET_INDEX = 5;\nexports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = 6;\n// NOTE: Update these if the position of arguments for the newOrder instruction changes\nexports.NEW_ORDER_OPEN_ORDERS_INDEX = 1;\nexports.NEW_ORDER_OWNER_INDEX = 4;\n// NOTE: Update these if the position of arguments for the newOrder instruction changes\nexports.NEW_ORDER_V3_OPEN_ORDERS_INDEX = 1;\nexports.NEW_ORDER_V3_OWNER_INDEX = 7;\nexports.INSTRUCTION_LAYOUT = new layout_1.VersionedLayout(0, buffer_layout_1.union(buffer_layout_1.u32('instruction')));\nexports.INSTRUCTION_LAYOUT.inner.addVariant(0, buffer_layout_1.struct([\n    layout_1.u64('baseLotSize'),\n    layout_1.u64('quoteLotSize'),\n    buffer_layout_1.u16('feeRateBps'),\n    layout_1.u64('vaultSignerNonce'),\n    layout_1.u64('quoteDustThreshold'),\n]), 'initializeMarket');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(1, buffer_layout_1.struct([\n    layout_1.sideLayout('side'),\n    layout_1.u64('limitPrice'),\n    layout_1.u64('maxQuantity'),\n    layout_1.orderTypeLayout('orderType'),\n    layout_1.u64('clientId'),\n]), 'newOrder');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(2, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'matchOrders');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(3, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'consumeEvents');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(4, buffer_layout_1.struct([\n    layout_1.sideLayout('side'),\n    layout_1.u128('orderId'),\n    layout_1.publicKeyLayout('openOrders'),\n    buffer_layout_1.u8('openOrdersSlot'),\n]), 'cancelOrder');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(5, buffer_layout_1.struct([]), 'settleFunds');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(6, buffer_layout_1.struct([layout_1.u64('clientId')]), 'cancelOrderByClientId');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(10, buffer_layout_1.struct([\n    layout_1.sideLayout('side'),\n    layout_1.u64('limitPrice'),\n    layout_1.u64('maxBaseQuantity'),\n    layout_1.u64('maxQuoteQuantity'),\n    layout_1.selfTradeBehaviorLayout('selfTradeBehavior'),\n    layout_1.orderTypeLayout('orderType'),\n    layout_1.u64('clientId'),\n    buffer_layout_1.u16('limit'),\n]), 'newOrderV3');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(11, buffer_layout_1.struct([layout_1.sideLayout('side'), layout_1.u128('orderId')]), 'cancelOrderV2');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(12, buffer_layout_1.struct([layout_1.u64('clientId')]), 'cancelOrderByClientIdV2');\nfunction encodeInstruction(instruction) {\n    const b = Buffer.alloc(100);\n    return b.slice(0, exports.INSTRUCTION_LAYOUT.encode(instruction, b));\n}\nexports.encodeInstruction = encodeInstruction;\nfunction decodeInstruction(message) {\n    return exports.INSTRUCTION_LAYOUT.decode(message);\n}\nexports.decodeInstruction = decodeInstruction;\nclass DexInstructions {\n    static initializeMarket({ market, requestQueue, eventQueue, bids, asks, baseVault, quoteVault, baseMint, quoteMint, baseLotSize, quoteLotSize, feeRateBps, vaultSignerNonce, quoteDustThreshold, programId, }) {\n        let rentSysvar = new web3_js_1.PublicKey('SysvarRent111111111111111111111111111111111');\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: baseVault, isSigner: false, isWritable: true },\n                { pubkey: quoteVault, isSigner: false, isWritable: true },\n                { pubkey: baseMint, isSigner: false, isWritable: false },\n                { pubkey: quoteMint, isSigner: false, isWritable: false },\n                { pubkey: rentSysvar, isSigner: false, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                initializeMarket: {\n                    baseLotSize,\n                    quoteLotSize,\n                    feeRateBps,\n                    vaultSignerNonce,\n                    quoteDustThreshold,\n                },\n            }),\n        });\n    }\n    static newOrder({ market, openOrders, payer, owner, requestQueue, baseVault, quoteVault, side, limitPrice, maxQuantity, orderType, clientId, programId, feeDiscountPubkey = null, }) {\n        const keys = [\n            { pubkey: market, isSigner: false, isWritable: true },\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: requestQueue, isSigner: false, isWritable: true },\n            { pubkey: payer, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: baseVault, isSigner: false, isWritable: true },\n            { pubkey: quoteVault, isSigner: false, isWritable: true },\n            { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n            { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n        ];\n        if (feeDiscountPubkey) {\n            keys.push({\n                pubkey: feeDiscountPubkey,\n                isSigner: false,\n                isWritable: false,\n            });\n        }\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                newOrder: clientId\n                    ? { side, limitPrice, maxQuantity, orderType, clientId }\n                    : { side, limitPrice, maxQuantity, orderType },\n            }),\n        });\n    }\n    static newOrderV3({ market, openOrders, payer, owner, requestQueue, eventQueue, bids, asks, baseVault, quoteVault, side, limitPrice, maxBaseQuantity, maxQuoteQuantity, orderType, clientId, programId, selfTradeBehavior, feeDiscountPubkey = null, }) {\n        const keys = [\n            { pubkey: market, isSigner: false, isWritable: true },\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: requestQueue, isSigner: false, isWritable: true },\n            { pubkey: eventQueue, isSigner: false, isWritable: true },\n            { pubkey: bids, isSigner: false, isWritable: true },\n            { pubkey: asks, isSigner: false, isWritable: true },\n            { pubkey: payer, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: baseVault, isSigner: false, isWritable: true },\n            { pubkey: quoteVault, isSigner: false, isWritable: true },\n            { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n            { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n        ];\n        if (feeDiscountPubkey) {\n            keys.push({\n                pubkey: feeDiscountPubkey,\n                isSigner: false,\n                isWritable: false,\n            });\n        }\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                newOrderV3: {\n                    side,\n                    limitPrice,\n                    maxBaseQuantity,\n                    maxQuoteQuantity,\n                    selfTradeBehavior,\n                    orderType,\n                    clientId,\n                    limit: 65535,\n                },\n            }),\n        });\n    }\n    static matchOrders({ market, requestQueue, eventQueue, bids, asks, baseVault, quoteVault, limit, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: baseVault, isSigner: false, isWritable: true },\n                { pubkey: quoteVault, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({ matchOrders: { limit } }),\n        });\n    }\n    static consumeEvents({ market, eventQueue, openOrdersAccounts, limit, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                ...openOrdersAccounts.map((account) => ({\n                    pubkey: account,\n                    isSigner: false,\n                    isWritable: true,\n                })),\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({ consumeEvents: { limit } }),\n        });\n    }\n    static cancelOrder({ market, openOrders, owner, requestQueue, side, orderId, openOrdersSlot, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrder: { side, orderId, openOrders, openOrdersSlot },\n            }),\n        });\n    }\n    static cancelOrderV2({ market, bids, asks, eventQueue, openOrders, owner, side, orderId, openOrdersSlot, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrderV2: { side, orderId },\n            }),\n        });\n    }\n    static cancelOrderByClientId({ market, openOrders, owner, requestQueue, clientId, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrderByClientId: { clientId },\n            }),\n        });\n    }\n    static cancelOrderByClientIdV2({ market, openOrders, owner, bids, asks, eventQueue, clientId, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrderByClientIdV2: { clientId },\n            }),\n        });\n    }\n    static settleFunds({ market, openOrders, owner, baseVault, quoteVault, baseWallet, quoteWallet, vaultSigner, programId, referrerQuoteWallet = null, }) {\n        const keys = [\n            { pubkey: market, isSigner: false, isWritable: true },\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: baseVault, isSigner: false, isWritable: true },\n            { pubkey: quoteVault, isSigner: false, isWritable: true },\n            { pubkey: baseWallet, isSigner: false, isWritable: true },\n            { pubkey: quoteWallet, isSigner: false, isWritable: true },\n            { pubkey: vaultSigner, isSigner: false, isWritable: false },\n            { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n        ];\n        if (referrerQuoteWallet) {\n            keys.push({\n                pubkey: referrerQuoteWallet,\n                isSigner: false,\n                isWritable: true,\n            });\n        }\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                settleFunds: {},\n            }),\n        });\n    }\n}\nexports.DexInstructions = DexInstructions;\n//# sourceMappingURL=instructions.js.map"]},"metadata":{},"sourceType":"script"}