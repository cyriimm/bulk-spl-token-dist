{"ast":null,"code":"import { clusterApiUrl } from '@solana/web3.js';\nimport { MAINNET_URL } from '../utils/connection';\nexport const CLUSTERS = [{\n  name: 'mainnet-beta',\n  apiUrl: MAINNET_URL,\n  label: 'Mainnet Beta'\n}, {\n  name: 'devnet',\n  apiUrl: clusterApiUrl('devnet'),\n  label: 'Devnet'\n}, {\n  name: 'testnet',\n  apiUrl: clusterApiUrl('testnet'),\n  label: 'Testnet'\n}, {\n  name: 'localnet',\n  apiUrl: 'http://localhost:8899',\n  label: null\n}];\nexport function clusterForEndpoint(endpoint) {\n  return CLUSTERS.find(({\n    apiUrl\n  }) => apiUrl === endpoint);\n}","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/src/utils/clusters.js"],"names":["clusterApiUrl","MAINNET_URL","CLUSTERS","name","apiUrl","label","clusterForEndpoint","endpoint","find"],"mappings":"AAAA,SAASA,aAAT,QAA8B,iBAA9B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,OAAO,MAAMC,QAAQ,GAAG,CACtB;AACEC,EAAAA,IAAI,EAAE,cADR;AAEEC,EAAAA,MAAM,EAAEH,WAFV;AAGEI,EAAAA,KAAK,EAAE;AAHT,CADsB,EAMtB;AACEF,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,MAAM,EAAEJ,aAAa,CAAC,QAAD,CAFvB;AAGEK,EAAAA,KAAK,EAAE;AAHT,CANsB,EAWtB;AACEF,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,MAAM,EAAEJ,aAAa,CAAC,SAAD,CAFvB;AAGEK,EAAAA,KAAK,EAAE;AAHT,CAXsB,EAgBtB;AACEF,EAAAA,IAAI,EAAE,UADR;AAEEC,EAAAA,MAAM,EAAE,uBAFV;AAGEC,EAAAA,KAAK,EAAE;AAHT,CAhBsB,CAAjB;AAuBP,OAAO,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAC3C,SAAOL,QAAQ,CAACM,IAAT,CAAc,CAAC;AAAEJ,IAAAA;AAAF,GAAD,KAAgBA,MAAM,KAAKG,QAAzC,CAAP;AACD","sourcesContent":["import { clusterApiUrl } from '@solana/web3.js';\nimport { MAINNET_URL } from '../utils/connection';\n\nexport const CLUSTERS = [\n  {\n    name: 'mainnet-beta',\n    apiUrl: MAINNET_URL,\n    label: 'Mainnet Beta'\n  },\n  {\n    name: 'devnet',\n    apiUrl: clusterApiUrl('devnet'),\n    label: 'Devnet'\n  },\n  {\n    name: 'testnet',\n    apiUrl: clusterApiUrl('testnet'),\n    label: 'Testnet'\n  },\n  {\n    name: 'localnet',\n    apiUrl: 'http://localhost:8899',\n    label: null\n  }\n];\n\nexport function clusterForEndpoint(endpoint) {\n  return CLUSTERS.find(({ apiUrl }) => apiUrl === endpoint);\n}"]},"metadata":{},"sourceType":"module"}