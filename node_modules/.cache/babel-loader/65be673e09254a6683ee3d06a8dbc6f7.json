{"ast":null,"code":"class Queue {\n  constructor() {\n    this.data = [];\n\n    this.subscribe = () => {};\n\n    this.running = false;\n    this.error = [];\n\n    this.populateData = data => {\n      this.promises.push(data[0]);\n    };\n\n    this.depopulateData = () => {\n      this.Data.shift();\n    };\n\n    this.run = async () => {\n      if (this.running === true) return;\n      if (this.Data.length === 0) return;\n\n      try {\n        this.running = true;\n        await this.data[0][0]();\n        this.data.shift();\n        this.running = false;\n      } catch (err) {\n        console.log(err);\n        this.promises.shift();\n        this.running = false;\n      }\n    };\n  }\n\n}\n\nexport default Queue;","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/src/utils/Queue.js"],"names":["Queue","data","subscribe","running","error","populateData","promises","push","depopulateData","Data","shift","run","length","err","console","log"],"mappings":"AAAA,MAAMA,KAAN,CAAY;AAAA;AAAA,SACVC,IADU,GACH,EADG;;AAAA,SAGVC,SAHU,GAGE,MAAM,CAAE,CAHV;;AAAA,SAKVC,OALU,GAKA,KALA;AAAA,SAOVC,KAPU,GAOF,EAPE;;AAAA,SAQVC,YARU,GAQMJ,IAAD,IAAU;AACvB,WAAKK,QAAL,CAAcC,IAAd,CAAmBN,IAAI,CAAC,CAAD,CAAvB;AACD,KAVS;;AAAA,SAYVO,cAZU,GAYO,MAAM;AACrB,WAAKC,IAAL,CAAUC,KAAV;AACD,KAdS;;AAAA,SAgBVC,GAhBU,GAgBJ,YAAY;AAChB,UAAI,KAAKR,OAAL,KAAiB,IAArB,EAA2B;AAC3B,UAAI,KAAKM,IAAL,CAAUG,MAAV,KAAqB,CAAzB,EAA4B;;AAE5B,UAAI;AACF,aAAKT,OAAL,GAAe,IAAf;AAEA,cAAM,KAAKF,IAAL,CAAU,CAAV,EAAa,CAAb,GAAN;AAEA,aAAKA,IAAL,CAAUS,KAAV;AAEA,aAAKP,OAAL,GAAe,KAAf;AACD,OARD,CAQE,OAAOU,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAAKP,QAAL,CAAcI,KAAd;AACA,aAAKP,OAAL,GAAe,KAAf;AACD;AACF,KAjCS;AAAA;;AAAA;;AAoCZ,eAAeH,KAAf","sourcesContent":["class Queue {\n  data = [];\n\n  subscribe = () => {};\n\n  running = false;\n\n  error = [];\n  populateData = (data) => {\n    this.promises.push(data[0]);\n  };\n\n  depopulateData = () => {\n    this.Data.shift();\n  };\n\n  run = async () => {\n    if (this.running === true) return;\n    if (this.Data.length === 0) return;\n\n    try {\n      this.running = true;\n\n      await this.data[0][0]();\n\n      this.data.shift();\n\n      this.running = false;\n    } catch (err) {\n      console.log(err);\n      this.promises.shift();\n      this.running = false;\n    }\n  };\n}\n\nexport default Queue;\n"]},"metadata":{},"sourceType":"module"}