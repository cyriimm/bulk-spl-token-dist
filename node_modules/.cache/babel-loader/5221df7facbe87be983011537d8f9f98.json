{"ast":null,"code":"/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\"use strict\";\n\nvar core = require('web3-core');\n\nvar Subscriptions = require('web3-core-subscriptions').subscriptions;\n\nvar Method = require('web3-core-method'); // var formatters = require('web3-core-helpers').formatters;\n\n\nvar Net = require('web3-net');\n\nvar Shh = function Shh() {\n  var _this = this; // sets _requestmanager\n\n\n  core.packageInit(this, arguments); // overwrite package setRequestManager\n\n  var setRequestManager = this.setRequestManager;\n\n  this.setRequestManager = function (manager) {\n    setRequestManager(manager);\n\n    _this.net.setRequestManager(manager);\n\n    return true;\n  }; // overwrite setProvider\n\n\n  var setProvider = this.setProvider;\n\n  this.setProvider = function () {\n    setProvider.apply(_this, arguments);\n\n    _this.setRequestManager(_this._requestManager);\n  };\n\n  this.net = new Net(this);\n  [new Subscriptions({\n    name: 'subscribe',\n    type: 'shh',\n    subscriptions: {\n      'messages': {\n        params: 1 // inputFormatter: [formatters.inputPostFormatter],\n        // outputFormatter: formatters.outputPostFormatter\n\n      }\n    }\n  }), new Method({\n    name: 'getVersion',\n    call: 'shh_version',\n    params: 0\n  }), new Method({\n    name: 'getInfo',\n    call: 'shh_info',\n    params: 0\n  }), new Method({\n    name: 'setMaxMessageSize',\n    call: 'shh_setMaxMessageSize',\n    params: 1\n  }), new Method({\n    name: 'setMinPoW',\n    call: 'shh_setMinPoW',\n    params: 1\n  }), new Method({\n    name: 'markTrustedPeer',\n    call: 'shh_markTrustedPeer',\n    params: 1\n  }), new Method({\n    name: 'newKeyPair',\n    call: 'shh_newKeyPair',\n    params: 0\n  }), new Method({\n    name: 'addPrivateKey',\n    call: 'shh_addPrivateKey',\n    params: 1\n  }), new Method({\n    name: 'deleteKeyPair',\n    call: 'shh_deleteKeyPair',\n    params: 1\n  }), new Method({\n    name: 'hasKeyPair',\n    call: 'shh_hasKeyPair',\n    params: 1\n  }), new Method({\n    name: 'getPublicKey',\n    call: 'shh_getPublicKey',\n    params: 1\n  }), new Method({\n    name: 'getPrivateKey',\n    call: 'shh_getPrivateKey',\n    params: 1\n  }), new Method({\n    name: 'newSymKey',\n    call: 'shh_newSymKey',\n    params: 0\n  }), new Method({\n    name: 'addSymKey',\n    call: 'shh_addSymKey',\n    params: 1\n  }), new Method({\n    name: 'generateSymKeyFromPassword',\n    call: 'shh_generateSymKeyFromPassword',\n    params: 1\n  }), new Method({\n    name: 'hasSymKey',\n    call: 'shh_hasSymKey',\n    params: 1\n  }), new Method({\n    name: 'getSymKey',\n    call: 'shh_getSymKey',\n    params: 1\n  }), new Method({\n    name: 'deleteSymKey',\n    call: 'shh_deleteSymKey',\n    params: 1\n  }), new Method({\n    name: 'newMessageFilter',\n    call: 'shh_newMessageFilter',\n    params: 1\n  }), new Method({\n    name: 'getFilterMessages',\n    call: 'shh_getFilterMessages',\n    params: 1\n  }), new Method({\n    name: 'deleteMessageFilter',\n    call: 'shh_deleteMessageFilter',\n    params: 1\n  }), new Method({\n    name: 'post',\n    call: 'shh_post',\n    params: 1,\n    inputFormatter: [null]\n  }), new Method({\n    name: 'unsubscribe',\n    call: 'shh_unsubscribe',\n    params: 1\n  })].forEach(function (method) {\n    method.attachToObject(_this);\n    method.setRequestManager(_this._requestManager);\n  });\n};\n\nShh.prototype.clearSubscriptions = function () {\n  this._requestManager.clearSubscriptions();\n};\n\ncore.addProviders(Shh);\nmodule.exports = Shh;","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/node_modules/web3-shh/lib/index.js"],"names":["core","require","Subscriptions","subscriptions","Method","Net","Shh","_this","packageInit","arguments","setRequestManager","manager","net","setProvider","apply","_requestManager","name","type","params","call","inputFormatter","forEach","method","attachToObject","prototype","clearSubscriptions","addProviders","module","exports"],"mappings":"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","sourcesContent":["/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\"use strict\";\nvar core = require('web3-core');\nvar Subscriptions = require('web3-core-subscriptions').subscriptions;\nvar Method = require('web3-core-method');\n// var formatters = require('web3-core-helpers').formatters;\nvar Net = require('web3-net');\nvar Shh = function Shh() {\n    var _this = this;\n    // sets _requestmanager\n    core.packageInit(this, arguments);\n    // overwrite package setRequestManager\n    var setRequestManager = this.setRequestManager;\n    this.setRequestManager = function (manager) {\n        setRequestManager(manager);\n        _this.net.setRequestManager(manager);\n        return true;\n    };\n    // overwrite setProvider\n    var setProvider = this.setProvider;\n    this.setProvider = function () {\n        setProvider.apply(_this, arguments);\n        _this.setRequestManager(_this._requestManager);\n    };\n    this.net = new Net(this);\n    [\n        new Subscriptions({\n            name: 'subscribe',\n            type: 'shh',\n            subscriptions: {\n                'messages': {\n                    params: 1\n                    // inputFormatter: [formatters.inputPostFormatter],\n                    // outputFormatter: formatters.outputPostFormatter\n                }\n            }\n        }),\n        new Method({\n            name: 'getVersion',\n            call: 'shh_version',\n            params: 0\n        }),\n        new Method({\n            name: 'getInfo',\n            call: 'shh_info',\n            params: 0\n        }),\n        new Method({\n            name: 'setMaxMessageSize',\n            call: 'shh_setMaxMessageSize',\n            params: 1\n        }),\n        new Method({\n            name: 'setMinPoW',\n            call: 'shh_setMinPoW',\n            params: 1\n        }),\n        new Method({\n            name: 'markTrustedPeer',\n            call: 'shh_markTrustedPeer',\n            params: 1\n        }),\n        new Method({\n            name: 'newKeyPair',\n            call: 'shh_newKeyPair',\n            params: 0\n        }),\n        new Method({\n            name: 'addPrivateKey',\n            call: 'shh_addPrivateKey',\n            params: 1\n        }),\n        new Method({\n            name: 'deleteKeyPair',\n            call: 'shh_deleteKeyPair',\n            params: 1\n        }),\n        new Method({\n            name: 'hasKeyPair',\n            call: 'shh_hasKeyPair',\n            params: 1\n        }),\n        new Method({\n            name: 'getPublicKey',\n            call: 'shh_getPublicKey',\n            params: 1\n        }),\n        new Method({\n            name: 'getPrivateKey',\n            call: 'shh_getPrivateKey',\n            params: 1\n        }),\n        new Method({\n            name: 'newSymKey',\n            call: 'shh_newSymKey',\n            params: 0\n        }),\n        new Method({\n            name: 'addSymKey',\n            call: 'shh_addSymKey',\n            params: 1\n        }),\n        new Method({\n            name: 'generateSymKeyFromPassword',\n            call: 'shh_generateSymKeyFromPassword',\n            params: 1\n        }),\n        new Method({\n            name: 'hasSymKey',\n            call: 'shh_hasSymKey',\n            params: 1\n        }),\n        new Method({\n            name: 'getSymKey',\n            call: 'shh_getSymKey',\n            params: 1\n        }),\n        new Method({\n            name: 'deleteSymKey',\n            call: 'shh_deleteSymKey',\n            params: 1\n        }),\n        new Method({\n            name: 'newMessageFilter',\n            call: 'shh_newMessageFilter',\n            params: 1\n        }),\n        new Method({\n            name: 'getFilterMessages',\n            call: 'shh_getFilterMessages',\n            params: 1\n        }),\n        new Method({\n            name: 'deleteMessageFilter',\n            call: 'shh_deleteMessageFilter',\n            params: 1\n        }),\n        new Method({\n            name: 'post',\n            call: 'shh_post',\n            params: 1,\n            inputFormatter: [null]\n        }),\n        new Method({\n            name: 'unsubscribe',\n            call: 'shh_unsubscribe',\n            params: 1\n        })\n    ].forEach(function (method) {\n        method.attachToObject(_this);\n        method.setRequestManager(_this._requestManager);\n    });\n};\nShh.prototype.clearSubscriptions = function () {\n    this._requestManager.clearSubscriptions();\n};\ncore.addProviders(Shh);\nmodule.exports = Shh;\n"]},"metadata":{},"sourceType":"script"}