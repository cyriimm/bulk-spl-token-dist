{"ast":null,"code":"'use strict';\n\nconst varint = require('varint');\n\nmodule.exports = {\n  numberToBuffer,\n  bufferToNumber,\n  varintBufferEncode,\n  varintBufferDecode,\n  varintEncode\n};\n\nfunction bufferToNumber(buf) {\n  return parseInt(buf.toString('hex'), 16);\n}\n\nfunction numberToBuffer(num) {\n  let hexString = num.toString(16);\n\n  if (hexString.length % 2 === 1) {\n    hexString = '0' + hexString;\n  }\n\n  return Buffer.from(hexString, 'hex');\n}\n\nfunction varintBufferEncode(input) {\n  return Buffer.from(varint.encode(bufferToNumber(input)));\n}\n\nfunction varintBufferDecode(input) {\n  return numberToBuffer(varint.decode(input));\n}\n\nfunction varintEncode(num) {\n  return Buffer.from(varint.encode(num));\n}","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/node_modules/multicodec/src/util.js"],"names":["varint","require","module","exports","numberToBuffer","bufferToNumber","varintBufferEncode","varintBufferDecode","varintEncode","buf","parseInt","toString","num","hexString","length","Buffer","from","input","encode","decode"],"mappings":"AAAA;;AACA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,cADe;AAEfC,EAAAA,cAFe;AAGfC,EAAAA,kBAHe;AAIfC,EAAAA,kBAJe;AAKfC,EAAAA;AALe,CAAjB;;AAQA,SAASH,cAAT,CAAyBI,GAAzB,EAA8B;AAC5B,SAAOC,QAAQ,CAACD,GAAG,CAACE,QAAJ,CAAa,KAAb,CAAD,EAAsB,EAAtB,CAAf;AACD;;AAED,SAASP,cAAT,CAAyBQ,GAAzB,EAA8B;AAC5B,MAAIC,SAAS,GAAGD,GAAG,CAACD,QAAJ,CAAa,EAAb,CAAhB;;AACA,MAAIE,SAAS,CAACC,MAAV,GAAmB,CAAnB,KAAyB,CAA7B,EAAgC;AAC9BD,IAAAA,SAAS,GAAG,MAAMA,SAAlB;AACD;;AACD,SAAOE,MAAM,CAACC,IAAP,CAAYH,SAAZ,EAAuB,KAAvB,CAAP;AACD;;AAED,SAASP,kBAAT,CAA6BW,KAA7B,EAAoC;AAClC,SAAOF,MAAM,CAACC,IAAP,CAAYhB,MAAM,CAACkB,MAAP,CAAcb,cAAc,CAACY,KAAD,CAA5B,CAAZ,CAAP;AACD;;AAED,SAASV,kBAAT,CAA6BU,KAA7B,EAAoC;AAClC,SAAOb,cAAc,CAACJ,MAAM,CAACmB,MAAP,CAAcF,KAAd,CAAD,CAArB;AACD;;AAED,SAAST,YAAT,CAAuBI,GAAvB,EAA4B;AAC1B,SAAOG,MAAM,CAACC,IAAP,CAAYhB,MAAM,CAACkB,MAAP,CAAcN,GAAd,CAAZ,CAAP;AACD","sourcesContent":["'use strict'\nconst varint = require('varint')\n\nmodule.exports = {\n  numberToBuffer,\n  bufferToNumber,\n  varintBufferEncode,\n  varintBufferDecode,\n  varintEncode\n}\n\nfunction bufferToNumber (buf) {\n  return parseInt(buf.toString('hex'), 16)\n}\n\nfunction numberToBuffer (num) {\n  let hexString = num.toString(16)\n  if (hexString.length % 2 === 1) {\n    hexString = '0' + hexString\n  }\n  return Buffer.from(hexString, 'hex')\n}\n\nfunction varintBufferEncode (input) {\n  return Buffer.from(varint.encode(bufferToNumber(input)))\n}\n\nfunction varintBufferDecode (input) {\n  return numberToBuffer(varint.decode(input))\n}\n\nfunction varintEncode (num) {\n  return Buffer.from(varint.encode(num))\n}\n"]},"metadata":{},"sourceType":"script"}