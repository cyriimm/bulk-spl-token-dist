{"ast":null,"code":"/* jshint node: true */\n(function () {\n  \"use strict\";\n\n  function CookieAccessInfo(domain, path, secure, script) {\n    if (this instanceof CookieAccessInfo) {\n      this.domain = domain || undefined;\n      this.path = path || \"/\";\n      this.secure = !!secure;\n      this.script = !!script;\n      return this;\n    }\n\n    return new CookieAccessInfo(domain, path, secure, script);\n  }\n\n  CookieAccessInfo.All = Object.freeze(Object.create(null));\n  exports.CookieAccessInfo = CookieAccessInfo;\n\n  function Cookie(cookiestr, request_domain, request_path) {\n    if (cookiestr instanceof Cookie) {\n      return cookiestr;\n    }\n\n    if (this instanceof Cookie) {\n      this.name = null;\n      this.value = null;\n      this.expiration_date = Infinity;\n      this.path = String(request_path || \"/\");\n      this.explicit_path = false;\n      this.domain = request_domain || null;\n      this.explicit_domain = false;\n      this.secure = false; //how to define default?\n\n      this.noscript = false; //httponly\n\n      if (cookiestr) {\n        this.parse(cookiestr, request_domain, request_path);\n      }\n\n      return this;\n    }\n\n    return new Cookie(cookiestr, request_domain, request_path);\n  }\n\n  exports.Cookie = Cookie;\n\n  Cookie.prototype.toString = function toString() {\n    var str = [this.name + \"=\" + this.value];\n\n    if (this.expiration_date !== Infinity) {\n      str.push(\"expires=\" + new Date(this.expiration_date).toGMTString());\n    }\n\n    if (this.domain) {\n      str.push(\"domain=\" + this.domain);\n    }\n\n    if (this.path) {\n      str.push(\"path=\" + this.path);\n    }\n\n    if (this.secure) {\n      str.push(\"secure\");\n    }\n\n    if (this.noscript) {\n      str.push(\"httponly\");\n    }\n\n    return str.join(\"; \");\n  };\n\n  Cookie.prototype.toValueString = function toValueString() {\n    return this.name + \"=\" + this.value;\n  };\n\n  var cookie_str_splitter = /[:](?=\\s*[a-zA-Z0-9_\\-]+\\s*[=])/g;\n\n  Cookie.prototype.parse = function parse(str, request_domain, request_path) {\n    if (this instanceof Cookie) {\n      var parts = str.split(\";\").filter(function (value) {\n        return !!value;\n      });\n      var i;\n      var pair = parts[0].match(/([^=]+)=([\\s\\S]*)/);\n\n      if (!pair) {\n        console.warn(\"Invalid cookie header encountered. Header: '\" + str + \"'\");\n        return;\n      }\n\n      var key = pair[1];\n      var value = pair[2];\n\n      if (typeof key !== 'string' || key.length === 0 || typeof value !== 'string') {\n        console.warn(\"Unable to extract values from cookie header. Cookie: '\" + str + \"'\");\n        return;\n      }\n\n      this.name = key;\n      this.value = value;\n\n      for (i = 1; i < parts.length; i += 1) {\n        pair = parts[i].match(/([^=]+)(?:=([\\s\\S]*))?/);\n        key = pair[1].trim().toLowerCase();\n        value = pair[2];\n\n        switch (key) {\n          case \"httponly\":\n            this.noscript = true;\n            break;\n\n          case \"expires\":\n            this.expiration_date = value ? Number(Date.parse(value)) : Infinity;\n            break;\n\n          case \"path\":\n            this.path = value ? value.trim() : \"\";\n            this.explicit_path = true;\n            break;\n\n          case \"domain\":\n            this.domain = value ? value.trim() : \"\";\n            this.explicit_domain = !!this.domain;\n            break;\n\n          case \"secure\":\n            this.secure = true;\n            break;\n        }\n      }\n\n      if (!this.explicit_path) {\n        this.path = request_path || \"/\";\n      }\n\n      if (!this.explicit_domain) {\n        this.domain = request_domain;\n      }\n\n      return this;\n    }\n\n    return new Cookie().parse(str, request_domain, request_path);\n  };\n\n  Cookie.prototype.matches = function matches(access_info) {\n    if (access_info === CookieAccessInfo.All) {\n      return true;\n    }\n\n    if (this.noscript && access_info.script || this.secure && !access_info.secure || !this.collidesWith(access_info)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  Cookie.prototype.collidesWith = function collidesWith(access_info) {\n    if (this.path && !access_info.path || this.domain && !access_info.domain) {\n      return false;\n    }\n\n    if (this.path && access_info.path.indexOf(this.path) !== 0) {\n      return false;\n    }\n\n    if (this.explicit_path && access_info.path.indexOf(this.path) !== 0) {\n      return false;\n    }\n\n    var access_domain = access_info.domain && access_info.domain.replace(/^[\\.]/, '');\n    var cookie_domain = this.domain && this.domain.replace(/^[\\.]/, '');\n\n    if (cookie_domain === access_domain) {\n      return true;\n    }\n\n    if (cookie_domain) {\n      if (!this.explicit_domain) {\n        return false; // we already checked if the domains were exactly the same\n      }\n\n      var wildcard = access_domain.indexOf(cookie_domain);\n\n      if (wildcard === -1 || wildcard !== access_domain.length - cookie_domain.length) {\n        return false;\n      }\n\n      return true;\n    }\n\n    return true;\n  };\n\n  function CookieJar() {\n    var cookies, cookies_list, collidable_cookie;\n\n    if (this instanceof CookieJar) {\n      cookies = Object.create(null); //name: [Cookie]\n\n      this.setCookie = function setCookie(cookie, request_domain, request_path) {\n        var remove, i;\n        cookie = new Cookie(cookie, request_domain, request_path); //Delete the cookie if the set is past the current time\n\n        remove = cookie.expiration_date <= Date.now();\n\n        if (cookies[cookie.name] !== undefined) {\n          cookies_list = cookies[cookie.name];\n\n          for (i = 0; i < cookies_list.length; i += 1) {\n            collidable_cookie = cookies_list[i];\n\n            if (collidable_cookie.collidesWith(cookie)) {\n              if (remove) {\n                cookies_list.splice(i, 1);\n\n                if (cookies_list.length === 0) {\n                  delete cookies[cookie.name];\n                }\n\n                return false;\n              }\n\n              cookies_list[i] = cookie;\n              return cookie;\n            }\n          }\n\n          if (remove) {\n            return false;\n          }\n\n          cookies_list.push(cookie);\n          return cookie;\n        }\n\n        if (remove) {\n          return false;\n        }\n\n        cookies[cookie.name] = [cookie];\n        return cookies[cookie.name];\n      }; //returns a cookie\n\n\n      this.getCookie = function getCookie(cookie_name, access_info) {\n        var cookie, i;\n        cookies_list = cookies[cookie_name];\n\n        if (!cookies_list) {\n          return;\n        }\n\n        for (i = 0; i < cookies_list.length; i += 1) {\n          cookie = cookies_list[i];\n\n          if (cookie.expiration_date <= Date.now()) {\n            if (cookies_list.length === 0) {\n              delete cookies[cookie.name];\n            }\n\n            continue;\n          }\n\n          if (cookie.matches(access_info)) {\n            return cookie;\n          }\n        }\n      }; //returns a list of cookies\n\n\n      this.getCookies = function getCookies(access_info) {\n        var matches = [],\n            cookie_name,\n            cookie;\n\n        for (cookie_name in cookies) {\n          cookie = this.getCookie(cookie_name, access_info);\n\n          if (cookie) {\n            matches.push(cookie);\n          }\n        }\n\n        matches.toString = function toString() {\n          return matches.join(\":\");\n        };\n\n        matches.toValueString = function toValueString() {\n          return matches.map(function (c) {\n            return c.toValueString();\n          }).join(';');\n        };\n\n        return matches;\n      };\n\n      return this;\n    }\n\n    return new CookieJar();\n  }\n\n  exports.CookieJar = CookieJar; //returns list of cookies that were set correctly. Cookies that are expired and removed are not returned.\n\n  CookieJar.prototype.setCookies = function setCookies(cookies, request_domain, request_path) {\n    cookies = Array.isArray(cookies) ? cookies : cookies.split(cookie_str_splitter);\n    var successful = [],\n        i,\n        cookie;\n    cookies = cookies.map(function (item) {\n      return new Cookie(item, request_domain, request_path);\n    });\n\n    for (i = 0; i < cookies.length; i += 1) {\n      cookie = cookies[i];\n\n      if (this.setCookie(cookie, request_domain, request_path)) {\n        successful.push(cookie);\n      }\n    }\n\n    return successful;\n  };\n})();","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/node_modules/cookiejar/cookiejar.js"],"names":["CookieAccessInfo","domain","path","secure","script","undefined","All","Object","freeze","create","exports","Cookie","cookiestr","request_domain","request_path","name","value","expiration_date","Infinity","String","explicit_path","explicit_domain","noscript","parse","prototype","toString","str","push","Date","toGMTString","join","toValueString","cookie_str_splitter","parts","split","filter","i","pair","match","console","warn","key","length","trim","toLowerCase","Number","matches","access_info","collidesWith","indexOf","access_domain","replace","cookie_domain","wildcard","CookieJar","cookies","cookies_list","collidable_cookie","setCookie","cookie","remove","now","splice","getCookie","cookie_name","getCookies","map","c","setCookies","Array","isArray","successful","item"],"mappings":"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","sourcesContent":["/* jshint node: true */\n(function () {\n    \"use strict\";\n\n    function CookieAccessInfo(domain, path, secure, script) {\n        if (this instanceof CookieAccessInfo) {\n            this.domain = domain || undefined;\n            this.path = path || \"/\";\n            this.secure = !!secure;\n            this.script = !!script;\n            return this;\n        }\n        return new CookieAccessInfo(domain, path, secure, script);\n    }\n    CookieAccessInfo.All = Object.freeze(Object.create(null));\n    exports.CookieAccessInfo = CookieAccessInfo;\n\n    function Cookie(cookiestr, request_domain, request_path) {\n        if (cookiestr instanceof Cookie) {\n            return cookiestr;\n        }\n        if (this instanceof Cookie) {\n            this.name = null;\n            this.value = null;\n            this.expiration_date = Infinity;\n            this.path = String(request_path || \"/\");\n            this.explicit_path = false;\n            this.domain = request_domain || null;\n            this.explicit_domain = false;\n            this.secure = false; //how to define default?\n            this.noscript = false; //httponly\n            if (cookiestr) {\n                this.parse(cookiestr, request_domain, request_path);\n            }\n            return this;\n        }\n        return new Cookie(cookiestr, request_domain, request_path);\n    }\n    exports.Cookie = Cookie;\n\n    Cookie.prototype.toString = function toString() {\n        var str = [this.name + \"=\" + this.value];\n        if (this.expiration_date !== Infinity) {\n            str.push(\"expires=\" + (new Date(this.expiration_date)).toGMTString());\n        }\n        if (this.domain) {\n            str.push(\"domain=\" + this.domain);\n        }\n        if (this.path) {\n            str.push(\"path=\" + this.path);\n        }\n        if (this.secure) {\n            str.push(\"secure\");\n        }\n        if (this.noscript) {\n            str.push(\"httponly\");\n        }\n        return str.join(\"; \");\n    };\n\n    Cookie.prototype.toValueString = function toValueString() {\n        return this.name + \"=\" + this.value;\n    };\n\n    var cookie_str_splitter = /[:](?=\\s*[a-zA-Z0-9_\\-]+\\s*[=])/g;\n    Cookie.prototype.parse = function parse(str, request_domain, request_path) {\n        if (this instanceof Cookie) {\n            var parts = str.split(\";\").filter(function (value) {\n                    return !!value;\n                });\n            var i;\n\n            var pair = parts[0].match(/([^=]+)=([\\s\\S]*)/);\n            if (!pair) {\n                console.warn(\"Invalid cookie header encountered. Header: '\"+str+\"'\");\n                return;\n            }\n\n            var key = pair[1];\n            var value = pair[2];\n            if ( typeof key !== 'string' || key.length === 0 || typeof value !== 'string' ) {\n                console.warn(\"Unable to extract values from cookie header. Cookie: '\"+str+\"'\");\n                return;\n            }\n\n            this.name = key;\n            this.value = value;\n\n            for (i = 1; i < parts.length; i += 1) {\n                pair = parts[i].match(/([^=]+)(?:=([\\s\\S]*))?/);\n                key = pair[1].trim().toLowerCase();\n                value = pair[2];\n                switch (key) {\n                case \"httponly\":\n                    this.noscript = true;\n                    break;\n                case \"expires\":\n                    this.expiration_date = value ?\n                            Number(Date.parse(value)) :\n                            Infinity;\n                    break;\n                case \"path\":\n                    this.path = value ?\n                            value.trim() :\n                            \"\";\n                    this.explicit_path = true;\n                    break;\n                case \"domain\":\n                    this.domain = value ?\n                            value.trim() :\n                            \"\";\n                    this.explicit_domain = !!this.domain;\n                    break;\n                case \"secure\":\n                    this.secure = true;\n                    break;\n                }\n            }\n\n            if (!this.explicit_path) {\n               this.path = request_path || \"/\";\n            }\n            if (!this.explicit_domain) {\n               this.domain = request_domain;\n            }\n\n            return this;\n        }\n        return new Cookie().parse(str, request_domain, request_path);\n    };\n\n    Cookie.prototype.matches = function matches(access_info) {\n        if (access_info === CookieAccessInfo.All) {\n          return true;\n        }\n        if (this.noscript && access_info.script ||\n                this.secure && !access_info.secure ||\n                !this.collidesWith(access_info)) {\n            return false;\n        }\n        return true;\n    };\n\n    Cookie.prototype.collidesWith = function collidesWith(access_info) {\n        if ((this.path && !access_info.path) || (this.domain && !access_info.domain)) {\n            return false;\n        }\n        if (this.path && access_info.path.indexOf(this.path) !== 0) {\n            return false;\n        }\n        if (this.explicit_path && access_info.path.indexOf( this.path ) !== 0) {\n           return false;\n        }\n        var access_domain = access_info.domain && access_info.domain.replace(/^[\\.]/,'');\n        var cookie_domain = this.domain && this.domain.replace(/^[\\.]/,'');\n        if (cookie_domain === access_domain) {\n            return true;\n        }\n        if (cookie_domain) {\n            if (!this.explicit_domain) {\n                return false; // we already checked if the domains were exactly the same\n            }\n            var wildcard = access_domain.indexOf(cookie_domain);\n            if (wildcard === -1 || wildcard !== access_domain.length - cookie_domain.length) {\n                return false;\n            }\n            return true;\n        }\n        return true;\n    };\n\n    function CookieJar() {\n        var cookies, cookies_list, collidable_cookie;\n        if (this instanceof CookieJar) {\n            cookies = Object.create(null); //name: [Cookie]\n\n            this.setCookie = function setCookie(cookie, request_domain, request_path) {\n                var remove, i;\n                cookie = new Cookie(cookie, request_domain, request_path);\n                //Delete the cookie if the set is past the current time\n                remove = cookie.expiration_date <= Date.now();\n                if (cookies[cookie.name] !== undefined) {\n                    cookies_list = cookies[cookie.name];\n                    for (i = 0; i < cookies_list.length; i += 1) {\n                        collidable_cookie = cookies_list[i];\n                        if (collidable_cookie.collidesWith(cookie)) {\n                            if (remove) {\n                                cookies_list.splice(i, 1);\n                                if (cookies_list.length === 0) {\n                                    delete cookies[cookie.name];\n                                }\n                                return false;\n                            }\n                            cookies_list[i] = cookie;\n                            return cookie;\n                        }\n                    }\n                    if (remove) {\n                        return false;\n                    }\n                    cookies_list.push(cookie);\n                    return cookie;\n                }\n                if (remove) {\n                    return false;\n                }\n                cookies[cookie.name] = [cookie];\n                return cookies[cookie.name];\n            };\n            //returns a cookie\n            this.getCookie = function getCookie(cookie_name, access_info) {\n                var cookie, i;\n                cookies_list = cookies[cookie_name];\n                if (!cookies_list) {\n                    return;\n                }\n                for (i = 0; i < cookies_list.length; i += 1) {\n                    cookie = cookies_list[i];\n                    if (cookie.expiration_date <= Date.now()) {\n                        if (cookies_list.length === 0) {\n                            delete cookies[cookie.name];\n                        }\n                        continue;\n                    }\n\n                    if (cookie.matches(access_info)) {\n                        return cookie;\n                    }\n                }\n            };\n            //returns a list of cookies\n            this.getCookies = function getCookies(access_info) {\n                var matches = [], cookie_name, cookie;\n                for (cookie_name in cookies) {\n                    cookie = this.getCookie(cookie_name, access_info);\n                    if (cookie) {\n                        matches.push(cookie);\n                    }\n                }\n                matches.toString = function toString() {\n                    return matches.join(\":\");\n                };\n                matches.toValueString = function toValueString() {\n                    return matches.map(function (c) {\n                        return c.toValueString();\n                    }).join(';');\n                };\n                return matches;\n            };\n\n            return this;\n        }\n        return new CookieJar();\n    }\n    exports.CookieJar = CookieJar;\n\n    //returns list of cookies that were set correctly. Cookies that are expired and removed are not returned.\n    CookieJar.prototype.setCookies = function setCookies(cookies, request_domain, request_path) {\n        cookies = Array.isArray(cookies) ?\n                cookies :\n                cookies.split(cookie_str_splitter);\n        var successful = [],\n            i,\n            cookie;\n        cookies = cookies.map(function(item){\n            return new Cookie(item, request_domain, request_path);\n        });\n        for (i = 0; i < cookies.length; i += 1) {\n            cookie = cookies[i];\n            if (this.setCookie(cookie, request_domain, request_path)) {\n                successful.push(cookie);\n            }\n        }\n        return successful;\n    };\n}());\n"]},"metadata":{},"sourceType":"script"}