{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseInstructionErrorResponse = exports.KNOWN_PROGRAMS = exports.DexError = void 0;\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst tokens_and_markets_1 = require(\"./tokens_and_markets\");\n\nconst token_instructions_1 = require(\"./token-instructions\");\n\nvar DexError;\n\n(function (DexError) {\n  DexError[DexError[\"InvalidMarketFlags\"] = 0] = \"InvalidMarketFlags\";\n  DexError[DexError[\"InvalidAskFlags\"] = 1] = \"InvalidAskFlags\";\n  DexError[DexError[\"InvalidBidFlags\"] = 2] = \"InvalidBidFlags\";\n  DexError[DexError[\"InvalidQueueLength\"] = 3] = \"InvalidQueueLength\";\n  DexError[DexError[\"OwnerAccountNotProvided\"] = 4] = \"OwnerAccountNotProvided\";\n  DexError[DexError[\"ConsumeEventsQueueFailure\"] = 5] = \"ConsumeEventsQueueFailure\";\n  DexError[DexError[\"WrongCoinVault\"] = 6] = \"WrongCoinVault\";\n  DexError[DexError[\"WrongPcVault\"] = 7] = \"WrongPcVault\";\n  DexError[DexError[\"WrongCoinMint\"] = 8] = \"WrongCoinMint\";\n  DexError[DexError[\"WrongPcMint\"] = 9] = \"WrongPcMint\";\n  DexError[DexError[\"CoinVaultProgramId\"] = 10] = \"CoinVaultProgramId\";\n  DexError[DexError[\"PcVaultProgramId\"] = 11] = \"PcVaultProgramId\";\n  DexError[DexError[\"CoinMintProgramId\"] = 12] = \"CoinMintProgramId\";\n  DexError[DexError[\"PcMintProgramId\"] = 13] = \"PcMintProgramId\";\n  DexError[DexError[\"WrongCoinMintSize\"] = 14] = \"WrongCoinMintSize\";\n  DexError[DexError[\"WrongPcMintSize\"] = 15] = \"WrongPcMintSize\";\n  DexError[DexError[\"WrongCoinVaultSize\"] = 16] = \"WrongCoinVaultSize\";\n  DexError[DexError[\"WrongPcVaultSize\"] = 17] = \"WrongPcVaultSize\";\n  DexError[DexError[\"UninitializedVault\"] = 18] = \"UninitializedVault\";\n  DexError[DexError[\"UninitializedMint\"] = 19] = \"UninitializedMint\";\n  DexError[DexError[\"CoinMintUninitialized\"] = 20] = \"CoinMintUninitialized\";\n  DexError[DexError[\"PcMintUninitialized\"] = 21] = \"PcMintUninitialized\";\n  DexError[DexError[\"WrongMint\"] = 22] = \"WrongMint\";\n  DexError[DexError[\"WrongVaultOwner\"] = 23] = \"WrongVaultOwner\";\n  DexError[DexError[\"VaultHasDelegate\"] = 24] = \"VaultHasDelegate\";\n  DexError[DexError[\"AlreadyInitialized\"] = 25] = \"AlreadyInitialized\";\n  DexError[DexError[\"WrongAccountDataAlignment\"] = 26] = \"WrongAccountDataAlignment\";\n  DexError[DexError[\"WrongAccountDataPaddingLength\"] = 27] = \"WrongAccountDataPaddingLength\";\n  DexError[DexError[\"WrongAccountHeadPadding\"] = 28] = \"WrongAccountHeadPadding\";\n  DexError[DexError[\"WrongAccountTailPadding\"] = 29] = \"WrongAccountTailPadding\";\n  DexError[DexError[\"RequestQueueEmpty\"] = 30] = \"RequestQueueEmpty\";\n  DexError[DexError[\"EventQueueTooSmall\"] = 31] = \"EventQueueTooSmall\";\n  DexError[DexError[\"SlabTooSmall\"] = 32] = \"SlabTooSmall\";\n  DexError[DexError[\"BadVaultSignerNonce\"] = 33] = \"BadVaultSignerNonce\";\n  DexError[DexError[\"InsufficientFunds\"] = 34] = \"InsufficientFunds\";\n  DexError[DexError[\"SplAccountProgramId\"] = 35] = \"SplAccountProgramId\";\n  DexError[DexError[\"SplAccountLen\"] = 36] = \"SplAccountLen\";\n  DexError[DexError[\"WrongFeeDiscountAccountOwner\"] = 37] = \"WrongFeeDiscountAccountOwner\";\n  DexError[DexError[\"WrongFeeDiscountMint\"] = 38] = \"WrongFeeDiscountMint\";\n  DexError[DexError[\"CoinPayerProgramId\"] = 39] = \"CoinPayerProgramId\";\n  DexError[DexError[\"PcPayerProgramId\"] = 40] = \"PcPayerProgramId\";\n  DexError[DexError[\"ClientIdNotFound\"] = 41] = \"ClientIdNotFound\";\n  DexError[DexError[\"TooManyOpenOrders\"] = 42] = \"TooManyOpenOrders\";\n  DexError[DexError[\"FakeErrorSoWeDontChangeNumbers\"] = 43] = \"FakeErrorSoWeDontChangeNumbers\";\n  DexError[DexError[\"BorrowError\"] = 44] = \"BorrowError\";\n  DexError[DexError[\"WrongOrdersAccount\"] = 45] = \"WrongOrdersAccount\";\n  DexError[DexError[\"WrongBidsAccount\"] = 46] = \"WrongBidsAccount\";\n  DexError[DexError[\"WrongAsksAccount\"] = 47] = \"WrongAsksAccount\";\n  DexError[DexError[\"WrongRequestQueueAccount\"] = 48] = \"WrongRequestQueueAccount\";\n  DexError[DexError[\"WrongEventQueueAccount\"] = 49] = \"WrongEventQueueAccount\";\n  DexError[DexError[\"RequestQueueFull\"] = 50] = \"RequestQueueFull\";\n  DexError[DexError[\"EventQueueFull\"] = 51] = \"EventQueueFull\";\n  DexError[DexError[\"MarketIsDisabled\"] = 52] = \"MarketIsDisabled\";\n  DexError[DexError[\"WrongSigner\"] = 53] = \"WrongSigner\";\n  DexError[DexError[\"TransferFailed\"] = 54] = \"TransferFailed\";\n  DexError[DexError[\"ClientOrderIdIsZero\"] = 55] = \"ClientOrderIdIsZero\";\n  DexError[DexError[\"WrongRentSysvarAccount\"] = 56] = \"WrongRentSysvarAccount\";\n  DexError[DexError[\"RentNotProvided\"] = 57] = \"RentNotProvided\";\n  DexError[DexError[\"OrdersNotRentExempt\"] = 58] = \"OrdersNotRentExempt\";\n  DexError[DexError[\"OrderNotFound\"] = 59] = \"OrderNotFound\";\n  DexError[DexError[\"OrderNotYours\"] = 60] = \"OrderNotYours\";\n  DexError[DexError[\"WouldSelfTrade\"] = 61] = \"WouldSelfTrade\";\n  DexError[DexError[\"Unknown\"] = 1000] = \"Unknown\";\n})(DexError = exports.DexError || (exports.DexError = {}));\n\nexports.KNOWN_PROGRAMS = {\n  [token_instructions_1.TOKEN_PROGRAM_ID.toString()]: 'Token program',\n  [web3_js_1.SystemProgram.programId.toString()]: 'System program'\n};\n\nfunction parseInstructionErrorResponse(transaction, errorResponse) {\n  const [failedInstructionIndex, customError] = errorResponse;\n  const failedInstruction = transaction.instructions[failedInstructionIndex];\n  let parsedError;\n\n  if (failedInstruction.programId.toString() in tokens_and_markets_1.PROGRAM_LAYOUT_VERSIONS) {\n    parsedError = DexError[customError['Custom']];\n  } else if (failedInstruction.programId.toString() in exports.KNOWN_PROGRAMS) {\n    const program = exports.KNOWN_PROGRAMS[failedInstruction.programId.toString()];\n    parsedError = `${program} error ${customError['Custom']}`;\n  } else {\n    parsedError = `Unknown program ${failedInstruction.programId.toString()} custom error: ${customError['Custom']}`;\n  }\n\n  return {\n    failedInstructionIndex,\n    error: parsedError,\n    failedProgram: failedInstruction.programId.toString()\n  };\n}\n\nexports.parseInstructionErrorResponse = parseInstructionErrorResponse;","map":{"version":3,"sources":["../src/error.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,oBAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AACA,MAAA,oBAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AAEA,IAAY,QAAZ;;AAAA,CAAA,UAAY,QAAZ,EAAoB;AAChB,EAAA,QAAA,CAAA,QAAA,CAAA,oBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,oBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,iBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,iBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,iBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,iBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,oBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,oBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,yBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,yBAAA;AAEA,EAAA,QAAA,CAAA,QAAA,CAAA,2BAAA,CAAA,GAAA,CAAA,CAAA,GAAA,2BAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,gBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,GAAA,cAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,eAAA,CAAA,GAAA,CAAA,CAAA,GAAA,eAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,GAAA,aAAA;AAEA,EAAA,QAAA,CAAA,QAAA,CAAA,oBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,oBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,kBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,kBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,mBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,mBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,iBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,iBAAA;AAEA,EAAA,QAAA,CAAA,QAAA,CAAA,mBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,mBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,iBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,iBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,oBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,oBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,kBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,kBAAA;AAEA,EAAA,QAAA,CAAA,QAAA,CAAA,oBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,oBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,mBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,mBAAA;AAEA,EAAA,QAAA,CAAA,QAAA,CAAA,uBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,uBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,qBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,qBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,WAAA,CAAA,GAAA,EAAA,CAAA,GAAA,WAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,iBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,iBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,kBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,kBAAA;AAEA,EAAA,QAAA,CAAA,QAAA,CAAA,oBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,oBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,2BAAA,CAAA,GAAA,EAAA,CAAA,GAAA,2BAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,+BAAA,CAAA,GAAA,EAAA,CAAA,GAAA,+BAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,yBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,yBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,yBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,yBAAA;AAEA,EAAA,QAAA,CAAA,QAAA,CAAA,mBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,mBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,oBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,oBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,cAAA,CAAA,GAAA,EAAA,CAAA,GAAA,cAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,qBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,qBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,mBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,mBAAA;AAEA,EAAA,QAAA,CAAA,QAAA,CAAA,qBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,qBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,eAAA,CAAA,GAAA,EAAA,CAAA,GAAA,eAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,8BAAA,CAAA,GAAA,EAAA,CAAA,GAAA,8BAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,sBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,sBAAA;AAEA,EAAA,QAAA,CAAA,QAAA,CAAA,oBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,oBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,kBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,kBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,kBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,kBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,mBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,mBAAA;AAEA,EAAA,QAAA,CAAA,QAAA,CAAA,gCAAA,CAAA,GAAA,EAAA,CAAA,GAAA,gCAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,aAAA,CAAA,GAAA,EAAA,CAAA,GAAA,aAAA;AAEA,EAAA,QAAA,CAAA,QAAA,CAAA,oBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,oBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,kBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,kBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,kBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,kBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,0BAAA,CAAA,GAAA,EAAA,CAAA,GAAA,0BAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,wBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,wBAAA;AAEA,EAAA,QAAA,CAAA,QAAA,CAAA,kBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,kBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,gBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,gBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,kBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,kBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,aAAA,CAAA,GAAA,EAAA,CAAA,GAAA,aAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,gBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,gBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,qBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,qBAAA;AAEA,EAAA,QAAA,CAAA,QAAA,CAAA,wBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,wBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,iBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,iBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,qBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,qBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,eAAA,CAAA,GAAA,EAAA,CAAA,GAAA,eAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,eAAA,CAAA,GAAA,EAAA,CAAA,GAAA,eAAA;AAEA,EAAA,QAAA,CAAA,QAAA,CAAA,gBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,gBAAA;AAEA,EAAA,QAAA,CAAA,QAAA,CAAA,SAAA,CAAA,GAAA,IAAA,CAAA,GAAA,SAAA;AACH,CA/ED,EAAY,QAAQ,GAAR,OAAA,CAAA,QAAA,KAAA,OAAA,CAAA,QAAA,GAAQ,EAAR,CAAZ;;AAiFa,OAAA,CAAA,cAAA,GAAiB;AAC5B,GAAC,oBAAA,CAAA,gBAAA,CAAiB,QAAjB,EAAD,GAA+B,eADH;AAE5B,GAAC,SAAA,CAAA,aAAA,CAAc,SAAd,CAAwB,QAAxB,EAAD,GAAsC;AAFV,CAAjB;;AAQb,SAAgB,6BAAhB,CAA8C,WAA9C,EAAwE,aAAxE,EAAuG;AAKrG,QAAM,CAAC,sBAAD,EAAyB,WAAzB,IAAwC,aAA9C;AACA,QAAM,iBAAiB,GAAG,WAAW,CAAC,YAAZ,CAAyB,sBAAzB,CAA1B;AACA,MAAI,WAAJ;;AACA,MAAI,iBAAiB,CAAC,SAAlB,CAA4B,QAA5B,MAA0C,oBAAA,CAAA,uBAA9C,EAAuE;AACrE,IAAA,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC,QAAD,CAAZ,CAAtB;AACD,GAFD,MAEO,IAAI,iBAAiB,CAAC,SAAlB,CAA4B,QAA5B,MAA0C,OAAA,CAAA,cAA9C,EAA8D;AACnE,UAAM,OAAO,GAAG,OAAA,CAAA,cAAA,CAAe,iBAAiB,CAAC,SAAlB,CAA4B,QAA5B,EAAf,CAAhB;AACA,IAAA,WAAW,GAAG,GAAG,OAAO,UAAU,WAAW,CAAC,QAAD,CAAU,EAAvD;AACD,GAHM,MAGA;AACL,IAAA,WAAW,GAAG,mBAAmB,iBAAiB,CAAC,SAAlB,CAA4B,QAA5B,EAAsC,kBAAkB,WAAW,CAAC,QAAD,CAAU,EAA9G;AACD;;AACD,SAAO;AACL,IAAA,sBADK;AAEL,IAAA,KAAK,EAAE,WAFF;AAGL,IAAA,aAAa,EAAE,iBAAiB,CAAC,SAAlB,CAA4B,QAA5B;AAHV,GAAP;AAKD;;AArBD,OAAA,CAAA,6BAAA,GAAA,6BAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseInstructionErrorResponse = exports.KNOWN_PROGRAMS = exports.DexError = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst tokens_and_markets_1 = require(\"./tokens_and_markets\");\nconst token_instructions_1 = require(\"./token-instructions\");\nvar DexError;\n(function (DexError) {\n    DexError[DexError[\"InvalidMarketFlags\"] = 0] = \"InvalidMarketFlags\";\n    DexError[DexError[\"InvalidAskFlags\"] = 1] = \"InvalidAskFlags\";\n    DexError[DexError[\"InvalidBidFlags\"] = 2] = \"InvalidBidFlags\";\n    DexError[DexError[\"InvalidQueueLength\"] = 3] = \"InvalidQueueLength\";\n    DexError[DexError[\"OwnerAccountNotProvided\"] = 4] = \"OwnerAccountNotProvided\";\n    DexError[DexError[\"ConsumeEventsQueueFailure\"] = 5] = \"ConsumeEventsQueueFailure\";\n    DexError[DexError[\"WrongCoinVault\"] = 6] = \"WrongCoinVault\";\n    DexError[DexError[\"WrongPcVault\"] = 7] = \"WrongPcVault\";\n    DexError[DexError[\"WrongCoinMint\"] = 8] = \"WrongCoinMint\";\n    DexError[DexError[\"WrongPcMint\"] = 9] = \"WrongPcMint\";\n    DexError[DexError[\"CoinVaultProgramId\"] = 10] = \"CoinVaultProgramId\";\n    DexError[DexError[\"PcVaultProgramId\"] = 11] = \"PcVaultProgramId\";\n    DexError[DexError[\"CoinMintProgramId\"] = 12] = \"CoinMintProgramId\";\n    DexError[DexError[\"PcMintProgramId\"] = 13] = \"PcMintProgramId\";\n    DexError[DexError[\"WrongCoinMintSize\"] = 14] = \"WrongCoinMintSize\";\n    DexError[DexError[\"WrongPcMintSize\"] = 15] = \"WrongPcMintSize\";\n    DexError[DexError[\"WrongCoinVaultSize\"] = 16] = \"WrongCoinVaultSize\";\n    DexError[DexError[\"WrongPcVaultSize\"] = 17] = \"WrongPcVaultSize\";\n    DexError[DexError[\"UninitializedVault\"] = 18] = \"UninitializedVault\";\n    DexError[DexError[\"UninitializedMint\"] = 19] = \"UninitializedMint\";\n    DexError[DexError[\"CoinMintUninitialized\"] = 20] = \"CoinMintUninitialized\";\n    DexError[DexError[\"PcMintUninitialized\"] = 21] = \"PcMintUninitialized\";\n    DexError[DexError[\"WrongMint\"] = 22] = \"WrongMint\";\n    DexError[DexError[\"WrongVaultOwner\"] = 23] = \"WrongVaultOwner\";\n    DexError[DexError[\"VaultHasDelegate\"] = 24] = \"VaultHasDelegate\";\n    DexError[DexError[\"AlreadyInitialized\"] = 25] = \"AlreadyInitialized\";\n    DexError[DexError[\"WrongAccountDataAlignment\"] = 26] = \"WrongAccountDataAlignment\";\n    DexError[DexError[\"WrongAccountDataPaddingLength\"] = 27] = \"WrongAccountDataPaddingLength\";\n    DexError[DexError[\"WrongAccountHeadPadding\"] = 28] = \"WrongAccountHeadPadding\";\n    DexError[DexError[\"WrongAccountTailPadding\"] = 29] = \"WrongAccountTailPadding\";\n    DexError[DexError[\"RequestQueueEmpty\"] = 30] = \"RequestQueueEmpty\";\n    DexError[DexError[\"EventQueueTooSmall\"] = 31] = \"EventQueueTooSmall\";\n    DexError[DexError[\"SlabTooSmall\"] = 32] = \"SlabTooSmall\";\n    DexError[DexError[\"BadVaultSignerNonce\"] = 33] = \"BadVaultSignerNonce\";\n    DexError[DexError[\"InsufficientFunds\"] = 34] = \"InsufficientFunds\";\n    DexError[DexError[\"SplAccountProgramId\"] = 35] = \"SplAccountProgramId\";\n    DexError[DexError[\"SplAccountLen\"] = 36] = \"SplAccountLen\";\n    DexError[DexError[\"WrongFeeDiscountAccountOwner\"] = 37] = \"WrongFeeDiscountAccountOwner\";\n    DexError[DexError[\"WrongFeeDiscountMint\"] = 38] = \"WrongFeeDiscountMint\";\n    DexError[DexError[\"CoinPayerProgramId\"] = 39] = \"CoinPayerProgramId\";\n    DexError[DexError[\"PcPayerProgramId\"] = 40] = \"PcPayerProgramId\";\n    DexError[DexError[\"ClientIdNotFound\"] = 41] = \"ClientIdNotFound\";\n    DexError[DexError[\"TooManyOpenOrders\"] = 42] = \"TooManyOpenOrders\";\n    DexError[DexError[\"FakeErrorSoWeDontChangeNumbers\"] = 43] = \"FakeErrorSoWeDontChangeNumbers\";\n    DexError[DexError[\"BorrowError\"] = 44] = \"BorrowError\";\n    DexError[DexError[\"WrongOrdersAccount\"] = 45] = \"WrongOrdersAccount\";\n    DexError[DexError[\"WrongBidsAccount\"] = 46] = \"WrongBidsAccount\";\n    DexError[DexError[\"WrongAsksAccount\"] = 47] = \"WrongAsksAccount\";\n    DexError[DexError[\"WrongRequestQueueAccount\"] = 48] = \"WrongRequestQueueAccount\";\n    DexError[DexError[\"WrongEventQueueAccount\"] = 49] = \"WrongEventQueueAccount\";\n    DexError[DexError[\"RequestQueueFull\"] = 50] = \"RequestQueueFull\";\n    DexError[DexError[\"EventQueueFull\"] = 51] = \"EventQueueFull\";\n    DexError[DexError[\"MarketIsDisabled\"] = 52] = \"MarketIsDisabled\";\n    DexError[DexError[\"WrongSigner\"] = 53] = \"WrongSigner\";\n    DexError[DexError[\"TransferFailed\"] = 54] = \"TransferFailed\";\n    DexError[DexError[\"ClientOrderIdIsZero\"] = 55] = \"ClientOrderIdIsZero\";\n    DexError[DexError[\"WrongRentSysvarAccount\"] = 56] = \"WrongRentSysvarAccount\";\n    DexError[DexError[\"RentNotProvided\"] = 57] = \"RentNotProvided\";\n    DexError[DexError[\"OrdersNotRentExempt\"] = 58] = \"OrdersNotRentExempt\";\n    DexError[DexError[\"OrderNotFound\"] = 59] = \"OrderNotFound\";\n    DexError[DexError[\"OrderNotYours\"] = 60] = \"OrderNotYours\";\n    DexError[DexError[\"WouldSelfTrade\"] = 61] = \"WouldSelfTrade\";\n    DexError[DexError[\"Unknown\"] = 1000] = \"Unknown\";\n})(DexError = exports.DexError || (exports.DexError = {}));\nexports.KNOWN_PROGRAMS = {\n    [token_instructions_1.TOKEN_PROGRAM_ID.toString()]: 'Token program',\n    [web3_js_1.SystemProgram.programId.toString()]: 'System program'\n};\nfunction parseInstructionErrorResponse(transaction, errorResponse) {\n    const [failedInstructionIndex, customError] = errorResponse;\n    const failedInstruction = transaction.instructions[failedInstructionIndex];\n    let parsedError;\n    if (failedInstruction.programId.toString() in tokens_and_markets_1.PROGRAM_LAYOUT_VERSIONS) {\n        parsedError = DexError[customError['Custom']];\n    }\n    else if (failedInstruction.programId.toString() in exports.KNOWN_PROGRAMS) {\n        const program = exports.KNOWN_PROGRAMS[failedInstruction.programId.toString()];\n        parsedError = `${program} error ${customError['Custom']}`;\n    }\n    else {\n        parsedError = `Unknown program ${failedInstruction.programId.toString()} custom error: ${customError['Custom']}`;\n    }\n    return {\n        failedInstructionIndex,\n        error: parsedError,\n        failedProgram: failedInstruction.programId.toString()\n    };\n}\nexports.parseInstructionErrorResponse = parseInstructionErrorResponse;\n//# sourceMappingURL=error.js.map"]},"metadata":{},"sourceType":"script"}