{"ast":null,"code":"var A = require(\"./array.js\");\n\nvar at = function at(bytes, index) {\n  return parseInt(bytes.slice(index * 2 + 2, index * 2 + 4), 16);\n};\n\nvar random = function random(bytes) {\n  var rnd = void 0;\n  if (typeof window !== \"undefined\" && window.crypto && window.crypto.getRandomValues) rnd = window.crypto.getRandomValues(new Uint8Array(bytes));else if (typeof require !== \"undefined\") rnd = require(\"c\" + \"rypto\").randomBytes(bytes);else throw \"Safe random numbers not available.\";\n  var hex = \"0x\";\n\n  for (var i = 0; i < bytes; ++i) {\n    hex += (\"00\" + rnd[i].toString(16)).slice(-2);\n  }\n\n  return hex;\n};\n\nvar length = function length(a) {\n  return (a.length - 2) / 2;\n};\n\nvar flatten = function flatten(a) {\n  return \"0x\" + a.reduce(function (r, s) {\n    return r + s.slice(2);\n  }, \"\");\n};\n\nvar slice = function slice(i, j, bs) {\n  return \"0x\" + bs.slice(i * 2 + 2, j * 2 + 2);\n};\n\nvar reverse = function reverse(hex) {\n  var rev = \"0x\";\n\n  for (var i = 0, l = length(hex); i < l; ++i) {\n    rev += hex.slice((l - i) * 2, (l - i + 1) * 2);\n  }\n\n  return rev;\n};\n\nvar pad = function pad(l, hex) {\n  return hex.length === l * 2 + 2 ? hex : pad(l, \"0x\" + \"0\" + hex.slice(2));\n};\n\nvar padRight = function padRight(l, hex) {\n  return hex.length === l * 2 + 2 ? hex : padRight(l, hex + \"0\");\n};\n\nvar toArray = function toArray(hex) {\n  var arr = [];\n\n  for (var i = 2, l = hex.length; i < l; i += 2) {\n    arr.push(parseInt(hex.slice(i, i + 2), 16));\n  }\n\n  return arr;\n};\n\nvar fromArray = function fromArray(arr) {\n  var hex = \"0x\";\n\n  for (var i = 0, l = arr.length; i < l; ++i) {\n    var b = arr[i];\n    hex += (b < 16 ? \"0\" : \"\") + b.toString(16);\n  }\n\n  return hex;\n};\n\nvar toUint8Array = function toUint8Array(hex) {\n  return new Uint8Array(toArray(hex));\n};\n\nvar fromUint8Array = function fromUint8Array(arr) {\n  return fromArray([].slice.call(arr, 0));\n};\n\nvar fromNumber = function fromNumber(num) {\n  var hex = num.toString(16);\n  return hex.length % 2 === 0 ? \"0x\" + hex : \"0x0\" + hex;\n};\n\nvar toNumber = function toNumber(hex) {\n  return parseInt(hex.slice(2), 16);\n};\n\nvar concat = function concat(a, b) {\n  return a.concat(b.slice(2));\n};\n\nvar fromNat = function fromNat(bn) {\n  return bn === \"0x0\" ? \"0x\" : bn.length % 2 === 0 ? bn : \"0x0\" + bn.slice(2);\n};\n\nvar toNat = function toNat(bn) {\n  return bn[2] === \"0\" ? \"0x\" + bn.slice(3) : bn;\n};\n\nvar fromAscii = function fromAscii(ascii) {\n  var hex = \"0x\";\n\n  for (var i = 0; i < ascii.length; ++i) {\n    hex += (\"00\" + ascii.charCodeAt(i).toString(16)).slice(-2);\n  }\n\n  return hex;\n};\n\nvar toAscii = function toAscii(hex) {\n  var ascii = \"\";\n\n  for (var i = 2; i < hex.length; i += 2) {\n    ascii += String.fromCharCode(parseInt(hex.slice(i, i + 2), 16));\n  }\n\n  return ascii;\n}; // From https://gist.github.com/pascaldekloe/62546103a1576803dade9269ccf76330\n\n\nvar fromString = function fromString(s) {\n  var makeByte = function makeByte(uint8) {\n    var b = uint8.toString(16);\n    return b.length < 2 ? \"0\" + b : b;\n  };\n\n  var bytes = \"0x\";\n\n  for (var ci = 0; ci != s.length; ci++) {\n    var c = s.charCodeAt(ci);\n\n    if (c < 128) {\n      bytes += makeByte(c);\n      continue;\n    }\n\n    if (c < 2048) {\n      bytes += makeByte(c >> 6 | 192);\n    } else {\n      if (c > 0xd7ff && c < 0xdc00) {\n        if (++ci == s.length) return null;\n        var c2 = s.charCodeAt(ci);\n        if (c2 < 0xdc00 || c2 > 0xdfff) return null;\n        c = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n        bytes += makeByte(c >> 18 | 240);\n        bytes += makeByte(c >> 12 & 63 | 128);\n      } else {\n        // c <= 0xffff\n        bytes += makeByte(c >> 12 | 224);\n      }\n\n      bytes += makeByte(c >> 6 & 63 | 128);\n    }\n\n    bytes += makeByte(c & 63 | 128);\n  }\n\n  return bytes;\n};\n\nvar toString = function toString(bytes) {\n  var s = '';\n  var i = 0;\n  var l = length(bytes);\n\n  while (i < l) {\n    var c = at(bytes, i++);\n\n    if (c > 127) {\n      if (c > 191 && c < 224) {\n        if (i >= l) return null;\n        c = (c & 31) << 6 | at(bytes, i) & 63;\n      } else if (c > 223 && c < 240) {\n        if (i + 1 >= l) return null;\n        c = (c & 15) << 12 | (at(bytes, i) & 63) << 6 | at(bytes, ++i) & 63;\n      } else if (c > 239 && c < 248) {\n        if (i + 2 >= l) return null;\n        c = (c & 7) << 18 | (at(bytes, i) & 63) << 12 | (at(bytes, ++i) & 63) << 6 | at(bytes, ++i) & 63;\n      } else return null;\n\n      ++i;\n    }\n\n    if (c <= 0xffff) s += String.fromCharCode(c);else if (c <= 0x10ffff) {\n      c -= 0x10000;\n      s += String.fromCharCode(c >> 10 | 0xd800);\n      s += String.fromCharCode(c & 0x3FF | 0xdc00);\n    } else return null;\n  }\n\n  return s;\n};\n\nmodule.exports = {\n  random: random,\n  length: length,\n  concat: concat,\n  flatten: flatten,\n  slice: slice,\n  reverse: reverse,\n  pad: pad,\n  padRight: padRight,\n  fromAscii: fromAscii,\n  toAscii: toAscii,\n  fromString: fromString,\n  toString: toString,\n  fromNumber: fromNumber,\n  toNumber: toNumber,\n  fromNat: fromNat,\n  toNat: toNat,\n  fromArray: fromArray,\n  toArray: toArray,\n  fromUint8Array: fromUint8Array,\n  toUint8Array: toUint8Array\n};","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/node_modules/swarm-js/node_modules/eth-lib/lib/bytes.js"],"names":["A","require","at","bytes","index","parseInt","slice","random","rnd","window","crypto","getRandomValues","Uint8Array","randomBytes","hex","i","toString","length","a","flatten","reduce","r","s","j","bs","reverse","rev","l","pad","padRight","toArray","arr","push","fromArray","b","toUint8Array","fromUint8Array","call","fromNumber","num","toNumber","concat","fromNat","bn","toNat","fromAscii","ascii","charCodeAt","toAscii","String","fromCharCode","fromString","makeByte","uint8","ci","c","c2","module","exports"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,YAAD,CAAf;;AAEA,IAAIC,EAAE,GAAG,SAASA,EAAT,CAAYC,KAAZ,EAAmBC,KAAnB,EAA0B;AACjC,SAAOC,QAAQ,CAACF,KAAK,CAACG,KAAN,CAAYF,KAAK,GAAG,CAAR,GAAY,CAAxB,EAA2BA,KAAK,GAAG,CAAR,GAAY,CAAvC,CAAD,EAA4C,EAA5C,CAAf;AACD,CAFD;;AAIA,IAAIG,MAAM,GAAG,SAASA,MAAT,CAAgBJ,KAAhB,EAAuB;AAClC,MAAIK,GAAG,GAAG,KAAK,CAAf;AACA,MAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,MAAxC,IAAkDD,MAAM,CAACC,MAAP,CAAcC,eAApE,EAAqFH,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAcC,eAAd,CAA8B,IAAIC,UAAJ,CAAeT,KAAf,CAA9B,CAAN,CAArF,KAAqJ,IAAI,OAAOF,OAAP,KAAmB,WAAvB,EAAoCO,GAAG,GAAGP,OAAO,CAAC,MAAM,OAAP,CAAP,CAAuBY,WAAvB,CAAmCV,KAAnC,CAAN,CAApC,KAAyF,MAAM,oCAAN;AAC9O,MAAIW,GAAG,GAAG,IAAV;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,KAApB,EAA2B,EAAEY,CAA7B,EAAgC;AAC9BD,IAAAA,GAAG,IAAI,CAAC,OAAON,GAAG,CAACO,CAAD,CAAH,CAAOC,QAAP,CAAgB,EAAhB,CAAR,EAA6BV,KAA7B,CAAmC,CAAC,CAApC,CAAP;AACD;;AAAA,SAAOQ,GAAP;AACF,CAPD;;AASA,IAAIG,MAAM,GAAG,SAASA,MAAT,CAAgBC,CAAhB,EAAmB;AAC9B,SAAO,CAACA,CAAC,CAACD,MAAF,GAAW,CAAZ,IAAiB,CAAxB;AACD,CAFD;;AAIA,IAAIE,OAAO,GAAG,SAASA,OAAT,CAAiBD,CAAjB,EAAoB;AAChC,SAAO,OAAOA,CAAC,CAACE,MAAF,CAAS,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACrC,WAAOD,CAAC,GAAGC,CAAC,CAAChB,KAAF,CAAQ,CAAR,CAAX;AACD,GAFa,EAEX,EAFW,CAAd;AAGD,CAJD;;AAMA,IAAIA,KAAK,GAAG,SAASA,KAAT,CAAeS,CAAf,EAAkBQ,CAAlB,EAAqBC,EAArB,EAAyB;AACnC,SAAO,OAAOA,EAAE,CAAClB,KAAH,CAASS,CAAC,GAAG,CAAJ,GAAQ,CAAjB,EAAoBQ,CAAC,GAAG,CAAJ,GAAQ,CAA5B,CAAd;AACD,CAFD;;AAIA,IAAIE,OAAO,GAAG,SAASA,OAAT,CAAiBX,GAAjB,EAAsB;AAClC,MAAIY,GAAG,GAAG,IAAV;;AACA,OAAK,IAAIX,CAAC,GAAG,CAAR,EAAWY,CAAC,GAAGV,MAAM,CAACH,GAAD,CAA1B,EAAiCC,CAAC,GAAGY,CAArC,EAAwC,EAAEZ,CAA1C,EAA6C;AAC3CW,IAAAA,GAAG,IAAIZ,GAAG,CAACR,KAAJ,CAAU,CAACqB,CAAC,GAAGZ,CAAL,IAAU,CAApB,EAAuB,CAACY,CAAC,GAAGZ,CAAJ,GAAQ,CAAT,IAAc,CAArC,CAAP;AACD;;AACD,SAAOW,GAAP;AACD,CAND;;AAQA,IAAIE,GAAG,GAAG,SAASA,GAAT,CAAaD,CAAb,EAAgBb,GAAhB,EAAqB;AAC7B,SAAOA,GAAG,CAACG,MAAJ,KAAeU,CAAC,GAAG,CAAJ,GAAQ,CAAvB,GAA2Bb,GAA3B,GAAiCc,GAAG,CAACD,CAAD,EAAI,OAAO,GAAP,GAAab,GAAG,CAACR,KAAJ,CAAU,CAAV,CAAjB,CAA3C;AACD,CAFD;;AAIA,IAAIuB,QAAQ,GAAG,SAASA,QAAT,CAAkBF,CAAlB,EAAqBb,GAArB,EAA0B;AACvC,SAAOA,GAAG,CAACG,MAAJ,KAAeU,CAAC,GAAG,CAAJ,GAAQ,CAAvB,GAA2Bb,GAA3B,GAAiCe,QAAQ,CAACF,CAAD,EAAIb,GAAG,GAAG,GAAV,CAAhD;AACD,CAFD;;AAIA,IAAIgB,OAAO,GAAG,SAASA,OAAT,CAAiBhB,GAAjB,EAAsB;AAClC,MAAIiB,GAAG,GAAG,EAAV;;AACA,OAAK,IAAIhB,CAAC,GAAG,CAAR,EAAWY,CAAC,GAAGb,GAAG,CAACG,MAAxB,EAAgCF,CAAC,GAAGY,CAApC,EAAuCZ,CAAC,IAAI,CAA5C,EAA+C;AAC7CgB,IAAAA,GAAG,CAACC,IAAJ,CAAS3B,QAAQ,CAACS,GAAG,CAACR,KAAJ,CAAUS,CAAV,EAAaA,CAAC,GAAG,CAAjB,CAAD,EAAsB,EAAtB,CAAjB;AACD;;AAAA,SAAOgB,GAAP;AACF,CALD;;AAOA,IAAIE,SAAS,GAAG,SAASA,SAAT,CAAmBF,GAAnB,EAAwB;AACtC,MAAIjB,GAAG,GAAG,IAAV;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWY,CAAC,GAAGI,GAAG,CAACd,MAAxB,EAAgCF,CAAC,GAAGY,CAApC,EAAuC,EAAEZ,CAAzC,EAA4C;AAC1C,QAAImB,CAAC,GAAGH,GAAG,CAAChB,CAAD,CAAX;AACAD,IAAAA,GAAG,IAAI,CAACoB,CAAC,GAAG,EAAJ,GAAS,GAAT,GAAe,EAAhB,IAAsBA,CAAC,CAAClB,QAAF,CAAW,EAAX,CAA7B;AACD;;AACD,SAAOF,GAAP;AACD,CAPD;;AASA,IAAIqB,YAAY,GAAG,SAASA,YAAT,CAAsBrB,GAAtB,EAA2B;AAC5C,SAAO,IAAIF,UAAJ,CAAekB,OAAO,CAAChB,GAAD,CAAtB,CAAP;AACD,CAFD;;AAIA,IAAIsB,cAAc,GAAG,SAASA,cAAT,CAAwBL,GAAxB,EAA6B;AAChD,SAAOE,SAAS,CAAC,GAAG3B,KAAH,CAAS+B,IAAT,CAAcN,GAAd,EAAmB,CAAnB,CAAD,CAAhB;AACD,CAFD;;AAIA,IAAIO,UAAU,GAAG,SAASA,UAAT,CAAoBC,GAApB,EAAyB;AACxC,MAAIzB,GAAG,GAAGyB,GAAG,CAACvB,QAAJ,CAAa,EAAb,CAAV;AACA,SAAOF,GAAG,CAACG,MAAJ,GAAa,CAAb,KAAmB,CAAnB,GAAuB,OAAOH,GAA9B,GAAoC,QAAQA,GAAnD;AACD,CAHD;;AAKA,IAAI0B,QAAQ,GAAG,SAASA,QAAT,CAAkB1B,GAAlB,EAAuB;AACpC,SAAOT,QAAQ,CAACS,GAAG,CAACR,KAAJ,CAAU,CAAV,CAAD,EAAe,EAAf,CAAf;AACD,CAFD;;AAIA,IAAImC,MAAM,GAAG,SAASA,MAAT,CAAgBvB,CAAhB,EAAmBgB,CAAnB,EAAsB;AACjC,SAAOhB,CAAC,CAACuB,MAAF,CAASP,CAAC,CAAC5B,KAAF,CAAQ,CAAR,CAAT,CAAP;AACD,CAFD;;AAIA,IAAIoC,OAAO,GAAG,SAASA,OAAT,CAAiBC,EAAjB,EAAqB;AACjC,SAAOA,EAAE,KAAK,KAAP,GAAe,IAAf,GAAsBA,EAAE,CAAC1B,MAAH,GAAY,CAAZ,KAAkB,CAAlB,GAAsB0B,EAAtB,GAA2B,QAAQA,EAAE,CAACrC,KAAH,CAAS,CAAT,CAAhE;AACD,CAFD;;AAIA,IAAIsC,KAAK,GAAG,SAASA,KAAT,CAAeD,EAAf,EAAmB;AAC7B,SAAOA,EAAE,CAAC,CAAD,CAAF,KAAU,GAAV,GAAgB,OAAOA,EAAE,CAACrC,KAAH,CAAS,CAAT,CAAvB,GAAqCqC,EAA5C;AACD,CAFD;;AAIA,IAAIE,SAAS,GAAG,SAASA,SAAT,CAAmBC,KAAnB,EAA0B;AACxC,MAAIhC,GAAG,GAAG,IAAV;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+B,KAAK,CAAC7B,MAA1B,EAAkC,EAAEF,CAApC,EAAuC;AACrCD,IAAAA,GAAG,IAAI,CAAC,OAAOgC,KAAK,CAACC,UAAN,CAAiBhC,CAAjB,EAAoBC,QAApB,CAA6B,EAA7B,CAAR,EAA0CV,KAA1C,CAAgD,CAAC,CAAjD,CAAP;AACD;;AAAA,SAAOQ,GAAP;AACF,CALD;;AAOA,IAAIkC,OAAO,GAAG,SAASA,OAAT,CAAiBlC,GAAjB,EAAsB;AAClC,MAAIgC,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAI/B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,CAACG,MAAxB,EAAgCF,CAAC,IAAI,CAArC,EAAwC;AACtC+B,IAAAA,KAAK,IAAIG,MAAM,CAACC,YAAP,CAAoB7C,QAAQ,CAACS,GAAG,CAACR,KAAJ,CAAUS,CAAV,EAAaA,CAAC,GAAG,CAAjB,CAAD,EAAsB,EAAtB,CAA5B,CAAT;AACD;;AAAA,SAAO+B,KAAP;AACF,CALD,C,CAOA;;;AACA,IAAIK,UAAU,GAAG,SAASA,UAAT,CAAoB7B,CAApB,EAAuB;AACtC,MAAI8B,QAAQ,GAAG,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,QAAInB,CAAC,GAAGmB,KAAK,CAACrC,QAAN,CAAe,EAAf,CAAR;AACA,WAAOkB,CAAC,CAACjB,MAAF,GAAW,CAAX,GAAe,MAAMiB,CAArB,GAAyBA,CAAhC;AACD,GAHD;;AAIA,MAAI/B,KAAK,GAAG,IAAZ;;AACA,OAAK,IAAImD,EAAE,GAAG,CAAd,EAAiBA,EAAE,IAAIhC,CAAC,CAACL,MAAzB,EAAiCqC,EAAE,EAAnC,EAAuC;AACrC,QAAIC,CAAC,GAAGjC,CAAC,CAACyB,UAAF,CAAaO,EAAb,CAAR;;AACA,QAAIC,CAAC,GAAG,GAAR,EAAa;AACXpD,MAAAA,KAAK,IAAIiD,QAAQ,CAACG,CAAD,CAAjB;AACA;AACD;;AACD,QAAIA,CAAC,GAAG,IAAR,EAAc;AACZpD,MAAAA,KAAK,IAAIiD,QAAQ,CAACG,CAAC,IAAI,CAAL,GAAS,GAAV,CAAjB;AACD,KAFD,MAEO;AACL,UAAIA,CAAC,GAAG,MAAJ,IAAcA,CAAC,GAAG,MAAtB,EAA8B;AAC5B,YAAI,EAAED,EAAF,IAAQhC,CAAC,CAACL,MAAd,EAAsB,OAAO,IAAP;AACtB,YAAIuC,EAAE,GAAGlC,CAAC,CAACyB,UAAF,CAAaO,EAAb,CAAT;AACA,YAAIE,EAAE,GAAG,MAAL,IAAeA,EAAE,GAAG,MAAxB,EAAgC,OAAO,IAAP;AAChCD,QAAAA,CAAC,GAAG,WAAW,CAACA,CAAC,GAAG,MAAL,KAAgB,EAA3B,KAAkCC,EAAE,GAAG,MAAvC,CAAJ;AACArD,QAAAA,KAAK,IAAIiD,QAAQ,CAACG,CAAC,IAAI,EAAL,GAAU,GAAX,CAAjB;AACApD,QAAAA,KAAK,IAAIiD,QAAQ,CAACG,CAAC,IAAI,EAAL,GAAU,EAAV,GAAe,GAAhB,CAAjB;AACD,OAPD,MAOO;AACL;AACApD,QAAAA,KAAK,IAAIiD,QAAQ,CAACG,CAAC,IAAI,EAAL,GAAU,GAAX,CAAjB;AACD;;AACDpD,MAAAA,KAAK,IAAIiD,QAAQ,CAACG,CAAC,IAAI,CAAL,GAAS,EAAT,GAAc,GAAf,CAAjB;AACD;;AACDpD,IAAAA,KAAK,IAAIiD,QAAQ,CAACG,CAAC,GAAG,EAAJ,GAAS,GAAV,CAAjB;AACD;;AACD,SAAOpD,KAAP;AACD,CA/BD;;AAiCA,IAAIa,QAAQ,GAAG,SAASA,QAAT,CAAkBb,KAAlB,EAAyB;AACtC,MAAImB,CAAC,GAAG,EAAR;AACA,MAAIP,CAAC,GAAG,CAAR;AACA,MAAIY,CAAC,GAAGV,MAAM,CAACd,KAAD,CAAd;;AACA,SAAOY,CAAC,GAAGY,CAAX,EAAc;AACZ,QAAI4B,CAAC,GAAGrD,EAAE,CAACC,KAAD,EAAQY,CAAC,EAAT,CAAV;;AACA,QAAIwC,CAAC,GAAG,GAAR,EAAa;AACX,UAAIA,CAAC,GAAG,GAAJ,IAAWA,CAAC,GAAG,GAAnB,EAAwB;AACtB,YAAIxC,CAAC,IAAIY,CAAT,EAAY,OAAO,IAAP;AACZ4B,QAAAA,CAAC,GAAG,CAACA,CAAC,GAAG,EAAL,KAAY,CAAZ,GAAgBrD,EAAE,CAACC,KAAD,EAAQY,CAAR,CAAF,GAAe,EAAnC;AACD,OAHD,MAGO,IAAIwC,CAAC,GAAG,GAAJ,IAAWA,CAAC,GAAG,GAAnB,EAAwB;AAC7B,YAAIxC,CAAC,GAAG,CAAJ,IAASY,CAAb,EAAgB,OAAO,IAAP;AAChB4B,QAAAA,CAAC,GAAG,CAACA,CAAC,GAAG,EAAL,KAAY,EAAZ,GAAiB,CAACrD,EAAE,CAACC,KAAD,EAAQY,CAAR,CAAF,GAAe,EAAhB,KAAuB,CAAxC,GAA4Cb,EAAE,CAACC,KAAD,EAAQ,EAAEY,CAAV,CAAF,GAAiB,EAAjE;AACD,OAHM,MAGA,IAAIwC,CAAC,GAAG,GAAJ,IAAWA,CAAC,GAAG,GAAnB,EAAwB;AAC7B,YAAIxC,CAAC,GAAG,CAAJ,IAASY,CAAb,EAAgB,OAAO,IAAP;AAChB4B,QAAAA,CAAC,GAAG,CAACA,CAAC,GAAG,CAAL,KAAW,EAAX,GAAgB,CAACrD,EAAE,CAACC,KAAD,EAAQY,CAAR,CAAF,GAAe,EAAhB,KAAuB,EAAvC,GAA4C,CAACb,EAAE,CAACC,KAAD,EAAQ,EAAEY,CAAV,CAAF,GAAiB,EAAlB,KAAyB,CAArE,GAAyEb,EAAE,CAACC,KAAD,EAAQ,EAAEY,CAAV,CAAF,GAAiB,EAA9F;AACD,OAHM,MAGA,OAAO,IAAP;;AACP,QAAEA,CAAF;AACD;;AACD,QAAIwC,CAAC,IAAI,MAAT,EAAiBjC,CAAC,IAAI2B,MAAM,CAACC,YAAP,CAAoBK,CAApB,CAAL,CAAjB,KAAkD,IAAIA,CAAC,IAAI,QAAT,EAAmB;AACnEA,MAAAA,CAAC,IAAI,OAAL;AACAjC,MAAAA,CAAC,IAAI2B,MAAM,CAACC,YAAP,CAAoBK,CAAC,IAAI,EAAL,GAAU,MAA9B,CAAL;AACAjC,MAAAA,CAAC,IAAI2B,MAAM,CAACC,YAAP,CAAoBK,CAAC,GAAG,KAAJ,GAAY,MAAhC,CAAL;AACD,KAJiD,MAI3C,OAAO,IAAP;AACR;;AACD,SAAOjC,CAAP;AACD,CA1BD;;AA4BAmC,MAAM,CAACC,OAAP,GAAiB;AACfnD,EAAAA,MAAM,EAAEA,MADO;AAEfU,EAAAA,MAAM,EAAEA,MAFO;AAGfwB,EAAAA,MAAM,EAAEA,MAHO;AAIftB,EAAAA,OAAO,EAAEA,OAJM;AAKfb,EAAAA,KAAK,EAAEA,KALQ;AAMfmB,EAAAA,OAAO,EAAEA,OANM;AAOfG,EAAAA,GAAG,EAAEA,GAPU;AAQfC,EAAAA,QAAQ,EAAEA,QARK;AASfgB,EAAAA,SAAS,EAAEA,SATI;AAUfG,EAAAA,OAAO,EAAEA,OAVM;AAWfG,EAAAA,UAAU,EAAEA,UAXG;AAYfnC,EAAAA,QAAQ,EAAEA,QAZK;AAafsB,EAAAA,UAAU,EAAEA,UAbG;AAcfE,EAAAA,QAAQ,EAAEA,QAdK;AAefE,EAAAA,OAAO,EAAEA,OAfM;AAgBfE,EAAAA,KAAK,EAAEA,KAhBQ;AAiBfX,EAAAA,SAAS,EAAEA,SAjBI;AAkBfH,EAAAA,OAAO,EAAEA,OAlBM;AAmBfM,EAAAA,cAAc,EAAEA,cAnBD;AAoBfD,EAAAA,YAAY,EAAEA;AApBC,CAAjB","sourcesContent":["var A = require(\"./array.js\");\n\nvar at = function at(bytes, index) {\n  return parseInt(bytes.slice(index * 2 + 2, index * 2 + 4), 16);\n};\n\nvar random = function random(bytes) {\n  var rnd = void 0;\n  if (typeof window !== \"undefined\" && window.crypto && window.crypto.getRandomValues) rnd = window.crypto.getRandomValues(new Uint8Array(bytes));else if (typeof require !== \"undefined\") rnd = require(\"c\" + \"rypto\").randomBytes(bytes);else throw \"Safe random numbers not available.\";\n  var hex = \"0x\";\n  for (var i = 0; i < bytes; ++i) {\n    hex += (\"00\" + rnd[i].toString(16)).slice(-2);\n  }return hex;\n};\n\nvar length = function length(a) {\n  return (a.length - 2) / 2;\n};\n\nvar flatten = function flatten(a) {\n  return \"0x\" + a.reduce(function (r, s) {\n    return r + s.slice(2);\n  }, \"\");\n};\n\nvar slice = function slice(i, j, bs) {\n  return \"0x\" + bs.slice(i * 2 + 2, j * 2 + 2);\n};\n\nvar reverse = function reverse(hex) {\n  var rev = \"0x\";\n  for (var i = 0, l = length(hex); i < l; ++i) {\n    rev += hex.slice((l - i) * 2, (l - i + 1) * 2);\n  }\n  return rev;\n};\n\nvar pad = function pad(l, hex) {\n  return hex.length === l * 2 + 2 ? hex : pad(l, \"0x\" + \"0\" + hex.slice(2));\n};\n\nvar padRight = function padRight(l, hex) {\n  return hex.length === l * 2 + 2 ? hex : padRight(l, hex + \"0\");\n};\n\nvar toArray = function toArray(hex) {\n  var arr = [];\n  for (var i = 2, l = hex.length; i < l; i += 2) {\n    arr.push(parseInt(hex.slice(i, i + 2), 16));\n  }return arr;\n};\n\nvar fromArray = function fromArray(arr) {\n  var hex = \"0x\";\n  for (var i = 0, l = arr.length; i < l; ++i) {\n    var b = arr[i];\n    hex += (b < 16 ? \"0\" : \"\") + b.toString(16);\n  }\n  return hex;\n};\n\nvar toUint8Array = function toUint8Array(hex) {\n  return new Uint8Array(toArray(hex));\n};\n\nvar fromUint8Array = function fromUint8Array(arr) {\n  return fromArray([].slice.call(arr, 0));\n};\n\nvar fromNumber = function fromNumber(num) {\n  var hex = num.toString(16);\n  return hex.length % 2 === 0 ? \"0x\" + hex : \"0x0\" + hex;\n};\n\nvar toNumber = function toNumber(hex) {\n  return parseInt(hex.slice(2), 16);\n};\n\nvar concat = function concat(a, b) {\n  return a.concat(b.slice(2));\n};\n\nvar fromNat = function fromNat(bn) {\n  return bn === \"0x0\" ? \"0x\" : bn.length % 2 === 0 ? bn : \"0x0\" + bn.slice(2);\n};\n\nvar toNat = function toNat(bn) {\n  return bn[2] === \"0\" ? \"0x\" + bn.slice(3) : bn;\n};\n\nvar fromAscii = function fromAscii(ascii) {\n  var hex = \"0x\";\n  for (var i = 0; i < ascii.length; ++i) {\n    hex += (\"00\" + ascii.charCodeAt(i).toString(16)).slice(-2);\n  }return hex;\n};\n\nvar toAscii = function toAscii(hex) {\n  var ascii = \"\";\n  for (var i = 2; i < hex.length; i += 2) {\n    ascii += String.fromCharCode(parseInt(hex.slice(i, i + 2), 16));\n  }return ascii;\n};\n\n// From https://gist.github.com/pascaldekloe/62546103a1576803dade9269ccf76330\nvar fromString = function fromString(s) {\n  var makeByte = function makeByte(uint8) {\n    var b = uint8.toString(16);\n    return b.length < 2 ? \"0\" + b : b;\n  };\n  var bytes = \"0x\";\n  for (var ci = 0; ci != s.length; ci++) {\n    var c = s.charCodeAt(ci);\n    if (c < 128) {\n      bytes += makeByte(c);\n      continue;\n    }\n    if (c < 2048) {\n      bytes += makeByte(c >> 6 | 192);\n    } else {\n      if (c > 0xd7ff && c < 0xdc00) {\n        if (++ci == s.length) return null;\n        var c2 = s.charCodeAt(ci);\n        if (c2 < 0xdc00 || c2 > 0xdfff) return null;\n        c = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n        bytes += makeByte(c >> 18 | 240);\n        bytes += makeByte(c >> 12 & 63 | 128);\n      } else {\n        // c <= 0xffff\n        bytes += makeByte(c >> 12 | 224);\n      }\n      bytes += makeByte(c >> 6 & 63 | 128);\n    }\n    bytes += makeByte(c & 63 | 128);\n  }\n  return bytes;\n};\n\nvar toString = function toString(bytes) {\n  var s = '';\n  var i = 0;\n  var l = length(bytes);\n  while (i < l) {\n    var c = at(bytes, i++);\n    if (c > 127) {\n      if (c > 191 && c < 224) {\n        if (i >= l) return null;\n        c = (c & 31) << 6 | at(bytes, i) & 63;\n      } else if (c > 223 && c < 240) {\n        if (i + 1 >= l) return null;\n        c = (c & 15) << 12 | (at(bytes, i) & 63) << 6 | at(bytes, ++i) & 63;\n      } else if (c > 239 && c < 248) {\n        if (i + 2 >= l) return null;\n        c = (c & 7) << 18 | (at(bytes, i) & 63) << 12 | (at(bytes, ++i) & 63) << 6 | at(bytes, ++i) & 63;\n      } else return null;\n      ++i;\n    }\n    if (c <= 0xffff) s += String.fromCharCode(c);else if (c <= 0x10ffff) {\n      c -= 0x10000;\n      s += String.fromCharCode(c >> 10 | 0xd800);\n      s += String.fromCharCode(c & 0x3FF | 0xdc00);\n    } else return null;\n  }\n  return s;\n};\n\nmodule.exports = {\n  random: random,\n  length: length,\n  concat: concat,\n  flatten: flatten,\n  slice: slice,\n  reverse: reverse,\n  pad: pad,\n  padRight: padRight,\n  fromAscii: fromAscii,\n  toAscii: toAscii,\n  fromString: fromString,\n  toString: toString,\n  fromNumber: fromNumber,\n  toNumber: toNumber,\n  fromNat: fromNat,\n  toNat: toNat,\n  fromArray: fromArray,\n  toArray: toArray,\n  fromUint8Array: fromUint8Array,\n  toUint8Array: toUint8Array\n};"]},"metadata":{},"sourceType":"script"}