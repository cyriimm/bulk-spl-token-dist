{"ast":null,"code":"/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * @file WebsocketProvider.js\n * @authors: Samuel Furter <samuel@ethereum.org>, Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2019\n */\n'use strict';\n\nvar EventEmitter = require('eventemitter3');\n\nvar helpers = require('./helpers.js');\n\nvar errors = require('web3-core-helpers').errors;\n\nvar Ws = require('websocket').w3cwebsocket;\n/**\n * @param {string} url\n * @param {Object} options\n *\n * @constructor\n */\n\n\nvar WebsocketProvider = function WebsocketProvider(url, options) {\n  EventEmitter.call(this);\n  options = options || {};\n  this.url = url;\n  this._customTimeout = options.timeout || 1000 * 15;\n  this.headers = options.headers || {};\n  this.protocol = options.protocol || undefined;\n  this.reconnectOptions = Object.assign({\n    auto: false,\n    delay: 5000,\n    maxAttempts: false,\n    onTimeout: false\n  }, options.reconnect);\n  this.clientConfig = options.clientConfig || undefined; // Allow a custom client configuration\n\n  this.requestOptions = options.requestOptions || undefined; // Allow a custom request options (https://github.com/theturtle32/WebSocket-Node/blob/master/docs/WebSocketClient.md#connectrequesturl-requestedprotocols-origin-headers-requestoptions)\n\n  this.DATA = 'data';\n  this.CLOSE = 'close';\n  this.ERROR = 'error';\n  this.CONNECT = 'connect';\n  this.RECONNECT = 'reconnect';\n  this.connection = null;\n  this.requestQueue = new Map();\n  this.responseQueue = new Map();\n  this.reconnectAttempts = 0;\n  this.reconnecting = false; // The w3cwebsocket implementation does not support Basic Auth\n  // username/password in the URL. So generate the basic auth header, and\n  // pass through with any additional headers supplied in constructor\n\n  var parsedURL = helpers.parseURL(url);\n\n  if (parsedURL.username && parsedURL.password) {\n    this.headers.authorization = 'Basic ' + helpers.btoa(parsedURL.username + ':' + parsedURL.password);\n  } // When all node core implementations that do not have the\n  // WHATWG compatible URL parser go out of service this line can be removed.\n\n\n  if (parsedURL.auth) {\n    this.headers.authorization = 'Basic ' + helpers.btoa(parsedURL.auth);\n  } // make property `connected` which will return the current connection status\n\n\n  Object.defineProperty(this, 'connected', {\n    get: function () {\n      return this.connection && this.connection.readyState === this.connection.OPEN;\n    },\n    enumerable: true\n  });\n  this.connect();\n}; // Inherit from EventEmitter\n\n\nWebsocketProvider.prototype = Object.create(EventEmitter.prototype);\nWebsocketProvider.prototype.constructor = WebsocketProvider;\n/**\n * Connects to the configured node\n *\n * @method connect\n *\n * @returns {void}\n */\n\nWebsocketProvider.prototype.connect = function () {\n  this.connection = new Ws(this.url, this.protocol, undefined, this.headers, this.requestOptions, this.clientConfig);\n\n  this._addSocketListeners();\n};\n/**\n * Listener for the `data` event of the underlying WebSocket object\n *\n * @method _onMessage\n *\n * @returns {void}\n */\n\n\nWebsocketProvider.prototype._onMessage = function (e) {\n  var _this = this;\n\n  this._parseResponse(typeof e.data === 'string' ? e.data : '').forEach(function (result) {\n    if (result.method && result.method.indexOf('_subscription') !== -1) {\n      _this.emit(_this.DATA, result);\n\n      return;\n    }\n\n    var id = result.id; // get the id which matches the returned id\n\n    if (Array.isArray(result)) {\n      id = result[0].id;\n    }\n\n    if (_this.responseQueue.has(id)) {\n      if (_this.responseQueue.get(id).callback !== undefined) {\n        _this.responseQueue.get(id).callback(false, result);\n      }\n\n      _this.responseQueue.delete(id);\n    }\n  });\n};\n/**\n * Listener for the `open` event of the underlying WebSocket object\n *\n * @method _onConnect\n *\n * @returns {void}\n */\n\n\nWebsocketProvider.prototype._onConnect = function () {\n  this.emit(this.CONNECT);\n  this.reconnectAttempts = 0;\n  this.reconnecting = false;\n\n  if (this.requestQueue.size > 0) {\n    var _this = this;\n\n    this.requestQueue.forEach(function (request, key) {\n      _this.send(request.payload, request.callback);\n\n      _this.requestQueue.delete(key);\n    });\n  }\n};\n/**\n * Listener for the `close` event of the underlying WebSocket object\n *\n * @method _onClose\n *\n * @returns {void}\n */\n\n\nWebsocketProvider.prototype._onClose = function (event) {\n  var _this = this;\n\n  if (this.reconnectOptions.auto && (![1000, 1001].includes(event.code) || event.wasClean === false)) {\n    this.reconnect();\n    return;\n  }\n\n  this.emit(this.CLOSE, event);\n\n  if (this.requestQueue.size > 0) {\n    this.requestQueue.forEach(function (request, key) {\n      request.callback(errors.ConnectionNotOpenError(event));\n\n      _this.requestQueue.delete(key);\n    });\n  }\n\n  if (this.responseQueue.size > 0) {\n    this.responseQueue.forEach(function (request, key) {\n      request.callback(errors.InvalidConnection('on WS', event));\n\n      _this.responseQueue.delete(key);\n    });\n  }\n\n  this._removeSocketListeners();\n\n  this.removeAllListeners();\n};\n/**\n * Will add the required socket listeners\n *\n * @method _addSocketListeners\n *\n * @returns {void}\n */\n\n\nWebsocketProvider.prototype._addSocketListeners = function () {\n  this.connection.addEventListener('message', this._onMessage.bind(this));\n  this.connection.addEventListener('open', this._onConnect.bind(this));\n  this.connection.addEventListener('close', this._onClose.bind(this));\n};\n/**\n * Will remove all socket listeners\n *\n * @method _removeSocketListeners\n *\n * @returns {void}\n */\n\n\nWebsocketProvider.prototype._removeSocketListeners = function () {\n  this.connection.removeEventListener('message', this._onMessage);\n  this.connection.removeEventListener('open', this._onConnect);\n  this.connection.removeEventListener('close', this._onClose);\n};\n/**\n * Will parse the response and make an array out of it.\n *\n * @method _parseResponse\n *\n * @param {String} data\n *\n * @returns {Array}\n */\n\n\nWebsocketProvider.prototype._parseResponse = function (data) {\n  var _this = this,\n      returnValues = []; // DE-CHUNKER\n\n\n  var dechunkedData = data.replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\n  .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\n  .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\n  .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\n  .split('|--|');\n  dechunkedData.forEach(function (data) {\n    // prepend the last chunk\n    if (_this.lastChunk) data = _this.lastChunk + data;\n    var result = null;\n\n    try {\n      result = JSON.parse(data);\n    } catch (e) {\n      _this.lastChunk = data; // start timeout to cancel all requests\n\n      clearTimeout(_this.lastChunkTimeout);\n      _this.lastChunkTimeout = setTimeout(function () {\n        if (_this.reconnectOptions.auto && _this.reconnectOptions.onTimeout) {\n          _this.reconnect();\n\n          return;\n        }\n\n        _this.emit(_this.ERROR, errors.ConnectionTimeout(_this._customTimeout));\n\n        if (_this.requestQueue.size > 0) {\n          _this.requestQueue.forEach(function (request, key) {\n            request.callback(errors.ConnectionTimeout(_this._customTimeout));\n\n            _this.requestQueue.delete(key);\n          });\n        }\n      }, _this._customTimeout);\n      return;\n    } // cancel timeout and set chunk to null\n\n\n    clearTimeout(_this.lastChunkTimeout);\n    _this.lastChunk = null;\n    if (result) returnValues.push(result);\n  });\n  return returnValues;\n};\n/**\n * Does check if the provider is connecting and will add it to the queue or will send it directly\n *\n * @method send\n *\n * @param {Object} payload\n * @param {Function} callback\n *\n * @returns {void}\n */\n\n\nWebsocketProvider.prototype.send = function (payload, callback) {\n  var _this = this;\n\n  var id = payload.id;\n  var request = {\n    payload: payload,\n    callback: callback\n  };\n\n  if (Array.isArray(payload)) {\n    id = payload[0].id;\n  }\n\n  if (this.connection.readyState === this.connection.CONNECTING || this.reconnecting) {\n    this.requestQueue.set(id, request);\n    return;\n  }\n\n  if (this.connection.readyState !== this.connection.OPEN) {\n    this.requestQueue.delete(id);\n    this.emit(this.ERROR, errors.ConnectionNotOpenError());\n    request.callback(errors.ConnectionNotOpenError());\n    return;\n  }\n\n  this.responseQueue.set(id, request);\n  this.requestQueue.delete(id);\n\n  try {\n    this.connection.send(JSON.stringify(request.payload));\n  } catch (error) {\n    request.callback(error);\n\n    _this.responseQueue.delete(id);\n  }\n};\n/**\n * Resets the providers, clears all callbacks\n *\n * @method reset\n *\n * @returns {void}\n */\n\n\nWebsocketProvider.prototype.reset = function () {\n  this.responseQueue.clear();\n  this.requestQueue.clear();\n  this.removeAllListeners();\n\n  this._removeSocketListeners();\n\n  this._addSocketListeners();\n};\n/**\n * Closes the current connection with the given code and reason arguments\n *\n * @method disconnect\n *\n * @param {number} code\n * @param {string} reason\n *\n * @returns {void}\n */\n\n\nWebsocketProvider.prototype.disconnect = function (code, reason) {\n  this._removeSocketListeners();\n\n  this.connection.close(code || 1000, reason);\n};\n/**\n * Returns the desired boolean.\n *\n * @method supportsSubscriptions\n *\n * @returns {boolean}\n */\n\n\nWebsocketProvider.prototype.supportsSubscriptions = function () {\n  return true;\n};\n/**\n * Removes the listeners and reconnects to the socket.\n *\n * @method reconnect\n *\n * @returns {void}\n */\n\n\nWebsocketProvider.prototype.reconnect = function () {\n  var _this = this;\n\n  this.reconnecting = true;\n\n  if (this.responseQueue.size > 0) {\n    this.responseQueue.forEach(function (request, key) {\n      request.callback(errors.PendingRequestsOnReconnectingError());\n\n      _this.responseQueue.delete(key);\n    });\n  }\n\n  if (!this.reconnectOptions.maxAttempts || this.reconnectAttempts < this.reconnectOptions.maxAttempts) {\n    setTimeout(function () {\n      _this.reconnectAttempts++;\n\n      _this._removeSocketListeners();\n\n      _this.emit(_this.RECONNECT, _this.reconnectAttempts);\n\n      _this.connect();\n    }, this.reconnectOptions.delay);\n    return;\n  }\n\n  this.emit(this.ERROR, errors.MaxAttemptsReachedOnReconnectingError());\n  this.reconnecting = false;\n\n  if (this.requestQueue.size > 0) {\n    this.requestQueue.forEach(function (request, key) {\n      request.callback(errors.MaxAttemptsReachedOnReconnectingError());\n\n      _this.requestQueue.delete(key);\n    });\n  }\n};\n\nmodule.exports = WebsocketProvider;","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/node_modules/web3-providers-ws/lib/index.js"],"names":["EventEmitter","require","helpers","errors","Ws","w3cwebsocket","WebsocketProvider","url","options","call","_customTimeout","timeout","headers","protocol","undefined","reconnectOptions","Object","assign","auto","delay","maxAttempts","onTimeout","reconnect","clientConfig","requestOptions","DATA","CLOSE","ERROR","CONNECT","RECONNECT","connection","requestQueue","Map","responseQueue","reconnectAttempts","reconnecting","parsedURL","parseURL","username","password","authorization","btoa","auth","defineProperty","get","readyState","OPEN","enumerable","connect","prototype","create","constructor","_addSocketListeners","_onMessage","e","_this","_parseResponse","data","forEach","result","method","indexOf","emit","id","Array","isArray","has","callback","delete","_onConnect","size","request","key","send","payload","_onClose","event","includes","code","wasClean","ConnectionNotOpenError","InvalidConnection","_removeSocketListeners","removeAllListeners","addEventListener","bind","removeEventListener","returnValues","dechunkedData","replace","split","lastChunk","JSON","parse","clearTimeout","lastChunkTimeout","setTimeout","ConnectionTimeout","push","CONNECTING","set","stringify","error","reset","clear","disconnect","reason","close","supportsSubscriptions","PendingRequestsOnReconnectingError","MaxAttemptsReachedOnReconnectingError","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,cAAD,CAArB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,mBAAD,CAAP,CAA6BE,MAA1C;;AACA,IAAIC,EAAE,GAAGH,OAAO,CAAC,WAAD,CAAP,CAAqBI,YAA9B;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,GAA3B,EAAgCC,OAAhC,EAAyC;AAC7DR,EAAAA,YAAY,CAACS,IAAb,CAAkB,IAAlB;AACAD,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,OAAKD,GAAL,GAAWA,GAAX;AACA,OAAKG,cAAL,GAAsBF,OAAO,CAACG,OAAR,IAAmB,OAAO,EAAhD;AACA,OAAKC,OAAL,GAAeJ,OAAO,CAACI,OAAR,IAAmB,EAAlC;AACA,OAAKC,QAAL,GAAgBL,OAAO,CAACK,QAAR,IAAoBC,SAApC;AACA,OAAKC,gBAAL,GAAwBC,MAAM,CAACC,MAAP,CAAc;AAClCC,IAAAA,IAAI,EAAE,KAD4B;AAElCC,IAAAA,KAAK,EAAE,IAF2B;AAGlCC,IAAAA,WAAW,EAAE,KAHqB;AAIlCC,IAAAA,SAAS,EAAE;AAJuB,GAAd,EAKrBb,OAAO,CAACc,SALa,CAAxB;AAMA,OAAKC,YAAL,GAAoBf,OAAO,CAACe,YAAR,IAAwBT,SAA5C,CAb6D,CAaN;;AACvD,OAAKU,cAAL,GAAsBhB,OAAO,CAACgB,cAAR,IAA0BV,SAAhD,CAd6D,CAcF;;AAC3D,OAAKW,IAAL,GAAY,MAAZ;AACA,OAAKC,KAAL,GAAa,OAAb;AACA,OAAKC,KAAL,GAAa,OAAb;AACA,OAAKC,OAAL,GAAe,SAAf;AACA,OAAKC,SAAL,GAAiB,WAAjB;AACA,OAAKC,UAAL,GAAkB,IAAlB;AACA,OAAKC,YAAL,GAAoB,IAAIC,GAAJ,EAApB;AACA,OAAKC,aAAL,GAAqB,IAAID,GAAJ,EAArB;AACA,OAAKE,iBAAL,GAAyB,CAAzB;AACA,OAAKC,YAAL,GAAoB,KAApB,CAxB6D,CAyB7D;AACA;AACA;;AACA,MAAIC,SAAS,GAAGlC,OAAO,CAACmC,QAAR,CAAiB9B,GAAjB,CAAhB;;AACA,MAAI6B,SAAS,CAACE,QAAV,IAAsBF,SAAS,CAACG,QAApC,EAA8C;AAC1C,SAAK3B,OAAL,CAAa4B,aAAb,GAA6B,WAAWtC,OAAO,CAACuC,IAAR,CAAaL,SAAS,CAACE,QAAV,GAAqB,GAArB,GAA2BF,SAAS,CAACG,QAAlD,CAAxC;AACH,GA/B4D,CAgC7D;AACA;;;AACA,MAAIH,SAAS,CAACM,IAAd,EAAoB;AAChB,SAAK9B,OAAL,CAAa4B,aAAb,GAA6B,WAAWtC,OAAO,CAACuC,IAAR,CAAaL,SAAS,CAACM,IAAvB,CAAxC;AACH,GApC4D,CAqC7D;;;AACA1B,EAAAA,MAAM,CAAC2B,cAAP,CAAsB,IAAtB,EAA4B,WAA5B,EAAyC;AACrCC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKd,UAAL,IAAmB,KAAKA,UAAL,CAAgBe,UAAhB,KAA+B,KAAKf,UAAL,CAAgBgB,IAAzE;AACH,KAHoC;AAIrCC,IAAAA,UAAU,EAAE;AAJyB,GAAzC;AAMA,OAAKC,OAAL;AACH,CA7CD,C,CA8CA;;;AACA1C,iBAAiB,CAAC2C,SAAlB,GAA8BjC,MAAM,CAACkC,MAAP,CAAclD,YAAY,CAACiD,SAA3B,CAA9B;AACA3C,iBAAiB,CAAC2C,SAAlB,CAA4BE,WAA5B,GAA0C7C,iBAA1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,iBAAiB,CAAC2C,SAAlB,CAA4BD,OAA5B,GAAsC,YAAY;AAC9C,OAAKlB,UAAL,GAAkB,IAAI1B,EAAJ,CAAO,KAAKG,GAAZ,EAAiB,KAAKM,QAAtB,EAAgCC,SAAhC,EAA2C,KAAKF,OAAhD,EAAyD,KAAKY,cAA9D,EAA8E,KAAKD,YAAnF,CAAlB;;AACA,OAAK6B,mBAAL;AACH,CAHD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA9C,iBAAiB,CAAC2C,SAAlB,CAA4BI,UAA5B,GAAyC,UAAUC,CAAV,EAAa;AAClD,MAAIC,KAAK,GAAG,IAAZ;;AACA,OAAKC,cAAL,CAAqB,OAAOF,CAAC,CAACG,IAAT,KAAkB,QAAnB,GAA+BH,CAAC,CAACG,IAAjC,GAAwC,EAA5D,EAAgEC,OAAhE,CAAwE,UAAUC,MAAV,EAAkB;AACtF,QAAIA,MAAM,CAACC,MAAP,IAAiBD,MAAM,CAACC,MAAP,CAAcC,OAAd,CAAsB,eAAtB,MAA2C,CAAC,CAAjE,EAAoE;AAChEN,MAAAA,KAAK,CAACO,IAAN,CAAWP,KAAK,CAAC9B,IAAjB,EAAuBkC,MAAvB;;AACA;AACH;;AACD,QAAII,EAAE,GAAGJ,MAAM,CAACI,EAAhB,CALsF,CAMtF;;AACA,QAAIC,KAAK,CAACC,OAAN,CAAcN,MAAd,CAAJ,EAA2B;AACvBI,MAAAA,EAAE,GAAGJ,MAAM,CAAC,CAAD,CAAN,CAAUI,EAAf;AACH;;AACD,QAAIR,KAAK,CAACtB,aAAN,CAAoBiC,GAApB,CAAwBH,EAAxB,CAAJ,EAAiC;AAC7B,UAAIR,KAAK,CAACtB,aAAN,CAAoBW,GAApB,CAAwBmB,EAAxB,EAA4BI,QAA5B,KAAyCrD,SAA7C,EAAwD;AACpDyC,QAAAA,KAAK,CAACtB,aAAN,CAAoBW,GAApB,CAAwBmB,EAAxB,EAA4BI,QAA5B,CAAqC,KAArC,EAA4CR,MAA5C;AACH;;AACDJ,MAAAA,KAAK,CAACtB,aAAN,CAAoBmC,MAApB,CAA2BL,EAA3B;AACH;AACJ,GAhBD;AAiBH,CAnBD;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAzD,iBAAiB,CAAC2C,SAAlB,CAA4BoB,UAA5B,GAAyC,YAAY;AACjD,OAAKP,IAAL,CAAU,KAAKlC,OAAf;AACA,OAAKM,iBAAL,GAAyB,CAAzB;AACA,OAAKC,YAAL,GAAoB,KAApB;;AACA,MAAI,KAAKJ,YAAL,CAAkBuC,IAAlB,GAAyB,CAA7B,EAAgC;AAC5B,QAAIf,KAAK,GAAG,IAAZ;;AACA,SAAKxB,YAAL,CAAkB2B,OAAlB,CAA0B,UAAUa,OAAV,EAAmBC,GAAnB,EAAwB;AAC9CjB,MAAAA,KAAK,CAACkB,IAAN,CAAWF,OAAO,CAACG,OAAnB,EAA4BH,OAAO,CAACJ,QAApC;;AACAZ,MAAAA,KAAK,CAACxB,YAAN,CAAmBqC,MAAnB,CAA0BI,GAA1B;AACH,KAHD;AAIH;AACJ,CAXD;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAlE,iBAAiB,CAAC2C,SAAlB,CAA4B0B,QAA5B,GAAuC,UAAUC,KAAV,EAAiB;AACpD,MAAIrB,KAAK,GAAG,IAAZ;;AACA,MAAI,KAAKxC,gBAAL,CAAsBG,IAAtB,KAA+B,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa2D,QAAb,CAAsBD,KAAK,CAACE,IAA5B,CAAD,IAAsCF,KAAK,CAACG,QAAN,KAAmB,KAAxF,CAAJ,EAAoG;AAChG,SAAKzD,SAAL;AACA;AACH;;AACD,OAAKwC,IAAL,CAAU,KAAKpC,KAAf,EAAsBkD,KAAtB;;AACA,MAAI,KAAK7C,YAAL,CAAkBuC,IAAlB,GAAyB,CAA7B,EAAgC;AAC5B,SAAKvC,YAAL,CAAkB2B,OAAlB,CAA0B,UAAUa,OAAV,EAAmBC,GAAnB,EAAwB;AAC9CD,MAAAA,OAAO,CAACJ,QAAR,CAAiBhE,MAAM,CAAC6E,sBAAP,CAA8BJ,KAA9B,CAAjB;;AACArB,MAAAA,KAAK,CAACxB,YAAN,CAAmBqC,MAAnB,CAA0BI,GAA1B;AACH,KAHD;AAIH;;AACD,MAAI,KAAKvC,aAAL,CAAmBqC,IAAnB,GAA0B,CAA9B,EAAiC;AAC7B,SAAKrC,aAAL,CAAmByB,OAAnB,CAA2B,UAAUa,OAAV,EAAmBC,GAAnB,EAAwB;AAC/CD,MAAAA,OAAO,CAACJ,QAAR,CAAiBhE,MAAM,CAAC8E,iBAAP,CAAyB,OAAzB,EAAkCL,KAAlC,CAAjB;;AACArB,MAAAA,KAAK,CAACtB,aAAN,CAAoBmC,MAApB,CAA2BI,GAA3B;AACH,KAHD;AAIH;;AACD,OAAKU,sBAAL;;AACA,OAAKC,kBAAL;AACH,CArBD;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA7E,iBAAiB,CAAC2C,SAAlB,CAA4BG,mBAA5B,GAAkD,YAAY;AAC1D,OAAKtB,UAAL,CAAgBsD,gBAAhB,CAAiC,SAAjC,EAA4C,KAAK/B,UAAL,CAAgBgC,IAAhB,CAAqB,IAArB,CAA5C;AACA,OAAKvD,UAAL,CAAgBsD,gBAAhB,CAAiC,MAAjC,EAAyC,KAAKf,UAAL,CAAgBgB,IAAhB,CAAqB,IAArB,CAAzC;AACA,OAAKvD,UAAL,CAAgBsD,gBAAhB,CAAiC,OAAjC,EAA0C,KAAKT,QAAL,CAAcU,IAAd,CAAmB,IAAnB,CAA1C;AACH,CAJD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA/E,iBAAiB,CAAC2C,SAAlB,CAA4BiC,sBAA5B,GAAqD,YAAY;AAC7D,OAAKpD,UAAL,CAAgBwD,mBAAhB,CAAoC,SAApC,EAA+C,KAAKjC,UAApD;AACA,OAAKvB,UAAL,CAAgBwD,mBAAhB,CAAoC,MAApC,EAA4C,KAAKjB,UAAjD;AACA,OAAKvC,UAAL,CAAgBwD,mBAAhB,CAAoC,OAApC,EAA6C,KAAKX,QAAlD;AACH,CAJD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACArE,iBAAiB,CAAC2C,SAAlB,CAA4BO,cAA5B,GAA6C,UAAUC,IAAV,EAAgB;AACzD,MAAIF,KAAK,GAAG,IAAZ;AAAA,MAAkBgC,YAAY,GAAG,EAAjC,CADyD,CAEzD;;;AACA,MAAIC,aAAa,GAAG/B,IAAI,CACnBgC,OADe,CACP,cADO,EACS,QADT,EACmB;AADnB,GAEfA,OAFe,CAEP,kBAFO,EAEa,UAFb,EAEyB;AAFzB,GAGfA,OAHe,CAGP,gBAHO,EAGW,SAHX,EAGsB;AAHtB,GAIfA,OAJe,CAIP,gBAJO,EAIW,SAJX,EAIsB;AAJtB,GAKfC,KALe,CAKT,MALS,CAApB;AAMAF,EAAAA,aAAa,CAAC9B,OAAd,CAAsB,UAAUD,IAAV,EAAgB;AAClC;AACA,QAAIF,KAAK,CAACoC,SAAV,EACIlC,IAAI,GAAGF,KAAK,CAACoC,SAAN,GAAkBlC,IAAzB;AACJ,QAAIE,MAAM,GAAG,IAAb;;AACA,QAAI;AACAA,MAAAA,MAAM,GAAGiC,IAAI,CAACC,KAAL,CAAWpC,IAAX,CAAT;AACH,KAFD,CAGA,OAAOH,CAAP,EAAU;AACNC,MAAAA,KAAK,CAACoC,SAAN,GAAkBlC,IAAlB,CADM,CAEN;;AACAqC,MAAAA,YAAY,CAACvC,KAAK,CAACwC,gBAAP,CAAZ;AACAxC,MAAAA,KAAK,CAACwC,gBAAN,GAAyBC,UAAU,CAAC,YAAY;AAC5C,YAAIzC,KAAK,CAACxC,gBAAN,CAAuBG,IAAvB,IAA+BqC,KAAK,CAACxC,gBAAN,CAAuBM,SAA1D,EAAqE;AACjEkC,UAAAA,KAAK,CAACjC,SAAN;;AACA;AACH;;AACDiC,QAAAA,KAAK,CAACO,IAAN,CAAWP,KAAK,CAAC5B,KAAjB,EAAwBxB,MAAM,CAAC8F,iBAAP,CAAyB1C,KAAK,CAAC7C,cAA/B,CAAxB;;AACA,YAAI6C,KAAK,CAACxB,YAAN,CAAmBuC,IAAnB,GAA0B,CAA9B,EAAiC;AAC7Bf,UAAAA,KAAK,CAACxB,YAAN,CAAmB2B,OAAnB,CAA2B,UAAUa,OAAV,EAAmBC,GAAnB,EAAwB;AAC/CD,YAAAA,OAAO,CAACJ,QAAR,CAAiBhE,MAAM,CAAC8F,iBAAP,CAAyB1C,KAAK,CAAC7C,cAA/B,CAAjB;;AACA6C,YAAAA,KAAK,CAACxB,YAAN,CAAmBqC,MAAnB,CAA0BI,GAA1B;AACH,WAHD;AAIH;AACJ,OAZkC,EAYhCjB,KAAK,CAAC7C,cAZ0B,CAAnC;AAaA;AACH,KA1BiC,CA2BlC;;;AACAoF,IAAAA,YAAY,CAACvC,KAAK,CAACwC,gBAAP,CAAZ;AACAxC,IAAAA,KAAK,CAACoC,SAAN,GAAkB,IAAlB;AACA,QAAIhC,MAAJ,EACI4B,YAAY,CAACW,IAAb,CAAkBvC,MAAlB;AACP,GAhCD;AAiCA,SAAO4B,YAAP;AACH,CA3CD;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAjF,iBAAiB,CAAC2C,SAAlB,CAA4BwB,IAA5B,GAAmC,UAAUC,OAAV,EAAmBP,QAAnB,EAA6B;AAC5D,MAAIZ,KAAK,GAAG,IAAZ;;AACA,MAAIQ,EAAE,GAAGW,OAAO,CAACX,EAAjB;AACA,MAAIQ,OAAO,GAAG;AAAEG,IAAAA,OAAO,EAAEA,OAAX;AAAoBP,IAAAA,QAAQ,EAAEA;AAA9B,GAAd;;AACA,MAAIH,KAAK,CAACC,OAAN,CAAcS,OAAd,CAAJ,EAA4B;AACxBX,IAAAA,EAAE,GAAGW,OAAO,CAAC,CAAD,CAAP,CAAWX,EAAhB;AACH;;AACD,MAAI,KAAKjC,UAAL,CAAgBe,UAAhB,KAA+B,KAAKf,UAAL,CAAgBqE,UAA/C,IAA6D,KAAKhE,YAAtE,EAAoF;AAChF,SAAKJ,YAAL,CAAkBqE,GAAlB,CAAsBrC,EAAtB,EAA0BQ,OAA1B;AACA;AACH;;AACD,MAAI,KAAKzC,UAAL,CAAgBe,UAAhB,KAA+B,KAAKf,UAAL,CAAgBgB,IAAnD,EAAyD;AACrD,SAAKf,YAAL,CAAkBqC,MAAlB,CAAyBL,EAAzB;AACA,SAAKD,IAAL,CAAU,KAAKnC,KAAf,EAAsBxB,MAAM,CAAC6E,sBAAP,EAAtB;AACAT,IAAAA,OAAO,CAACJ,QAAR,CAAiBhE,MAAM,CAAC6E,sBAAP,EAAjB;AACA;AACH;;AACD,OAAK/C,aAAL,CAAmBmE,GAAnB,CAAuBrC,EAAvB,EAA2BQ,OAA3B;AACA,OAAKxC,YAAL,CAAkBqC,MAAlB,CAAyBL,EAAzB;;AACA,MAAI;AACA,SAAKjC,UAAL,CAAgB2C,IAAhB,CAAqBmB,IAAI,CAACS,SAAL,CAAe9B,OAAO,CAACG,OAAvB,CAArB;AACH,GAFD,CAGA,OAAO4B,KAAP,EAAc;AACV/B,IAAAA,OAAO,CAACJ,QAAR,CAAiBmC,KAAjB;;AACA/C,IAAAA,KAAK,CAACtB,aAAN,CAAoBmC,MAApB,CAA2BL,EAA3B;AACH;AACJ,CA1BD;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAzD,iBAAiB,CAAC2C,SAAlB,CAA4BsD,KAA5B,GAAoC,YAAY;AAC5C,OAAKtE,aAAL,CAAmBuE,KAAnB;AACA,OAAKzE,YAAL,CAAkByE,KAAlB;AACA,OAAKrB,kBAAL;;AACA,OAAKD,sBAAL;;AACA,OAAK9B,mBAAL;AACH,CAND;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA9C,iBAAiB,CAAC2C,SAAlB,CAA4BwD,UAA5B,GAAyC,UAAU3B,IAAV,EAAgB4B,MAAhB,EAAwB;AAC7D,OAAKxB,sBAAL;;AACA,OAAKpD,UAAL,CAAgB6E,KAAhB,CAAsB7B,IAAI,IAAI,IAA9B,EAAoC4B,MAApC;AACH,CAHD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACApG,iBAAiB,CAAC2C,SAAlB,CAA4B2D,qBAA5B,GAAoD,YAAY;AAC5D,SAAO,IAAP;AACH,CAFD;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAtG,iBAAiB,CAAC2C,SAAlB,CAA4B3B,SAA5B,GAAwC,YAAY;AAChD,MAAIiC,KAAK,GAAG,IAAZ;;AACA,OAAKpB,YAAL,GAAoB,IAApB;;AACA,MAAI,KAAKF,aAAL,CAAmBqC,IAAnB,GAA0B,CAA9B,EAAiC;AAC7B,SAAKrC,aAAL,CAAmByB,OAAnB,CAA2B,UAAUa,OAAV,EAAmBC,GAAnB,EAAwB;AAC/CD,MAAAA,OAAO,CAACJ,QAAR,CAAiBhE,MAAM,CAAC0G,kCAAP,EAAjB;;AACAtD,MAAAA,KAAK,CAACtB,aAAN,CAAoBmC,MAApB,CAA2BI,GAA3B;AACH,KAHD;AAIH;;AACD,MAAI,CAAC,KAAKzD,gBAAL,CAAsBK,WAAvB,IACA,KAAKc,iBAAL,GAAyB,KAAKnB,gBAAL,CAAsBK,WADnD,EACgE;AAC5D4E,IAAAA,UAAU,CAAC,YAAY;AACnBzC,MAAAA,KAAK,CAACrB,iBAAN;;AACAqB,MAAAA,KAAK,CAAC2B,sBAAN;;AACA3B,MAAAA,KAAK,CAACO,IAAN,CAAWP,KAAK,CAAC1B,SAAjB,EAA4B0B,KAAK,CAACrB,iBAAlC;;AACAqB,MAAAA,KAAK,CAACP,OAAN;AACH,KALS,EAKP,KAAKjC,gBAAL,CAAsBI,KALf,CAAV;AAMA;AACH;;AACD,OAAK2C,IAAL,CAAU,KAAKnC,KAAf,EAAsBxB,MAAM,CAAC2G,qCAAP,EAAtB;AACA,OAAK3E,YAAL,GAAoB,KAApB;;AACA,MAAI,KAAKJ,YAAL,CAAkBuC,IAAlB,GAAyB,CAA7B,EAAgC;AAC5B,SAAKvC,YAAL,CAAkB2B,OAAlB,CAA0B,UAAUa,OAAV,EAAmBC,GAAnB,EAAwB;AAC9CD,MAAAA,OAAO,CAACJ,QAAR,CAAiBhE,MAAM,CAAC2G,qCAAP,EAAjB;;AACAvD,MAAAA,KAAK,CAACxB,YAAN,CAAmBqC,MAAnB,CAA0BI,GAA1B;AACH,KAHD;AAIH;AACJ,CA3BD;;AA4BAuC,MAAM,CAACC,OAAP,GAAiB1G,iBAAjB","sourcesContent":["/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file WebsocketProvider.js\n * @authors: Samuel Furter <samuel@ethereum.org>, Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2019\n */\n'use strict';\nvar EventEmitter = require('eventemitter3');\nvar helpers = require('./helpers.js');\nvar errors = require('web3-core-helpers').errors;\nvar Ws = require('websocket').w3cwebsocket;\n/**\n * @param {string} url\n * @param {Object} options\n *\n * @constructor\n */\nvar WebsocketProvider = function WebsocketProvider(url, options) {\n    EventEmitter.call(this);\n    options = options || {};\n    this.url = url;\n    this._customTimeout = options.timeout || 1000 * 15;\n    this.headers = options.headers || {};\n    this.protocol = options.protocol || undefined;\n    this.reconnectOptions = Object.assign({\n        auto: false,\n        delay: 5000,\n        maxAttempts: false,\n        onTimeout: false\n    }, options.reconnect);\n    this.clientConfig = options.clientConfig || undefined; // Allow a custom client configuration\n    this.requestOptions = options.requestOptions || undefined; // Allow a custom request options (https://github.com/theturtle32/WebSocket-Node/blob/master/docs/WebSocketClient.md#connectrequesturl-requestedprotocols-origin-headers-requestoptions)\n    this.DATA = 'data';\n    this.CLOSE = 'close';\n    this.ERROR = 'error';\n    this.CONNECT = 'connect';\n    this.RECONNECT = 'reconnect';\n    this.connection = null;\n    this.requestQueue = new Map();\n    this.responseQueue = new Map();\n    this.reconnectAttempts = 0;\n    this.reconnecting = false;\n    // The w3cwebsocket implementation does not support Basic Auth\n    // username/password in the URL. So generate the basic auth header, and\n    // pass through with any additional headers supplied in constructor\n    var parsedURL = helpers.parseURL(url);\n    if (parsedURL.username && parsedURL.password) {\n        this.headers.authorization = 'Basic ' + helpers.btoa(parsedURL.username + ':' + parsedURL.password);\n    }\n    // When all node core implementations that do not have the\n    // WHATWG compatible URL parser go out of service this line can be removed.\n    if (parsedURL.auth) {\n        this.headers.authorization = 'Basic ' + helpers.btoa(parsedURL.auth);\n    }\n    // make property `connected` which will return the current connection status\n    Object.defineProperty(this, 'connected', {\n        get: function () {\n            return this.connection && this.connection.readyState === this.connection.OPEN;\n        },\n        enumerable: true\n    });\n    this.connect();\n};\n// Inherit from EventEmitter\nWebsocketProvider.prototype = Object.create(EventEmitter.prototype);\nWebsocketProvider.prototype.constructor = WebsocketProvider;\n/**\n * Connects to the configured node\n *\n * @method connect\n *\n * @returns {void}\n */\nWebsocketProvider.prototype.connect = function () {\n    this.connection = new Ws(this.url, this.protocol, undefined, this.headers, this.requestOptions, this.clientConfig);\n    this._addSocketListeners();\n};\n/**\n * Listener for the `data` event of the underlying WebSocket object\n *\n * @method _onMessage\n *\n * @returns {void}\n */\nWebsocketProvider.prototype._onMessage = function (e) {\n    var _this = this;\n    this._parseResponse((typeof e.data === 'string') ? e.data : '').forEach(function (result) {\n        if (result.method && result.method.indexOf('_subscription') !== -1) {\n            _this.emit(_this.DATA, result);\n            return;\n        }\n        var id = result.id;\n        // get the id which matches the returned id\n        if (Array.isArray(result)) {\n            id = result[0].id;\n        }\n        if (_this.responseQueue.has(id)) {\n            if (_this.responseQueue.get(id).callback !== undefined) {\n                _this.responseQueue.get(id).callback(false, result);\n            }\n            _this.responseQueue.delete(id);\n        }\n    });\n};\n/**\n * Listener for the `open` event of the underlying WebSocket object\n *\n * @method _onConnect\n *\n * @returns {void}\n */\nWebsocketProvider.prototype._onConnect = function () {\n    this.emit(this.CONNECT);\n    this.reconnectAttempts = 0;\n    this.reconnecting = false;\n    if (this.requestQueue.size > 0) {\n        var _this = this;\n        this.requestQueue.forEach(function (request, key) {\n            _this.send(request.payload, request.callback);\n            _this.requestQueue.delete(key);\n        });\n    }\n};\n/**\n * Listener for the `close` event of the underlying WebSocket object\n *\n * @method _onClose\n *\n * @returns {void}\n */\nWebsocketProvider.prototype._onClose = function (event) {\n    var _this = this;\n    if (this.reconnectOptions.auto && (![1000, 1001].includes(event.code) || event.wasClean === false)) {\n        this.reconnect();\n        return;\n    }\n    this.emit(this.CLOSE, event);\n    if (this.requestQueue.size > 0) {\n        this.requestQueue.forEach(function (request, key) {\n            request.callback(errors.ConnectionNotOpenError(event));\n            _this.requestQueue.delete(key);\n        });\n    }\n    if (this.responseQueue.size > 0) {\n        this.responseQueue.forEach(function (request, key) {\n            request.callback(errors.InvalidConnection('on WS', event));\n            _this.responseQueue.delete(key);\n        });\n    }\n    this._removeSocketListeners();\n    this.removeAllListeners();\n};\n/**\n * Will add the required socket listeners\n *\n * @method _addSocketListeners\n *\n * @returns {void}\n */\nWebsocketProvider.prototype._addSocketListeners = function () {\n    this.connection.addEventListener('message', this._onMessage.bind(this));\n    this.connection.addEventListener('open', this._onConnect.bind(this));\n    this.connection.addEventListener('close', this._onClose.bind(this));\n};\n/**\n * Will remove all socket listeners\n *\n * @method _removeSocketListeners\n *\n * @returns {void}\n */\nWebsocketProvider.prototype._removeSocketListeners = function () {\n    this.connection.removeEventListener('message', this._onMessage);\n    this.connection.removeEventListener('open', this._onConnect);\n    this.connection.removeEventListener('close', this._onClose);\n};\n/**\n * Will parse the response and make an array out of it.\n *\n * @method _parseResponse\n *\n * @param {String} data\n *\n * @returns {Array}\n */\nWebsocketProvider.prototype._parseResponse = function (data) {\n    var _this = this, returnValues = [];\n    // DE-CHUNKER\n    var dechunkedData = data\n        .replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\n        .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\n        .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\n        .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\n        .split('|--|');\n    dechunkedData.forEach(function (data) {\n        // prepend the last chunk\n        if (_this.lastChunk)\n            data = _this.lastChunk + data;\n        var result = null;\n        try {\n            result = JSON.parse(data);\n        }\n        catch (e) {\n            _this.lastChunk = data;\n            // start timeout to cancel all requests\n            clearTimeout(_this.lastChunkTimeout);\n            _this.lastChunkTimeout = setTimeout(function () {\n                if (_this.reconnectOptions.auto && _this.reconnectOptions.onTimeout) {\n                    _this.reconnect();\n                    return;\n                }\n                _this.emit(_this.ERROR, errors.ConnectionTimeout(_this._customTimeout));\n                if (_this.requestQueue.size > 0) {\n                    _this.requestQueue.forEach(function (request, key) {\n                        request.callback(errors.ConnectionTimeout(_this._customTimeout));\n                        _this.requestQueue.delete(key);\n                    });\n                }\n            }, _this._customTimeout);\n            return;\n        }\n        // cancel timeout and set chunk to null\n        clearTimeout(_this.lastChunkTimeout);\n        _this.lastChunk = null;\n        if (result)\n            returnValues.push(result);\n    });\n    return returnValues;\n};\n/**\n * Does check if the provider is connecting and will add it to the queue or will send it directly\n *\n * @method send\n *\n * @param {Object} payload\n * @param {Function} callback\n *\n * @returns {void}\n */\nWebsocketProvider.prototype.send = function (payload, callback) {\n    var _this = this;\n    var id = payload.id;\n    var request = { payload: payload, callback: callback };\n    if (Array.isArray(payload)) {\n        id = payload[0].id;\n    }\n    if (this.connection.readyState === this.connection.CONNECTING || this.reconnecting) {\n        this.requestQueue.set(id, request);\n        return;\n    }\n    if (this.connection.readyState !== this.connection.OPEN) {\n        this.requestQueue.delete(id);\n        this.emit(this.ERROR, errors.ConnectionNotOpenError());\n        request.callback(errors.ConnectionNotOpenError());\n        return;\n    }\n    this.responseQueue.set(id, request);\n    this.requestQueue.delete(id);\n    try {\n        this.connection.send(JSON.stringify(request.payload));\n    }\n    catch (error) {\n        request.callback(error);\n        _this.responseQueue.delete(id);\n    }\n};\n/**\n * Resets the providers, clears all callbacks\n *\n * @method reset\n *\n * @returns {void}\n */\nWebsocketProvider.prototype.reset = function () {\n    this.responseQueue.clear();\n    this.requestQueue.clear();\n    this.removeAllListeners();\n    this._removeSocketListeners();\n    this._addSocketListeners();\n};\n/**\n * Closes the current connection with the given code and reason arguments\n *\n * @method disconnect\n *\n * @param {number} code\n * @param {string} reason\n *\n * @returns {void}\n */\nWebsocketProvider.prototype.disconnect = function (code, reason) {\n    this._removeSocketListeners();\n    this.connection.close(code || 1000, reason);\n};\n/**\n * Returns the desired boolean.\n *\n * @method supportsSubscriptions\n *\n * @returns {boolean}\n */\nWebsocketProvider.prototype.supportsSubscriptions = function () {\n    return true;\n};\n/**\n * Removes the listeners and reconnects to the socket.\n *\n * @method reconnect\n *\n * @returns {void}\n */\nWebsocketProvider.prototype.reconnect = function () {\n    var _this = this;\n    this.reconnecting = true;\n    if (this.responseQueue.size > 0) {\n        this.responseQueue.forEach(function (request, key) {\n            request.callback(errors.PendingRequestsOnReconnectingError());\n            _this.responseQueue.delete(key);\n        });\n    }\n    if (!this.reconnectOptions.maxAttempts ||\n        this.reconnectAttempts < this.reconnectOptions.maxAttempts) {\n        setTimeout(function () {\n            _this.reconnectAttempts++;\n            _this._removeSocketListeners();\n            _this.emit(_this.RECONNECT, _this.reconnectAttempts);\n            _this.connect();\n        }, this.reconnectOptions.delay);\n        return;\n    }\n    this.emit(this.ERROR, errors.MaxAttemptsReachedOnReconnectingError());\n    this.reconnecting = false;\n    if (this.requestQueue.size > 0) {\n        this.requestQueue.forEach(function (request, key) {\n            request.callback(errors.MaxAttemptsReachedOnReconnectingError());\n            _this.requestQueue.delete(key);\n        });\n    }\n};\nmodule.exports = WebsocketProvider;\n"]},"metadata":{},"sourceType":"script"}