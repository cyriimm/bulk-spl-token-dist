{"ast":null,"code":"const SemVer = require('../classes/semver');\n\nconst Range = require('../classes/range');\n\nconst minSatisfying = (versions, range, options) => {\n  let min = null;\n  let minSV = null;\n  let rangeObj = null;\n\n  try {\n    rangeObj = new Range(range, options);\n  } catch (er) {\n    return null;\n  }\n\n  versions.forEach(v => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v;\n        minSV = new SemVer(min, options);\n      }\n    }\n  });\n  return min;\n};\n\nmodule.exports = minSatisfying;","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-satisfying.js"],"names":["SemVer","require","Range","minSatisfying","versions","range","options","min","minSV","rangeObj","er","forEach","v","test","compare","module","exports"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,mBAAD,CAAtB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,kBAAD,CAArB;;AACA,MAAME,aAAa,GAAG,CAACC,QAAD,EAAWC,KAAX,EAAkBC,OAAlB,KAA8B;AAClD,MAAIC,GAAG,GAAG,IAAV;AACA,MAAIC,KAAK,GAAG,IAAZ;AACA,MAAIC,QAAQ,GAAG,IAAf;;AACA,MAAI;AACFA,IAAAA,QAAQ,GAAG,IAAIP,KAAJ,CAAUG,KAAV,EAAiBC,OAAjB,CAAX;AACD,GAFD,CAEE,OAAOI,EAAP,EAAW;AACX,WAAO,IAAP;AACD;;AACDN,EAAAA,QAAQ,CAACO,OAAT,CAAkBC,CAAD,IAAO;AACtB,QAAIH,QAAQ,CAACI,IAAT,CAAcD,CAAd,CAAJ,EAAsB;AACpB;AACA,UAAI,CAACL,GAAD,IAAQC,KAAK,CAACM,OAAN,CAAcF,CAAd,MAAqB,CAAjC,EAAoC;AAClC;AACAL,QAAAA,GAAG,GAAGK,CAAN;AACAJ,QAAAA,KAAK,GAAG,IAAIR,MAAJ,CAAWO,GAAX,EAAgBD,OAAhB,CAAR;AACD;AACF;AACF,GATD;AAUA,SAAOC,GAAP;AACD,CApBD;;AAqBAQ,MAAM,CAACC,OAAP,GAAiBb,aAAjB","sourcesContent":["const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n"]},"metadata":{},"sourceType":"script"}