{"ast":null,"code":"var math = require('./math');\n\nfunction QRPolynomial(num, shift) {\n  if (num.length == undefined) {\n    throw new Error(num.length + \"/\" + shift);\n  }\n\n  var offset = 0;\n\n  while (offset < num.length && num[offset] == 0) {\n    offset++;\n  }\n\n  this.num = new Array(num.length - offset + shift);\n\n  for (var i = 0; i < num.length - offset; i++) {\n    this.num[i] = num[i + offset];\n  }\n}\n\nQRPolynomial.prototype = {\n  get: function (index) {\n    return this.num[index];\n  },\n  getLength: function () {\n    return this.num.length;\n  },\n  multiply: function (e) {\n    var num = new Array(this.getLength() + e.getLength() - 1);\n\n    for (var i = 0; i < this.getLength(); i++) {\n      for (var j = 0; j < e.getLength(); j++) {\n        num[i + j] ^= math.gexp(math.glog(this.get(i)) + math.glog(e.get(j)));\n      }\n    }\n\n    return new QRPolynomial(num, 0);\n  },\n  mod: function (e) {\n    if (this.getLength() - e.getLength() < 0) {\n      return this;\n    }\n\n    var ratio = math.glog(this.get(0)) - math.glog(e.get(0));\n    var num = new Array(this.getLength());\n\n    for (var i = 0; i < this.getLength(); i++) {\n      num[i] = this.get(i);\n    }\n\n    for (var i = 0; i < e.getLength(); i++) {\n      num[i] ^= math.gexp(math.glog(e.get(i)) + ratio);\n    } // recursive call\n\n\n    return new QRPolynomial(num, 0).mod(e);\n  }\n};\nmodule.exports = QRPolynomial;","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/node_modules/qr.js/lib/Polynomial.js"],"names":["math","require","QRPolynomial","num","shift","length","undefined","Error","offset","Array","i","prototype","get","index","getLength","multiply","e","j","gexp","glog","mod","ratio","module","exports"],"mappings":"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","sourcesContent":["var math = require('./math');\n\nfunction QRPolynomial(num, shift) {\n\n\tif (num.length == undefined) {\n\t\tthrow new Error(num.length + \"/\" + shift);\n\t}\n\n\tvar offset = 0;\n\n\twhile (offset < num.length && num[offset] == 0) {\n\t\toffset++;\n\t}\n\n\tthis.num = new Array(num.length - offset + shift);\n\tfor (var i = 0; i < num.length - offset; i++) {\n\t\tthis.num[i] = num[i + offset];\n\t}\n}\n\nQRPolynomial.prototype = {\n\n\tget : function(index) {\n\t\treturn this.num[index];\n\t},\n\t\n\tgetLength : function() {\n\t\treturn this.num.length;\n\t},\n\t\n\tmultiply : function(e) {\n\t\n\t\tvar num = new Array(this.getLength() + e.getLength() - 1);\n\t\n\t\tfor (var i = 0; i < this.getLength(); i++) {\n\t\t\tfor (var j = 0; j < e.getLength(); j++) {\n\t\t\t\tnum[i + j] ^= math.gexp(math.glog(this.get(i) ) + math.glog(e.get(j) ) );\n\t\t\t}\n\t\t}\n\t\n\t\treturn new QRPolynomial(num, 0);\n\t},\n\t\n\tmod : function(e) {\n\t\n\t\tif (this.getLength() - e.getLength() < 0) {\n\t\t\treturn this;\n\t\t}\n\t\n\t\tvar ratio = math.glog(this.get(0) ) - math.glog(e.get(0) );\n\t\n\t\tvar num = new Array(this.getLength() );\n\t\t\n\t\tfor (var i = 0; i < this.getLength(); i++) {\n\t\t\tnum[i] = this.get(i);\n\t\t}\n\t\t\n\t\tfor (var i = 0; i < e.getLength(); i++) {\n\t\t\tnum[i] ^= math.gexp(math.glog(e.get(i) ) + ratio);\n\t\t}\n\t\n\t\t// recursive call\n\t\treturn new QRPolynomial(num, 0).mod(e);\n\t}\n};\n\nmodule.exports = QRPolynomial;\n"]},"metadata":{},"sourceType":"script"}