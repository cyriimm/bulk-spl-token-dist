{"ast":null,"code":"var _jsxFileName = \"/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/src/components/ExportAccountDialog.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DialogForm from './DialogForm';\nimport { useWallet } from '../utils/wallet';\nimport { useUnlockedMnemonicAndSeed } from '../utils/wallet-seed';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExportAccountDialog({\n  open,\n  onClose\n}) {\n  _s();\n\n  const wallet = useWallet();\n  const [isHidden, setIsHidden] = useState(true);\n  const keyOutput = `[${Array.from(wallet.provider.account.secretKey)}]`;\n  return /*#__PURE__*/_jsxDEV(DialogForm, {\n    open: open,\n    onClose: onClose,\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Export account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Private key\",\n        fullWidth: true,\n        type: isHidden && 'password',\n        variant: \"outlined\",\n        margin: \"normal\",\n        value: keyOutput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Switch, {\n          checked: !isHidden,\n          onChange: () => setIsHidden(!isHidden)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this),\n        label: \"Reveal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExportAccountDialog, \"XS+N/l4/uMO1E4HTOaDB+Q9axEE=\", false, function () {\n  return [useWallet];\n});\n\n_c = ExportAccountDialog;\nexport function ExportMnemonicDialog({\n  open,\n  onClose\n}) {\n  _s2();\n\n  const [isHidden, setIsHidden] = useState(true);\n  const [mnemKey] = useUnlockedMnemonicAndSeed();\n  return /*#__PURE__*/_jsxDEV(DialogForm, {\n    open: open,\n    onClose: onClose,\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Export mnemonic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Mnemonic\",\n        fullWidth: true,\n        type: isHidden && 'password',\n        variant: \"outlined\",\n        margin: \"normal\",\n        value: mnemKey.mnemonic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Switch, {\n          checked: !isHidden,\n          onChange: () => setIsHidden(!isHidden)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this),\n        label: \"Reveal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ExportMnemonicDialog, \"PpD76VwX81VqafFqY2tJcq8YZl0=\", false, function () {\n  return [useUnlockedMnemonicAndSeed];\n});\n\n_c2 = ExportMnemonicDialog;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ExportAccountDialog\");\n$RefreshReg$(_c2, \"ExportMnemonicDialog\");","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/src/components/ExportAccountDialog.js"],"names":["React","useState","Button","DialogActions","DialogTitle","DialogContent","TextField","FormControlLabel","Switch","DialogForm","useWallet","useUnlockedMnemonicAndSeed","ExportAccountDialog","open","onClose","wallet","isHidden","setIsHidden","keyOutput","Array","from","provider","account","secretKey","ExportMnemonicDialog","mnemKey","mnemonic"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DialogForm from './DialogForm';\nimport { useWallet } from '../utils/wallet';\nimport { useUnlockedMnemonicAndSeed } from '../utils/wallet-seed';\n\nexport default function ExportAccountDialog({ open, onClose }) {\n  const wallet = useWallet();\n  const [isHidden, setIsHidden] = useState(true);\n  const keyOutput = `[${Array.from(wallet.provider.account.secretKey)}]`;\n  return (\n    <DialogForm open={open} onClose={onClose} fullWidth>\n      <DialogTitle>Export account</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"Private key\"\n          fullWidth\n          type={isHidden && 'password'}\n          variant=\"outlined\"\n          margin=\"normal\"\n          value={keyOutput}\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              checked={!isHidden}\n              onChange={() => setIsHidden(!isHidden)}\n            />\n          }\n          label=\"Reveal\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Close</Button>\n      </DialogActions>\n    </DialogForm>\n  );\n}\n\nexport function ExportMnemonicDialog({ open, onClose }) {\n  const [isHidden, setIsHidden] = useState(true);\n  const [mnemKey] = useUnlockedMnemonicAndSeed();\n  return (\n    <DialogForm open={open} onClose={onClose} fullWidth>\n      <DialogTitle>Export mnemonic</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"Mnemonic\"\n          fullWidth\n          type={isHidden && 'password'}\n          variant=\"outlined\"\n          margin=\"normal\"\n          value={mnemKey.mnemonic}\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              checked={!isHidden}\n              onChange={() => setIsHidden(!isHidden)}\n            />\n          }\n          label=\"Reveal\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Close</Button>\n      </DialogActions>\n    </DialogForm>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}