{"ast":null,"code":"/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * @file utils.js\n * @author Marek Kotewicz <marek@parity.io>\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nvar _ = require('underscore');\n\nvar ethjsUnit = require('ethjs-unit');\n\nvar utils = require('./utils.js');\n\nvar soliditySha3 = require('./soliditySha3.js');\n\nvar randombytes = require('randombytes');\n\nvar BN = require('bn.js');\n/**\n * Fires an error in an event emitter and callback and returns the eventemitter\n *\n * @method _fireError\n * @param {Object} error a string, a error, or an object with {message, data}\n * @param {Object} emitter\n * @param {Function} reject\n * @param {Function} callback\n * @param {any} optionalData\n * @return {Object} the emitter\n */\n\n\nvar _fireError = function (error, emitter, reject, callback, optionalData) {\n  /*jshint maxcomplexity: 10 */\n  // add data if given\n  if (_.isObject(error) && !(error instanceof Error) && error.data) {\n    if (_.isObject(error.data) || _.isArray(error.data)) {\n      error.data = JSON.stringify(error.data, null, 2);\n    }\n\n    error = error.message + \"\\n\" + error.data;\n  }\n\n  if (_.isString(error)) {\n    error = new Error(error);\n  }\n\n  if (_.isFunction(callback)) {\n    callback(error, optionalData);\n  }\n\n  if (_.isFunction(reject)) {\n    // suppress uncatched error if an error listener is present\n    // OR suppress uncatched error if an callback listener is present\n    if (emitter && _.isFunction(emitter.listeners) && emitter.listeners('error').length || _.isFunction(callback)) {\n      emitter.catch(function () {});\n    } // reject later, to be able to return emitter\n\n\n    setTimeout(function () {\n      reject(error);\n    }, 1);\n  }\n\n  if (emitter && _.isFunction(emitter.emit)) {\n    // emit later, to be able to return emitter\n    setTimeout(function () {\n      emitter.emit('error', error, optionalData);\n      emitter.removeAllListeners();\n    }, 1);\n  }\n\n  return emitter;\n};\n/**\n * Should be used to create full function/event name from json abi\n *\n * @method _jsonInterfaceMethodToString\n * @param {Object} json\n * @return {String} full function/event name\n */\n\n\nvar _jsonInterfaceMethodToString = function (json) {\n  if (_.isObject(json) && json.name && json.name.indexOf('(') !== -1) {\n    return json.name;\n  }\n\n  return json.name + '(' + _flattenTypes(false, json.inputs).join(',') + ')';\n};\n/**\n * Should be used to flatten json abi inputs/outputs into an array of type-representing-strings\n *\n * @method _flattenTypes\n * @param {bool} includeTuple\n * @param {Object} puts\n * @return {Array} parameters as strings\n */\n\n\nvar _flattenTypes = function (includeTuple, puts) {\n  // console.log(\"entered _flattenTypes. inputs/outputs: \" + puts)\n  var types = [];\n  puts.forEach(function (param) {\n    if (typeof param.components === 'object') {\n      if (param.type.substring(0, 5) !== 'tuple') {\n        throw new Error('components found but type is not tuple; report on GitHub');\n      }\n\n      var suffix = '';\n      var arrayBracket = param.type.indexOf('[');\n\n      if (arrayBracket >= 0) {\n        suffix = param.type.substring(arrayBracket);\n      }\n\n      var result = _flattenTypes(includeTuple, param.components); // console.log(\"result should have things: \" + result)\n\n\n      if (_.isArray(result) && includeTuple) {\n        // console.log(\"include tuple word, and its an array. joining...: \" + result.types)\n        types.push('tuple(' + result.join(',') + ')' + suffix);\n      } else if (!includeTuple) {\n        // console.log(\"don't include tuple, but its an array. joining...: \" + result)\n        types.push('(' + result.join(',') + ')' + suffix);\n      } else {\n        // console.log(\"its a single type within a tuple: \" + result.types)\n        types.push('(' + result + ')');\n      }\n    } else {\n      // console.log(\"its a type and not directly in a tuple: \" + param.type)\n      types.push(param.type);\n    }\n  });\n  return types;\n};\n/**\n * Returns a random hex string by the given bytes size\n *\n * @param {Number} size\n * @returns {string}\n */\n\n\nvar randomHex = function (size) {\n  return '0x' + randombytes(size).toString('hex');\n};\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method hexToAscii\n * @param {String} hex\n * @returns {String} ascii string representation of hex value\n */\n\n\nvar hexToAscii = function (hex) {\n  if (!utils.isHexStrict(hex)) throw new Error('The parameter must be a valid HEX string.');\n  var str = \"\";\n  var i = 0,\n      l = hex.length;\n\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n\n  return str;\n};\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method asciiToHex\n * @param {String} str\n * @returns {String} hex representation of input string\n */\n\n\nvar asciiToHex = function (str) {\n  if (!str) return \"0x00\";\n  var hex = \"\";\n\n  for (var i = 0; i < str.length; i++) {\n    var code = str.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n\n  return \"0x\" + hex;\n};\n/**\n * Returns value of unit in Wei\n *\n * @method getUnitValue\n * @param {String} unit the unit to convert to, default ether\n * @returns {BN} value of the unit (in Wei)\n * @throws error if the unit is not correct:w\n */\n\n\nvar getUnitValue = function (unit) {\n  unit = unit ? unit.toLowerCase() : 'ether';\n\n  if (!ethjsUnit.unitMap[unit]) {\n    throw new Error('This unit \"' + unit + '\" doesn\\'t exist, please use the one of the following units' + JSON.stringify(ethjsUnit.unitMap, null, 2));\n  }\n\n  return unit;\n};\n/**\n * Takes a number of wei and converts it to any other ether unit.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method fromWei\n * @param {Number|String} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert to, default ether\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\n */\n\n\nvar fromWei = function (number, unit) {\n  unit = getUnitValue(unit);\n\n  if (!utils.isBN(number) && !_.isString(number)) {\n    throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\n  }\n\n  return utils.isBN(number) ? ethjsUnit.fromWei(number, unit) : ethjsUnit.fromWei(number, unit).toString(10);\n};\n/**\n * Takes a number of a unit and converts it to wei.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method toWei\n * @param {Number|String|BN} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert from, default ether\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\n */\n\n\nvar toWei = function (number, unit) {\n  unit = getUnitValue(unit);\n\n  if (!utils.isBN(number) && !_.isString(number)) {\n    throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\n  }\n\n  return utils.isBN(number) ? ethjsUnit.toWei(number, unit) : ethjsUnit.toWei(number, unit).toString(10);\n};\n/**\n * Converts to a checksum address\n *\n * @method toChecksumAddress\n * @param {String} address the given HEX address\n * @return {String}\n */\n\n\nvar toChecksumAddress = function (address) {\n  if (typeof address === 'undefined') return '';\n  if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) throw new Error('Given address \"' + address + '\" is not a valid Ethereum address.');\n  address = address.toLowerCase().replace(/^0x/i, '');\n  var addressHash = utils.sha3(address).replace(/^0x/i, '');\n  var checksumAddress = '0x';\n\n  for (var i = 0; i < address.length; i++) {\n    // If ith character is 8 to f then make it uppercase\n    if (parseInt(addressHash[i], 16) > 7) {\n      checksumAddress += address[i].toUpperCase();\n    } else {\n      checksumAddress += address[i];\n    }\n  }\n\n  return checksumAddress;\n};\n/**\n * Returns -1 if a<b, 1 if a>b; 0 if a == b.\n * For more details on this type of function, see\n * developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\n *\n * @method compareBlockNumbers\n *\n * @param {String|Number|BN} a\n *\n * @param {String|Number|BN} b\n *\n * @returns {Number} -1, 0, or 1\n */\n\n\nvar compareBlockNumbers = function (a, b) {\n  if (a == b) {\n    return 0;\n  } else if ((\"genesis\" == a || \"earliest\" == a || 0 == a) && (\"genesis\" == b || \"earliest\" == b || 0 == b)) {\n    return 0;\n  } else if (\"genesis\" == a || \"earliest\" == a) {\n    // b !== a, thus a < b\n    return -1;\n  } else if (\"genesis\" == b || \"earliest\" == b) {\n    // b !== a, thus a > b\n    return 1;\n  } else if (a == \"latest\") {\n    if (b == \"pending\") {\n      return -1;\n    } else {\n      // b !== (\"pending\" OR \"latest\"), thus a > b\n      return 1;\n    }\n  } else if (b === \"latest\") {\n    if (a == \"pending\") {\n      return 1;\n    } else {\n      // b !== (\"pending\" OR \"latest\"), thus a > b\n      return -1;\n    }\n  } else if (a == \"pending\") {\n    // b (== OR <) \"latest\", thus a > b\n    return 1;\n  } else if (b == \"pending\") {\n    return -1;\n  } else {\n    let bnA = new BN(a);\n    let bnB = new BN(b);\n\n    if (bnA.lt(bnB)) {\n      return -1;\n    } else if (bnA.eq(bnB)) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n};\n\nmodule.exports = {\n  _fireError: _fireError,\n  _jsonInterfaceMethodToString: _jsonInterfaceMethodToString,\n  _flattenTypes: _flattenTypes,\n  // extractDisplayName: extractDisplayName,\n  // extractTypeName: extractTypeName,\n  randomHex: randomHex,\n  _: _,\n  BN: utils.BN,\n  isBN: utils.isBN,\n  isBigNumber: utils.isBigNumber,\n  isHex: utils.isHex,\n  isHexStrict: utils.isHexStrict,\n  sha3: utils.sha3,\n  sha3Raw: utils.sha3Raw,\n  keccak256: utils.sha3,\n  soliditySha3: soliditySha3.soliditySha3,\n  soliditySha3Raw: soliditySha3.soliditySha3Raw,\n  encodePacked: soliditySha3.encodePacked,\n  isAddress: utils.isAddress,\n  checkAddressChecksum: utils.checkAddressChecksum,\n  toChecksumAddress: toChecksumAddress,\n  toHex: utils.toHex,\n  toBN: utils.toBN,\n  bytesToHex: utils.bytesToHex,\n  hexToBytes: utils.hexToBytes,\n  hexToNumberString: utils.hexToNumberString,\n  hexToNumber: utils.hexToNumber,\n  toDecimal: utils.hexToNumber,\n  numberToHex: utils.numberToHex,\n  fromDecimal: utils.numberToHex,\n  hexToUtf8: utils.hexToUtf8,\n  hexToString: utils.hexToUtf8,\n  toUtf8: utils.hexToUtf8,\n  stripHexPrefix: utils.stripHexPrefix,\n  utf8ToHex: utils.utf8ToHex,\n  stringToHex: utils.utf8ToHex,\n  fromUtf8: utils.utf8ToHex,\n  hexToAscii: hexToAscii,\n  toAscii: hexToAscii,\n  asciiToHex: asciiToHex,\n  fromAscii: asciiToHex,\n  unitMap: ethjsUnit.unitMap,\n  toWei: toWei,\n  fromWei: fromWei,\n  padLeft: utils.leftPad,\n  leftPad: utils.leftPad,\n  padRight: utils.rightPad,\n  rightPad: utils.rightPad,\n  toTwosComplement: utils.toTwosComplement,\n  isBloom: utils.isBloom,\n  isUserEthereumAddressInBloom: utils.isUserEthereumAddressInBloom,\n  isContractAddressInBloom: utils.isContractAddressInBloom,\n  isTopic: utils.isTopic,\n  isTopicInBloom: utils.isTopicInBloom,\n  isInBloom: utils.isInBloom,\n  compareBlockNumbers: compareBlockNumbers\n};","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/node_modules/web3-utils/lib/index.js"],"names":["_","require","ethjsUnit","utils","soliditySha3","randombytes","BN","_fireError","error","emitter","reject","callback","optionalData","isObject","Error","data","isArray","JSON","stringify","message","isString","isFunction","listeners","length","catch","setTimeout","emit","removeAllListeners","_jsonInterfaceMethodToString","json","name","indexOf","_flattenTypes","inputs","join","includeTuple","puts","types","forEach","param","components","type","substring","suffix","arrayBracket","result","push","randomHex","size","toString","hexToAscii","hex","isHexStrict","str","i","l","code","parseInt","substr","String","fromCharCode","asciiToHex","charCodeAt","n","getUnitValue","unit","toLowerCase","unitMap","fromWei","number","isBN","toWei","toChecksumAddress","address","test","replace","addressHash","sha3","checksumAddress","toUpperCase","compareBlockNumbers","a","b","bnA","bnB","lt","eq","module","exports","isBigNumber","isHex","sha3Raw","keccak256","soliditySha3Raw","encodePacked","isAddress","checkAddressChecksum","toHex","toBN","bytesToHex","hexToBytes","hexToNumberString","hexToNumber","toDecimal","numberToHex","fromDecimal","hexToUtf8","hexToString","toUtf8","stripHexPrefix","utf8ToHex","stringToHex","fromUtf8","toAscii","fromAscii","padLeft","leftPad","padRight","rightPad","toTwosComplement","isBloom","isUserEthereumAddressInBloom","isContractAddressInBloom","isTopic","isTopicInBloom","isInBloom"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,YAAD,CAAf;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,YAAD,CAAvB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,YAAD,CAAnB;;AACA,IAAIG,YAAY,GAAGH,OAAO,CAAC,mBAAD,CAA1B;;AACA,IAAII,WAAW,GAAGJ,OAAO,CAAC,aAAD,CAAzB;;AACA,IAAIK,EAAE,GAAGL,OAAO,CAAC,OAAD,CAAhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIM,UAAU,GAAG,UAAUC,KAAV,EAAiBC,OAAjB,EAA0BC,MAA1B,EAAkCC,QAAlC,EAA4CC,YAA5C,EAA0D;AACvE;AACA;AACA,MAAIZ,CAAC,CAACa,QAAF,CAAWL,KAAX,KAAqB,EAAEA,KAAK,YAAYM,KAAnB,CAArB,IAAkDN,KAAK,CAACO,IAA5D,EAAkE;AAC9D,QAAIf,CAAC,CAACa,QAAF,CAAWL,KAAK,CAACO,IAAjB,KAA0Bf,CAAC,CAACgB,OAAF,CAAUR,KAAK,CAACO,IAAhB,CAA9B,EAAqD;AACjDP,MAAAA,KAAK,CAACO,IAAN,GAAaE,IAAI,CAACC,SAAL,CAAeV,KAAK,CAACO,IAArB,EAA2B,IAA3B,EAAiC,CAAjC,CAAb;AACH;;AACDP,IAAAA,KAAK,GAAGA,KAAK,CAACW,OAAN,GAAgB,IAAhB,GAAuBX,KAAK,CAACO,IAArC;AACH;;AACD,MAAIf,CAAC,CAACoB,QAAF,CAAWZ,KAAX,CAAJ,EAAuB;AACnBA,IAAAA,KAAK,GAAG,IAAIM,KAAJ,CAAUN,KAAV,CAAR;AACH;;AACD,MAAIR,CAAC,CAACqB,UAAF,CAAaV,QAAb,CAAJ,EAA4B;AACxBA,IAAAA,QAAQ,CAACH,KAAD,EAAQI,YAAR,CAAR;AACH;;AACD,MAAIZ,CAAC,CAACqB,UAAF,CAAaX,MAAb,CAAJ,EAA0B;AACtB;AACA;AACA,QAAID,OAAO,IACNT,CAAC,CAACqB,UAAF,CAAaZ,OAAO,CAACa,SAArB,KACGb,OAAO,CAACa,SAAR,CAAkB,OAAlB,EAA2BC,MAF/B,IAE0CvB,CAAC,CAACqB,UAAF,CAAaV,QAAb,CAF9C,EAEsE;AAClEF,MAAAA,OAAO,CAACe,KAAR,CAAc,YAAY,CAAG,CAA7B;AACH,KAPqB,CAQtB;;;AACAC,IAAAA,UAAU,CAAC,YAAY;AACnBf,MAAAA,MAAM,CAACF,KAAD,CAAN;AACH,KAFS,EAEP,CAFO,CAAV;AAGH;;AACD,MAAIC,OAAO,IAAIT,CAAC,CAACqB,UAAF,CAAaZ,OAAO,CAACiB,IAArB,CAAf,EAA2C;AACvC;AACAD,IAAAA,UAAU,CAAC,YAAY;AACnBhB,MAAAA,OAAO,CAACiB,IAAR,CAAa,OAAb,EAAsBlB,KAAtB,EAA6BI,YAA7B;AACAH,MAAAA,OAAO,CAACkB,kBAAR;AACH,KAHS,EAGP,CAHO,CAAV;AAIH;;AACD,SAAOlB,OAAP;AACH,CApCD;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAImB,4BAA4B,GAAG,UAAUC,IAAV,EAAgB;AAC/C,MAAI7B,CAAC,CAACa,QAAF,CAAWgB,IAAX,KAAoBA,IAAI,CAACC,IAAzB,IAAiCD,IAAI,CAACC,IAAL,CAAUC,OAAV,CAAkB,GAAlB,MAA2B,CAAC,CAAjE,EAAoE;AAChE,WAAOF,IAAI,CAACC,IAAZ;AACH;;AACD,SAAOD,IAAI,CAACC,IAAL,GAAY,GAAZ,GAAkBE,aAAa,CAAC,KAAD,EAAQH,IAAI,CAACI,MAAb,CAAb,CAAkCC,IAAlC,CAAuC,GAAvC,CAAlB,GAAgE,GAAvE;AACH,CALD;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIF,aAAa,GAAG,UAAUG,YAAV,EAAwBC,IAAxB,EAA8B;AAC9C;AACA,MAAIC,KAAK,GAAG,EAAZ;AACAD,EAAAA,IAAI,CAACE,OAAL,CAAa,UAAUC,KAAV,EAAiB;AAC1B,QAAI,OAAOA,KAAK,CAACC,UAAb,KAA4B,QAAhC,EAA0C;AACtC,UAAID,KAAK,CAACE,IAAN,CAAWC,SAAX,CAAqB,CAArB,EAAwB,CAAxB,MAA+B,OAAnC,EAA4C;AACxC,cAAM,IAAI5B,KAAJ,CAAU,0DAAV,CAAN;AACH;;AACD,UAAI6B,MAAM,GAAG,EAAb;AACA,UAAIC,YAAY,GAAGL,KAAK,CAACE,IAAN,CAAWV,OAAX,CAAmB,GAAnB,CAAnB;;AACA,UAAIa,YAAY,IAAI,CAApB,EAAuB;AACnBD,QAAAA,MAAM,GAAGJ,KAAK,CAACE,IAAN,CAAWC,SAAX,CAAqBE,YAArB,CAAT;AACH;;AACD,UAAIC,MAAM,GAAGb,aAAa,CAACG,YAAD,EAAeI,KAAK,CAACC,UAArB,CAA1B,CATsC,CAUtC;;;AACA,UAAIxC,CAAC,CAACgB,OAAF,CAAU6B,MAAV,KAAqBV,YAAzB,EAAuC;AACnC;AACAE,QAAAA,KAAK,CAACS,IAAN,CAAW,WAAWD,MAAM,CAACX,IAAP,CAAY,GAAZ,CAAX,GAA8B,GAA9B,GAAoCS,MAA/C;AACH,OAHD,MAIK,IAAI,CAACR,YAAL,EAAmB;AACpB;AACAE,QAAAA,KAAK,CAACS,IAAN,CAAW,MAAMD,MAAM,CAACX,IAAP,CAAY,GAAZ,CAAN,GAAyB,GAAzB,GAA+BS,MAA1C;AACH,OAHI,MAIA;AACD;AACAN,QAAAA,KAAK,CAACS,IAAN,CAAW,MAAMD,MAAN,GAAe,GAA1B;AACH;AACJ,KAvBD,MAwBK;AACD;AACAR,MAAAA,KAAK,CAACS,IAAN,CAAWP,KAAK,CAACE,IAAjB;AACH;AACJ,GA7BD;AA8BA,SAAOJ,KAAP;AACH,CAlCD;AAmCA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIU,SAAS,GAAG,UAAUC,IAAV,EAAgB;AAC5B,SAAO,OAAO3C,WAAW,CAAC2C,IAAD,CAAX,CAAkBC,QAAlB,CAA2B,KAA3B,CAAd;AACH,CAFD;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,UAAU,GAAG,UAAUC,GAAV,EAAe;AAC5B,MAAI,CAAChD,KAAK,CAACiD,WAAN,CAAkBD,GAAlB,CAAL,EACI,MAAM,IAAIrC,KAAJ,CAAU,2CAAV,CAAN;AACJ,MAAIuC,GAAG,GAAG,EAAV;AACA,MAAIC,CAAC,GAAG,CAAR;AAAA,MAAWC,CAAC,GAAGJ,GAAG,CAAC5B,MAAnB;;AACA,MAAI4B,GAAG,CAACT,SAAJ,CAAc,CAAd,EAAiB,CAAjB,MAAwB,IAA5B,EAAkC;AAC9BY,IAAAA,CAAC,GAAG,CAAJ;AACH;;AACD,SAAOA,CAAC,GAAGC,CAAX,EAAcD,CAAC,IAAI,CAAnB,EAAsB;AAClB,QAAIE,IAAI,GAAGC,QAAQ,CAACN,GAAG,CAACO,MAAJ,CAAWJ,CAAX,EAAc,CAAd,CAAD,EAAmB,EAAnB,CAAnB;AACAD,IAAAA,GAAG,IAAIM,MAAM,CAACC,YAAP,CAAoBJ,IAApB,CAAP;AACH;;AACD,SAAOH,GAAP;AACH,CAbD;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIQ,UAAU,GAAG,UAAUR,GAAV,EAAe;AAC5B,MAAI,CAACA,GAAL,EACI,OAAO,MAAP;AACJ,MAAIF,GAAG,GAAG,EAAV;;AACA,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,CAAC9B,MAAxB,EAAgC+B,CAAC,EAAjC,EAAqC;AACjC,QAAIE,IAAI,GAAGH,GAAG,CAACS,UAAJ,CAAeR,CAAf,CAAX;AACA,QAAIS,CAAC,GAAGP,IAAI,CAACP,QAAL,CAAc,EAAd,CAAR;AACAE,IAAAA,GAAG,IAAIY,CAAC,CAACxC,MAAF,GAAW,CAAX,GAAe,MAAMwC,CAArB,GAAyBA,CAAhC;AACH;;AACD,SAAO,OAAOZ,GAAd;AACH,CAVD;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIa,YAAY,GAAG,UAAUC,IAAV,EAAgB;AAC/BA,EAAAA,IAAI,GAAGA,IAAI,GAAGA,IAAI,CAACC,WAAL,EAAH,GAAwB,OAAnC;;AACA,MAAI,CAAChE,SAAS,CAACiE,OAAV,CAAkBF,IAAlB,CAAL,EAA8B;AAC1B,UAAM,IAAInD,KAAJ,CAAU,gBAAgBmD,IAAhB,GAAuB,6DAAvB,GAAuFhD,IAAI,CAACC,SAAL,CAAehB,SAAS,CAACiE,OAAzB,EAAkC,IAAlC,EAAwC,CAAxC,CAAjG,CAAN;AACH;;AACD,SAAOF,IAAP;AACH,CAND;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIG,OAAO,GAAG,UAAUC,MAAV,EAAkBJ,IAAlB,EAAwB;AAClCA,EAAAA,IAAI,GAAGD,YAAY,CAACC,IAAD,CAAnB;;AACA,MAAI,CAAC9D,KAAK,CAACmE,IAAN,CAAWD,MAAX,CAAD,IAAuB,CAACrE,CAAC,CAACoB,QAAF,CAAWiD,MAAX,CAA5B,EAAgD;AAC5C,UAAM,IAAIvD,KAAJ,CAAU,yEAAV,CAAN;AACH;;AACD,SAAOX,KAAK,CAACmE,IAAN,CAAWD,MAAX,IAAqBnE,SAAS,CAACkE,OAAV,CAAkBC,MAAlB,EAA0BJ,IAA1B,CAArB,GAAuD/D,SAAS,CAACkE,OAAV,CAAkBC,MAAlB,EAA0BJ,IAA1B,EAAgChB,QAAhC,CAAyC,EAAzC,CAA9D;AACH,CAND;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIsB,KAAK,GAAG,UAAUF,MAAV,EAAkBJ,IAAlB,EAAwB;AAChCA,EAAAA,IAAI,GAAGD,YAAY,CAACC,IAAD,CAAnB;;AACA,MAAI,CAAC9D,KAAK,CAACmE,IAAN,CAAWD,MAAX,CAAD,IAAuB,CAACrE,CAAC,CAACoB,QAAF,CAAWiD,MAAX,CAA5B,EAAgD;AAC5C,UAAM,IAAIvD,KAAJ,CAAU,yEAAV,CAAN;AACH;;AACD,SAAOX,KAAK,CAACmE,IAAN,CAAWD,MAAX,IAAqBnE,SAAS,CAACqE,KAAV,CAAgBF,MAAhB,EAAwBJ,IAAxB,CAArB,GAAqD/D,SAAS,CAACqE,KAAV,CAAgBF,MAAhB,EAAwBJ,IAAxB,EAA8BhB,QAA9B,CAAuC,EAAvC,CAA5D;AACH,CAND;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIuB,iBAAiB,GAAG,UAAUC,OAAV,EAAmB;AACvC,MAAI,OAAOA,OAAP,KAAmB,WAAvB,EACI,OAAO,EAAP;AACJ,MAAI,CAAC,uBAAuBC,IAAvB,CAA4BD,OAA5B,CAAL,EACI,MAAM,IAAI3D,KAAJ,CAAU,oBAAoB2D,OAApB,GAA8B,oCAAxC,CAAN;AACJA,EAAAA,OAAO,GAAGA,OAAO,CAACP,WAAR,GAAsBS,OAAtB,CAA8B,MAA9B,EAAsC,EAAtC,CAAV;AACA,MAAIC,WAAW,GAAGzE,KAAK,CAAC0E,IAAN,CAAWJ,OAAX,EAAoBE,OAApB,CAA4B,MAA5B,EAAoC,EAApC,CAAlB;AACA,MAAIG,eAAe,GAAG,IAAtB;;AACA,OAAK,IAAIxB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmB,OAAO,CAAClD,MAA5B,EAAoC+B,CAAC,EAArC,EAAyC;AACrC;AACA,QAAIG,QAAQ,CAACmB,WAAW,CAACtB,CAAD,CAAZ,EAAiB,EAAjB,CAAR,GAA+B,CAAnC,EAAsC;AAClCwB,MAAAA,eAAe,IAAIL,OAAO,CAACnB,CAAD,CAAP,CAAWyB,WAAX,EAAnB;AACH,KAFD,MAGK;AACDD,MAAAA,eAAe,IAAIL,OAAO,CAACnB,CAAD,CAA1B;AACH;AACJ;;AACD,SAAOwB,eAAP;AACH,CAlBD;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,mBAAmB,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACtC,MAAID,CAAC,IAAIC,CAAT,EAAY;AACR,WAAO,CAAP;AACH,GAFD,MAGK,IAAI,CAAC,aAAaD,CAAb,IAAkB,cAAcA,CAAhC,IAAqC,KAAKA,CAA3C,MAAkD,aAAaC,CAAb,IAAkB,cAAcA,CAAhC,IAAqC,KAAKA,CAA5F,CAAJ,EAAoG;AACrG,WAAO,CAAP;AACH,GAFI,MAGA,IAAI,aAAaD,CAAb,IAAkB,cAAcA,CAApC,EAAuC;AACxC;AACA,WAAO,CAAC,CAAR;AACH,GAHI,MAIA,IAAI,aAAaC,CAAb,IAAkB,cAAcA,CAApC,EAAuC;AACxC;AACA,WAAO,CAAP;AACH,GAHI,MAIA,IAAID,CAAC,IAAI,QAAT,EAAmB;AACpB,QAAIC,CAAC,IAAI,SAAT,EAAoB;AAChB,aAAO,CAAC,CAAR;AACH,KAFD,MAGK;AACD;AACA,aAAO,CAAP;AACH;AACJ,GARI,MASA,IAAIA,CAAC,KAAK,QAAV,EAAoB;AACrB,QAAID,CAAC,IAAI,SAAT,EAAoB;AAChB,aAAO,CAAP;AACH,KAFD,MAGK;AACD;AACA,aAAO,CAAC,CAAR;AACH;AACJ,GARI,MASA,IAAIA,CAAC,IAAI,SAAT,EAAoB;AACrB;AACA,WAAO,CAAP;AACH,GAHI,MAIA,IAAIC,CAAC,IAAI,SAAT,EAAoB;AACrB,WAAO,CAAC,CAAR;AACH,GAFI,MAGA;AACD,QAAIC,GAAG,GAAG,IAAI7E,EAAJ,CAAO2E,CAAP,CAAV;AACA,QAAIG,GAAG,GAAG,IAAI9E,EAAJ,CAAO4E,CAAP,CAAV;;AACA,QAAIC,GAAG,CAACE,EAAJ,CAAOD,GAAP,CAAJ,EAAiB;AACb,aAAO,CAAC,CAAR;AACH,KAFD,MAGK,IAAID,GAAG,CAACG,EAAJ,CAAOF,GAAP,CAAJ,EAAiB;AAClB,aAAO,CAAP;AACH,KAFI,MAGA;AACD,aAAO,CAAP;AACH;AACJ;AACJ,CArDD;;AAsDAG,MAAM,CAACC,OAAP,GAAiB;AACbjF,EAAAA,UAAU,EAAEA,UADC;AAEbqB,EAAAA,4BAA4B,EAAEA,4BAFjB;AAGbI,EAAAA,aAAa,EAAEA,aAHF;AAIb;AACA;AACAe,EAAAA,SAAS,EAAEA,SANE;AAOb/C,EAAAA,CAAC,EAAEA,CAPU;AAQbM,EAAAA,EAAE,EAAEH,KAAK,CAACG,EARG;AASbgE,EAAAA,IAAI,EAAEnE,KAAK,CAACmE,IATC;AAUbmB,EAAAA,WAAW,EAAEtF,KAAK,CAACsF,WAVN;AAWbC,EAAAA,KAAK,EAAEvF,KAAK,CAACuF,KAXA;AAYbtC,EAAAA,WAAW,EAAEjD,KAAK,CAACiD,WAZN;AAabyB,EAAAA,IAAI,EAAE1E,KAAK,CAAC0E,IAbC;AAcbc,EAAAA,OAAO,EAAExF,KAAK,CAACwF,OAdF;AAebC,EAAAA,SAAS,EAAEzF,KAAK,CAAC0E,IAfJ;AAgBbzE,EAAAA,YAAY,EAAEA,YAAY,CAACA,YAhBd;AAiBbyF,EAAAA,eAAe,EAAEzF,YAAY,CAACyF,eAjBjB;AAkBbC,EAAAA,YAAY,EAAE1F,YAAY,CAAC0F,YAlBd;AAmBbC,EAAAA,SAAS,EAAE5F,KAAK,CAAC4F,SAnBJ;AAoBbC,EAAAA,oBAAoB,EAAE7F,KAAK,CAAC6F,oBApBf;AAqBbxB,EAAAA,iBAAiB,EAAEA,iBArBN;AAsBbyB,EAAAA,KAAK,EAAE9F,KAAK,CAAC8F,KAtBA;AAuBbC,EAAAA,IAAI,EAAE/F,KAAK,CAAC+F,IAvBC;AAwBbC,EAAAA,UAAU,EAAEhG,KAAK,CAACgG,UAxBL;AAyBbC,EAAAA,UAAU,EAAEjG,KAAK,CAACiG,UAzBL;AA0BbC,EAAAA,iBAAiB,EAAElG,KAAK,CAACkG,iBA1BZ;AA2BbC,EAAAA,WAAW,EAAEnG,KAAK,CAACmG,WA3BN;AA4BbC,EAAAA,SAAS,EAAEpG,KAAK,CAACmG,WA5BJ;AA6BbE,EAAAA,WAAW,EAAErG,KAAK,CAACqG,WA7BN;AA8BbC,EAAAA,WAAW,EAAEtG,KAAK,CAACqG,WA9BN;AA+BbE,EAAAA,SAAS,EAAEvG,KAAK,CAACuG,SA/BJ;AAgCbC,EAAAA,WAAW,EAAExG,KAAK,CAACuG,SAhCN;AAiCbE,EAAAA,MAAM,EAAEzG,KAAK,CAACuG,SAjCD;AAkCbG,EAAAA,cAAc,EAAE1G,KAAK,CAAC0G,cAlCT;AAmCbC,EAAAA,SAAS,EAAE3G,KAAK,CAAC2G,SAnCJ;AAoCbC,EAAAA,WAAW,EAAE5G,KAAK,CAAC2G,SApCN;AAqCbE,EAAAA,QAAQ,EAAE7G,KAAK,CAAC2G,SArCH;AAsCb5D,EAAAA,UAAU,EAAEA,UAtCC;AAuCb+D,EAAAA,OAAO,EAAE/D,UAvCI;AAwCbW,EAAAA,UAAU,EAAEA,UAxCC;AAyCbqD,EAAAA,SAAS,EAAErD,UAzCE;AA0CbM,EAAAA,OAAO,EAAEjE,SAAS,CAACiE,OA1CN;AA2CbI,EAAAA,KAAK,EAAEA,KA3CM;AA4CbH,EAAAA,OAAO,EAAEA,OA5CI;AA6Cb+C,EAAAA,OAAO,EAAEhH,KAAK,CAACiH,OA7CF;AA8CbA,EAAAA,OAAO,EAAEjH,KAAK,CAACiH,OA9CF;AA+CbC,EAAAA,QAAQ,EAAElH,KAAK,CAACmH,QA/CH;AAgDbA,EAAAA,QAAQ,EAAEnH,KAAK,CAACmH,QAhDH;AAiDbC,EAAAA,gBAAgB,EAAEpH,KAAK,CAACoH,gBAjDX;AAkDbC,EAAAA,OAAO,EAAErH,KAAK,CAACqH,OAlDF;AAmDbC,EAAAA,4BAA4B,EAAEtH,KAAK,CAACsH,4BAnDvB;AAoDbC,EAAAA,wBAAwB,EAAEvH,KAAK,CAACuH,wBApDnB;AAqDbC,EAAAA,OAAO,EAAExH,KAAK,CAACwH,OArDF;AAsDbC,EAAAA,cAAc,EAAEzH,KAAK,CAACyH,cAtDT;AAuDbC,EAAAA,SAAS,EAAE1H,KAAK,CAAC0H,SAvDJ;AAwDb7C,EAAAA,mBAAmB,EAAEA;AAxDR,CAAjB","sourcesContent":["/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file utils.js\n * @author Marek Kotewicz <marek@parity.io>\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nvar _ = require('underscore');\nvar ethjsUnit = require('ethjs-unit');\nvar utils = require('./utils.js');\nvar soliditySha3 = require('./soliditySha3.js');\nvar randombytes = require('randombytes');\nvar BN = require('bn.js');\n/**\n * Fires an error in an event emitter and callback and returns the eventemitter\n *\n * @method _fireError\n * @param {Object} error a string, a error, or an object with {message, data}\n * @param {Object} emitter\n * @param {Function} reject\n * @param {Function} callback\n * @param {any} optionalData\n * @return {Object} the emitter\n */\nvar _fireError = function (error, emitter, reject, callback, optionalData) {\n    /*jshint maxcomplexity: 10 */\n    // add data if given\n    if (_.isObject(error) && !(error instanceof Error) && error.data) {\n        if (_.isObject(error.data) || _.isArray(error.data)) {\n            error.data = JSON.stringify(error.data, null, 2);\n        }\n        error = error.message + \"\\n\" + error.data;\n    }\n    if (_.isString(error)) {\n        error = new Error(error);\n    }\n    if (_.isFunction(callback)) {\n        callback(error, optionalData);\n    }\n    if (_.isFunction(reject)) {\n        // suppress uncatched error if an error listener is present\n        // OR suppress uncatched error if an callback listener is present\n        if (emitter &&\n            (_.isFunction(emitter.listeners) &&\n                emitter.listeners('error').length) || _.isFunction(callback)) {\n            emitter.catch(function () { });\n        }\n        // reject later, to be able to return emitter\n        setTimeout(function () {\n            reject(error);\n        }, 1);\n    }\n    if (emitter && _.isFunction(emitter.emit)) {\n        // emit later, to be able to return emitter\n        setTimeout(function () {\n            emitter.emit('error', error, optionalData);\n            emitter.removeAllListeners();\n        }, 1);\n    }\n    return emitter;\n};\n/**\n * Should be used to create full function/event name from json abi\n *\n * @method _jsonInterfaceMethodToString\n * @param {Object} json\n * @return {String} full function/event name\n */\nvar _jsonInterfaceMethodToString = function (json) {\n    if (_.isObject(json) && json.name && json.name.indexOf('(') !== -1) {\n        return json.name;\n    }\n    return json.name + '(' + _flattenTypes(false, json.inputs).join(',') + ')';\n};\n/**\n * Should be used to flatten json abi inputs/outputs into an array of type-representing-strings\n *\n * @method _flattenTypes\n * @param {bool} includeTuple\n * @param {Object} puts\n * @return {Array} parameters as strings\n */\nvar _flattenTypes = function (includeTuple, puts) {\n    // console.log(\"entered _flattenTypes. inputs/outputs: \" + puts)\n    var types = [];\n    puts.forEach(function (param) {\n        if (typeof param.components === 'object') {\n            if (param.type.substring(0, 5) !== 'tuple') {\n                throw new Error('components found but type is not tuple; report on GitHub');\n            }\n            var suffix = '';\n            var arrayBracket = param.type.indexOf('[');\n            if (arrayBracket >= 0) {\n                suffix = param.type.substring(arrayBracket);\n            }\n            var result = _flattenTypes(includeTuple, param.components);\n            // console.log(\"result should have things: \" + result)\n            if (_.isArray(result) && includeTuple) {\n                // console.log(\"include tuple word, and its an array. joining...: \" + result.types)\n                types.push('tuple(' + result.join(',') + ')' + suffix);\n            }\n            else if (!includeTuple) {\n                // console.log(\"don't include tuple, but its an array. joining...: \" + result)\n                types.push('(' + result.join(',') + ')' + suffix);\n            }\n            else {\n                // console.log(\"its a single type within a tuple: \" + result.types)\n                types.push('(' + result + ')');\n            }\n        }\n        else {\n            // console.log(\"its a type and not directly in a tuple: \" + param.type)\n            types.push(param.type);\n        }\n    });\n    return types;\n};\n/**\n * Returns a random hex string by the given bytes size\n *\n * @param {Number} size\n * @returns {string}\n */\nvar randomHex = function (size) {\n    return '0x' + randombytes(size).toString('hex');\n};\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method hexToAscii\n * @param {String} hex\n * @returns {String} ascii string representation of hex value\n */\nvar hexToAscii = function (hex) {\n    if (!utils.isHexStrict(hex))\n        throw new Error('The parameter must be a valid HEX string.');\n    var str = \"\";\n    var i = 0, l = hex.length;\n    if (hex.substring(0, 2) === '0x') {\n        i = 2;\n    }\n    for (; i < l; i += 2) {\n        var code = parseInt(hex.substr(i, 2), 16);\n        str += String.fromCharCode(code);\n    }\n    return str;\n};\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method asciiToHex\n * @param {String} str\n * @returns {String} hex representation of input string\n */\nvar asciiToHex = function (str) {\n    if (!str)\n        return \"0x00\";\n    var hex = \"\";\n    for (var i = 0; i < str.length; i++) {\n        var code = str.charCodeAt(i);\n        var n = code.toString(16);\n        hex += n.length < 2 ? '0' + n : n;\n    }\n    return \"0x\" + hex;\n};\n/**\n * Returns value of unit in Wei\n *\n * @method getUnitValue\n * @param {String} unit the unit to convert to, default ether\n * @returns {BN} value of the unit (in Wei)\n * @throws error if the unit is not correct:w\n */\nvar getUnitValue = function (unit) {\n    unit = unit ? unit.toLowerCase() : 'ether';\n    if (!ethjsUnit.unitMap[unit]) {\n        throw new Error('This unit \"' + unit + '\" doesn\\'t exist, please use the one of the following units' + JSON.stringify(ethjsUnit.unitMap, null, 2));\n    }\n    return unit;\n};\n/**\n * Takes a number of wei and converts it to any other ether unit.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method fromWei\n * @param {Number|String} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert to, default ether\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\n */\nvar fromWei = function (number, unit) {\n    unit = getUnitValue(unit);\n    if (!utils.isBN(number) && !_.isString(number)) {\n        throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\n    }\n    return utils.isBN(number) ? ethjsUnit.fromWei(number, unit) : ethjsUnit.fromWei(number, unit).toString(10);\n};\n/**\n * Takes a number of a unit and converts it to wei.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method toWei\n * @param {Number|String|BN} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert from, default ether\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\n */\nvar toWei = function (number, unit) {\n    unit = getUnitValue(unit);\n    if (!utils.isBN(number) && !_.isString(number)) {\n        throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\n    }\n    return utils.isBN(number) ? ethjsUnit.toWei(number, unit) : ethjsUnit.toWei(number, unit).toString(10);\n};\n/**\n * Converts to a checksum address\n *\n * @method toChecksumAddress\n * @param {String} address the given HEX address\n * @return {String}\n */\nvar toChecksumAddress = function (address) {\n    if (typeof address === 'undefined')\n        return '';\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address))\n        throw new Error('Given address \"' + address + '\" is not a valid Ethereum address.');\n    address = address.toLowerCase().replace(/^0x/i, '');\n    var addressHash = utils.sha3(address).replace(/^0x/i, '');\n    var checksumAddress = '0x';\n    for (var i = 0; i < address.length; i++) {\n        // If ith character is 8 to f then make it uppercase\n        if (parseInt(addressHash[i], 16) > 7) {\n            checksumAddress += address[i].toUpperCase();\n        }\n        else {\n            checksumAddress += address[i];\n        }\n    }\n    return checksumAddress;\n};\n/**\n * Returns -1 if a<b, 1 if a>b; 0 if a == b.\n * For more details on this type of function, see\n * developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\n *\n * @method compareBlockNumbers\n *\n * @param {String|Number|BN} a\n *\n * @param {String|Number|BN} b\n *\n * @returns {Number} -1, 0, or 1\n */\nvar compareBlockNumbers = function (a, b) {\n    if (a == b) {\n        return 0;\n    }\n    else if ((\"genesis\" == a || \"earliest\" == a || 0 == a) && (\"genesis\" == b || \"earliest\" == b || 0 == b)) {\n        return 0;\n    }\n    else if (\"genesis\" == a || \"earliest\" == a) {\n        // b !== a, thus a < b\n        return -1;\n    }\n    else if (\"genesis\" == b || \"earliest\" == b) {\n        // b !== a, thus a > b\n        return 1;\n    }\n    else if (a == \"latest\") {\n        if (b == \"pending\") {\n            return -1;\n        }\n        else {\n            // b !== (\"pending\" OR \"latest\"), thus a > b\n            return 1;\n        }\n    }\n    else if (b === \"latest\") {\n        if (a == \"pending\") {\n            return 1;\n        }\n        else {\n            // b !== (\"pending\" OR \"latest\"), thus a > b\n            return -1;\n        }\n    }\n    else if (a == \"pending\") {\n        // b (== OR <) \"latest\", thus a > b\n        return 1;\n    }\n    else if (b == \"pending\") {\n        return -1;\n    }\n    else {\n        let bnA = new BN(a);\n        let bnB = new BN(b);\n        if (bnA.lt(bnB)) {\n            return -1;\n        }\n        else if (bnA.eq(bnB)) {\n            return 0;\n        }\n        else {\n            return 1;\n        }\n    }\n};\nmodule.exports = {\n    _fireError: _fireError,\n    _jsonInterfaceMethodToString: _jsonInterfaceMethodToString,\n    _flattenTypes: _flattenTypes,\n    // extractDisplayName: extractDisplayName,\n    // extractTypeName: extractTypeName,\n    randomHex: randomHex,\n    _: _,\n    BN: utils.BN,\n    isBN: utils.isBN,\n    isBigNumber: utils.isBigNumber,\n    isHex: utils.isHex,\n    isHexStrict: utils.isHexStrict,\n    sha3: utils.sha3,\n    sha3Raw: utils.sha3Raw,\n    keccak256: utils.sha3,\n    soliditySha3: soliditySha3.soliditySha3,\n    soliditySha3Raw: soliditySha3.soliditySha3Raw,\n    encodePacked: soliditySha3.encodePacked,\n    isAddress: utils.isAddress,\n    checkAddressChecksum: utils.checkAddressChecksum,\n    toChecksumAddress: toChecksumAddress,\n    toHex: utils.toHex,\n    toBN: utils.toBN,\n    bytesToHex: utils.bytesToHex,\n    hexToBytes: utils.hexToBytes,\n    hexToNumberString: utils.hexToNumberString,\n    hexToNumber: utils.hexToNumber,\n    toDecimal: utils.hexToNumber,\n    numberToHex: utils.numberToHex,\n    fromDecimal: utils.numberToHex,\n    hexToUtf8: utils.hexToUtf8,\n    hexToString: utils.hexToUtf8,\n    toUtf8: utils.hexToUtf8,\n    stripHexPrefix: utils.stripHexPrefix,\n    utf8ToHex: utils.utf8ToHex,\n    stringToHex: utils.utf8ToHex,\n    fromUtf8: utils.utf8ToHex,\n    hexToAscii: hexToAscii,\n    toAscii: hexToAscii,\n    asciiToHex: asciiToHex,\n    fromAscii: asciiToHex,\n    unitMap: ethjsUnit.unitMap,\n    toWei: toWei,\n    fromWei: fromWei,\n    padLeft: utils.leftPad,\n    leftPad: utils.leftPad,\n    padRight: utils.rightPad,\n    rightPad: utils.rightPad,\n    toTwosComplement: utils.toTwosComplement,\n    isBloom: utils.isBloom,\n    isUserEthereumAddressInBloom: utils.isUserEthereumAddressInBloom,\n    isContractAddressInBloom: utils.isContractAddressInBloom,\n    isTopic: utils.isTopic,\n    isTopicInBloom: utils.isTopicInBloom,\n    isInBloom: utils.isInBloom,\n    compareBlockNumbers: compareBlockNumbers\n};\n"]},"metadata":{},"sourceType":"script"}