{"ast":null,"code":"var _jsxFileName = \"/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/src/components/instructions/DexInstruction.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport LabelValue from './LabelValue';\nimport { useWallet, useWalletPublicKeys } from '../../utils/wallet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TYPE_LABELS = {\n  cancelOrder: 'Cancel order',\n  newOrder: 'Place order',\n  settleFunds: 'Settle funds',\n  matchOrders: 'Match orders'\n};\nconst DATA_LABELS = {\n  side: {\n    label: 'Side',\n    address: false\n  },\n  orderId: {\n    label: 'Order Id',\n    address: false\n  },\n  limit: {\n    label: 'Limit',\n    address: false\n  },\n  basePubkey: {\n    label: 'Base wallet',\n    address: true\n  },\n  quotePubkey: {\n    label: 'Quote wallet',\n    address: true\n  }\n};\nexport default function DexInstruction({\n  instruction,\n  onOpenAddress\n}) {\n  _s();\n\n  var _market$_decoded, _market$_decoded$ownA;\n\n  const wallet = useWallet();\n  const [publicKeys] = useWalletPublicKeys();\n  const {\n    type,\n    data,\n    market,\n    marketInfo\n  } = instruction;\n  const marketLabel = marketInfo && (marketInfo === null || marketInfo === void 0 ? void 0 : marketInfo.name) + ((marketInfo === null || marketInfo === void 0 ? void 0 : marketInfo.deprecated) ? ' (deprecated)' : '') || (market === null || market === void 0 ? void 0 : (_market$_decoded = market._decoded) === null || _market$_decoded === void 0 ? void 0 : (_market$_decoded$ownA = _market$_decoded.ownAddress) === null || _market$_decoded$ownA === void 0 ? void 0 : _market$_decoded$ownA.toBase58()) || 'Unknown';\n\n  const getAddressValue = address => {\n    const isOwned = publicKeys.some(ownedKey => ownedKey.equals(address));\n    const isOwner = wallet.publicKey.equals(address);\n    return isOwner ? 'This wallet' : (isOwned ? '(Owned) ' : '') + (address === null || address === void 0 ? void 0 : address.toBase58());\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      style: {\n        fontWeight: 'bold'\n      },\n      gutterBottom: true,\n      children: TYPE_LABELS[type]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LabelValue, {\n      label: \"Market\",\n      value: marketLabel,\n      link: true,\n      onClick: () => {\n        var _ref, _market$_decoded2;\n\n        return onOpenAddress((_ref = (marketInfo === null || marketInfo === void 0 ? void 0 : marketInfo.address) || (market === null || market === void 0 ? void 0 : (_market$_decoded2 = market._decoded) === null || _market$_decoded2 === void 0 ? void 0 : _market$_decoded2.ownAddress)) === null || _ref === void 0 ? void 0 : _ref.toBase58());\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), data && Object.entries(data).map(([key, value]) => {\n      const dataLabel = DATA_LABELS[key];\n\n      if (!dataLabel) {\n        return null;\n      }\n\n      const {\n        label,\n        address\n      } = dataLabel;\n      return /*#__PURE__*/_jsxDEV(LabelValue, {\n        label: label + '',\n        value: address ? getAddressValue(value) : value + '',\n        link: address,\n        onClick: () => address && onOpenAddress(value === null || value === void 0 ? void 0 : value.toBase58())\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true);\n}\n\n_s(DexInstruction, \"OIHAH4Qu9cUzwaodVytaKR+bKl0=\", false, function () {\n  return [useWallet, useWalletPublicKeys];\n});\n\n_c = DexInstruction;\n\nvar _c;\n\n$RefreshReg$(_c, \"DexInstruction\");","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/src/components/instructions/DexInstruction.js"],"names":["React","Typography","LabelValue","useWallet","useWalletPublicKeys","TYPE_LABELS","cancelOrder","newOrder","settleFunds","matchOrders","DATA_LABELS","side","label","address","orderId","limit","basePubkey","quotePubkey","DexInstruction","instruction","onOpenAddress","wallet","publicKeys","type","data","market","marketInfo","marketLabel","name","deprecated","_decoded","ownAddress","toBase58","getAddressValue","isOwned","some","ownedKey","equals","isOwner","publicKey","fontWeight","Object","entries","map","key","value","dataLabel"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport LabelValue from './LabelValue';\nimport { useWallet, useWalletPublicKeys } from '../../utils/wallet';\n\nconst TYPE_LABELS = {\n  cancelOrder: 'Cancel order',\n  newOrder: 'Place order',\n  settleFunds: 'Settle funds',\n  matchOrders: 'Match orders',\n};\n\nconst DATA_LABELS = {\n  side: { label: 'Side', address: false },\n  orderId: { label: 'Order Id', address: false },\n  limit: { label: 'Limit', address: false },\n  basePubkey: { label: 'Base wallet', address: true },\n  quotePubkey: { label: 'Quote wallet', address: true },\n};\n\nexport default function DexInstruction({ instruction, onOpenAddress }) {\n  const wallet = useWallet();\n  const [publicKeys] = useWalletPublicKeys();\n  const { type, data, market, marketInfo } = instruction;\n\n  const marketLabel =\n    (marketInfo &&\n      marketInfo?.name + (marketInfo?.deprecated ? ' (deprecated)' : '')) ||\n    market?._decoded?.ownAddress?.toBase58() ||\n    'Unknown';\n\n  const getAddressValue = (address) => {\n    const isOwned = publicKeys.some((ownedKey) => ownedKey.equals(address));\n    const isOwner = wallet.publicKey.equals(address);\n    return isOwner\n      ? 'This wallet'\n      : (isOwned ? '(Owned) ' : '') + address?.toBase58();\n  };\n\n  return (\n    <>\n      <Typography\n        variant=\"subtitle1\"\n        style={{ fontWeight: 'bold' }}\n        gutterBottom\n      >\n        {TYPE_LABELS[type]}\n      </Typography>\n      <LabelValue\n        label=\"Market\"\n        value={marketLabel}\n        link={true}\n        onClick={() =>\n          onOpenAddress(\n            (marketInfo?.address || market?._decoded?.ownAddress)?.toBase58(),\n          )\n        }\n      />\n      {data &&\n        Object.entries(data).map(([key, value]) => {\n          const dataLabel = DATA_LABELS[key];\n          if (!dataLabel) {\n            return null;\n          }\n          const { label, address } = dataLabel;\n          return (\n            <LabelValue\n              key={key}\n              label={label + ''}\n              value={address ? getAddressValue(value) : value + ''}\n              link={address}\n              onClick={() => address && onOpenAddress(value?.toBase58())}\n            />\n          );\n        })}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}