{"ast":null,"code":"const ANY = Symbol('SemVer ANY'); // hoisted class for cyclic dependency\n\nclass Comparator {\n  static get ANY() {\n    return ANY;\n  }\n\n  constructor(comp, options) {\n    options = parseOptions(options);\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp;\n      } else {\n        comp = comp.value;\n      }\n    }\n\n    debug('comparator', comp, options);\n    this.options = options;\n    this.loose = !!options.loose;\n    this.parse(comp);\n\n    if (this.semver === ANY) {\n      this.value = '';\n    } else {\n      this.value = this.operator + this.semver.version;\n    }\n\n    debug('comp', this);\n  }\n\n  parse(comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR];\n    const m = comp.match(r);\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`);\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : '';\n\n    if (this.operator === '=') {\n      this.operator = '';\n    } // if it literally is just '>' or '' then allow anything.\n\n\n    if (!m[2]) {\n      this.semver = ANY;\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose);\n    }\n  }\n\n  toString() {\n    return this.value;\n  }\n\n  test(version) {\n    debug('Comparator.test', version, this.options.loose);\n\n    if (this.semver === ANY || version === ANY) {\n      return true;\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options);\n      } catch (er) {\n        return false;\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options);\n  }\n\n  intersects(comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required');\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      };\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true;\n      }\n\n      return new Range(comp.value, options).test(this.value);\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true;\n      }\n\n      return new Range(this.value, options).test(comp.semver);\n    }\n\n    const sameDirectionIncreasing = (this.operator === '>=' || this.operator === '>') && (comp.operator === '>=' || comp.operator === '>');\n    const sameDirectionDecreasing = (this.operator === '<=' || this.operator === '<') && (comp.operator === '<=' || comp.operator === '<');\n    const sameSemVer = this.semver.version === comp.semver.version;\n    const differentDirectionsInclusive = (this.operator === '>=' || this.operator === '<=') && (comp.operator === '>=' || comp.operator === '<=');\n    const oppositeDirectionsLessThan = cmp(this.semver, '<', comp.semver, options) && (this.operator === '>=' || this.operator === '>') && (comp.operator === '<=' || comp.operator === '<');\n    const oppositeDirectionsGreaterThan = cmp(this.semver, '>', comp.semver, options) && (this.operator === '<=' || this.operator === '<') && (comp.operator === '>=' || comp.operator === '>');\n    return sameDirectionIncreasing || sameDirectionDecreasing || sameSemVer && differentDirectionsInclusive || oppositeDirectionsLessThan || oppositeDirectionsGreaterThan;\n  }\n\n}\n\nmodule.exports = Comparator;\n\nconst parseOptions = require('../internal/parse-options');\n\nconst {\n  re,\n  t\n} = require('../internal/re');\n\nconst cmp = require('../functions/cmp');\n\nconst debug = require('../internal/debug');\n\nconst SemVer = require('./semver');\n\nconst Range = require('./range');","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/node_modules/@ledgerhq/devices/node_modules/semver/classes/comparator.js"],"names":["ANY","Symbol","Comparator","constructor","comp","options","parseOptions","loose","value","debug","parse","semver","operator","version","r","re","t","COMPARATORLOOSE","COMPARATOR","m","match","TypeError","undefined","SemVer","toString","test","er","cmp","intersects","includePrerelease","Range","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","module","exports","require"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,MAAM,CAAC,YAAD,CAAlB,C,CACA;;AACA,MAAMC,UAAN,CAAiB;AACD,aAAHF,GAAG,GAAI;AAChB,WAAOA,GAAP;AACD;;AACDG,EAAAA,WAAW,CAAEC,IAAF,EAAQC,OAAR,EAAiB;AAC1BA,IAAAA,OAAO,GAAGC,YAAY,CAACD,OAAD,CAAtB;;AAEA,QAAID,IAAI,YAAYF,UAApB,EAAgC;AAC9B,UAAIE,IAAI,CAACG,KAAL,KAAe,CAAC,CAACF,OAAO,CAACE,KAA7B,EAAoC;AAClC,eAAOH,IAAP;AACD,OAFD,MAEO;AACLA,QAAAA,IAAI,GAAGA,IAAI,CAACI,KAAZ;AACD;AACF;;AAEDC,IAAAA,KAAK,CAAC,YAAD,EAAeL,IAAf,EAAqBC,OAArB,CAAL;AACA,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKE,KAAL,GAAa,CAAC,CAACF,OAAO,CAACE,KAAvB;AACA,SAAKG,KAAL,CAAWN,IAAX;;AAEA,QAAI,KAAKO,MAAL,KAAgBX,GAApB,EAAyB;AACvB,WAAKQ,KAAL,GAAa,EAAb;AACD,KAFD,MAEO;AACL,WAAKA,KAAL,GAAa,KAAKI,QAAL,GAAgB,KAAKD,MAAL,CAAYE,OAAzC;AACD;;AAEDJ,IAAAA,KAAK,CAAC,MAAD,EAAS,IAAT,CAAL;AACD;;AAEDC,EAAAA,KAAK,CAAEN,IAAF,EAAQ;AACX,UAAMU,CAAC,GAAG,KAAKT,OAAL,CAAaE,KAAb,GAAqBQ,EAAE,CAACC,CAAC,CAACC,eAAH,CAAvB,GAA6CF,EAAE,CAACC,CAAC,CAACE,UAAH,CAAzD;AACA,UAAMC,CAAC,GAAGf,IAAI,CAACgB,KAAL,CAAWN,CAAX,CAAV;;AAEA,QAAI,CAACK,CAAL,EAAQ;AACN,YAAM,IAAIE,SAAJ,CAAe,uBAAsBjB,IAAK,EAA1C,CAAN;AACD;;AAED,SAAKQ,QAAL,GAAgBO,CAAC,CAAC,CAAD,CAAD,KAASG,SAAT,GAAqBH,CAAC,CAAC,CAAD,CAAtB,GAA4B,EAA5C;;AACA,QAAI,KAAKP,QAAL,KAAkB,GAAtB,EAA2B;AACzB,WAAKA,QAAL,GAAgB,EAAhB;AACD,KAXU,CAaX;;;AACA,QAAI,CAACO,CAAC,CAAC,CAAD,CAAN,EAAW;AACT,WAAKR,MAAL,GAAcX,GAAd;AACD,KAFD,MAEO;AACL,WAAKW,MAAL,GAAc,IAAIY,MAAJ,CAAWJ,CAAC,CAAC,CAAD,CAAZ,EAAiB,KAAKd,OAAL,CAAaE,KAA9B,CAAd;AACD;AACF;;AAEDiB,EAAAA,QAAQ,GAAI;AACV,WAAO,KAAKhB,KAAZ;AACD;;AAEDiB,EAAAA,IAAI,CAAEZ,OAAF,EAAW;AACbJ,IAAAA,KAAK,CAAC,iBAAD,EAAoBI,OAApB,EAA6B,KAAKR,OAAL,CAAaE,KAA1C,CAAL;;AAEA,QAAI,KAAKI,MAAL,KAAgBX,GAAhB,IAAuBa,OAAO,KAAKb,GAAvC,EAA4C;AAC1C,aAAO,IAAP;AACD;;AAED,QAAI,OAAOa,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,UAAI;AACFA,QAAAA,OAAO,GAAG,IAAIU,MAAJ,CAAWV,OAAX,EAAoB,KAAKR,OAAzB,CAAV;AACD,OAFD,CAEE,OAAOqB,EAAP,EAAW;AACX,eAAO,KAAP;AACD;AACF;;AAED,WAAOC,GAAG,CAACd,OAAD,EAAU,KAAKD,QAAf,EAAyB,KAAKD,MAA9B,EAAsC,KAAKN,OAA3C,CAAV;AACD;;AAEDuB,EAAAA,UAAU,CAAExB,IAAF,EAAQC,OAAR,EAAiB;AACzB,QAAI,EAAED,IAAI,YAAYF,UAAlB,CAAJ,EAAmC;AACjC,YAAM,IAAImB,SAAJ,CAAc,0BAAd,CAAN;AACD;;AAED,QAAI,CAAChB,OAAD,IAAY,OAAOA,OAAP,KAAmB,QAAnC,EAA6C;AAC3CA,MAAAA,OAAO,GAAG;AACRE,QAAAA,KAAK,EAAE,CAAC,CAACF,OADD;AAERwB,QAAAA,iBAAiB,EAAE;AAFX,OAAV;AAID;;AAED,QAAI,KAAKjB,QAAL,KAAkB,EAAtB,EAA0B;AACxB,UAAI,KAAKJ,KAAL,KAAe,EAAnB,EAAuB;AACrB,eAAO,IAAP;AACD;;AACD,aAAO,IAAIsB,KAAJ,CAAU1B,IAAI,CAACI,KAAf,EAAsBH,OAAtB,EAA+BoB,IAA/B,CAAoC,KAAKjB,KAAzC,CAAP;AACD,KALD,MAKO,IAAIJ,IAAI,CAACQ,QAAL,KAAkB,EAAtB,EAA0B;AAC/B,UAAIR,IAAI,CAACI,KAAL,KAAe,EAAnB,EAAuB;AACrB,eAAO,IAAP;AACD;;AACD,aAAO,IAAIsB,KAAJ,CAAU,KAAKtB,KAAf,EAAsBH,OAAtB,EAA+BoB,IAA/B,CAAoCrB,IAAI,CAACO,MAAzC,CAAP;AACD;;AAED,UAAMoB,uBAAuB,GAC3B,CAAC,KAAKnB,QAAL,KAAkB,IAAlB,IAA0B,KAAKA,QAAL,KAAkB,GAA7C,MACCR,IAAI,CAACQ,QAAL,KAAkB,IAAlB,IAA0BR,IAAI,CAACQ,QAAL,KAAkB,GAD7C,CADF;AAGA,UAAMoB,uBAAuB,GAC3B,CAAC,KAAKpB,QAAL,KAAkB,IAAlB,IAA0B,KAAKA,QAAL,KAAkB,GAA7C,MACCR,IAAI,CAACQ,QAAL,KAAkB,IAAlB,IAA0BR,IAAI,CAACQ,QAAL,KAAkB,GAD7C,CADF;AAGA,UAAMqB,UAAU,GAAG,KAAKtB,MAAL,CAAYE,OAAZ,KAAwBT,IAAI,CAACO,MAAL,CAAYE,OAAvD;AACA,UAAMqB,4BAA4B,GAChC,CAAC,KAAKtB,QAAL,KAAkB,IAAlB,IAA0B,KAAKA,QAAL,KAAkB,IAA7C,MACCR,IAAI,CAACQ,QAAL,KAAkB,IAAlB,IAA0BR,IAAI,CAACQ,QAAL,KAAkB,IAD7C,CADF;AAGA,UAAMuB,0BAA0B,GAC9BR,GAAG,CAAC,KAAKhB,MAAN,EAAc,GAAd,EAAmBP,IAAI,CAACO,MAAxB,EAAgCN,OAAhC,CAAH,KACC,KAAKO,QAAL,KAAkB,IAAlB,IAA0B,KAAKA,QAAL,KAAkB,GAD7C,MAEGR,IAAI,CAACQ,QAAL,KAAkB,IAAlB,IAA0BR,IAAI,CAACQ,QAAL,KAAkB,GAF/C,CADF;AAIA,UAAMwB,6BAA6B,GACjCT,GAAG,CAAC,KAAKhB,MAAN,EAAc,GAAd,EAAmBP,IAAI,CAACO,MAAxB,EAAgCN,OAAhC,CAAH,KACC,KAAKO,QAAL,KAAkB,IAAlB,IAA0B,KAAKA,QAAL,KAAkB,GAD7C,MAEGR,IAAI,CAACQ,QAAL,KAAkB,IAAlB,IAA0BR,IAAI,CAACQ,QAAL,KAAkB,GAF/C,CADF;AAKA,WACEmB,uBAAuB,IACvBC,uBADA,IAECC,UAAU,IAAIC,4BAFf,IAGAC,0BAHA,IAIAC,6BALF;AAOD;;AA1Hc;;AA6HjBC,MAAM,CAACC,OAAP,GAAiBpC,UAAjB;;AAEA,MAAMI,YAAY,GAAGiC,OAAO,CAAC,2BAAD,CAA5B;;AACA,MAAM;AAACxB,EAAAA,EAAD;AAAKC,EAAAA;AAAL,IAAUuB,OAAO,CAAC,gBAAD,CAAvB;;AACA,MAAMZ,GAAG,GAAGY,OAAO,CAAC,kBAAD,CAAnB;;AACA,MAAM9B,KAAK,GAAG8B,OAAO,CAAC,mBAAD,CAArB;;AACA,MAAMhB,MAAM,GAAGgB,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMT,KAAK,GAAGS,OAAO,CAAC,SAAD,CAArB","sourcesContent":["const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst {re, t} = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n"]},"metadata":{},"sourceType":"script"}