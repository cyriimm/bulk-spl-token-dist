{"ast":null,"code":"class Queue {\n  constructor() {\n    this.data = [];\n\n    this.subscribe = listener => {\n      this.listener = listener;\n    };\n\n    this.running = false;\n    this.error = [];\n\n    this.populateData = data => {\n      this.data.push(data);\n    };\n\n    this.depopulateData = () => {\n      this.Data.shift();\n    };\n\n    this.run = async () => {\n      if (this.running === true) return;\n      if (this.Data.length === 0) return;\n\n      try {\n        this.running = true;\n        await this.data[0][0]();\n        this.data.shift();\n        this.running = false;\n      } catch (err) {\n        console.log(err);\n        this.data.shift();\n        this.running = false;\n      }\n    };\n  }\n\n}\n\nexport default Queue;","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/src/utils/Queue.js"],"names":["Queue","data","subscribe","listener","running","error","populateData","push","depopulateData","Data","shift","run","length","err","console","log"],"mappings":"AAAA,MAAMA,KAAN,CAAY;AAAA;AAAA,SACVC,IADU,GACH,EADG;;AAAA,SAGVC,SAHU,GAGGC,QAAD,IAAc;AACxB,WAAKA,QAAL,GAAgBA,QAAhB;AACD,KALS;;AAAA,SAOVC,OAPU,GAOA,KAPA;AAAA,SASVC,KATU,GASF,EATE;;AAAA,SAUVC,YAVU,GAUML,IAAD,IAAU;AACvB,WAAKA,IAAL,CAAUM,IAAV,CAAeN,IAAf;AACD,KAZS;;AAAA,SAcVO,cAdU,GAcO,MAAM;AACrB,WAAKC,IAAL,CAAUC,KAAV;AACD,KAhBS;;AAAA,SAkBVC,GAlBU,GAkBJ,YAAY;AAChB,UAAI,KAAKP,OAAL,KAAiB,IAArB,EAA2B;AAC3B,UAAI,KAAKK,IAAL,CAAUG,MAAV,KAAqB,CAAzB,EAA4B;;AAE5B,UAAI;AACF,aAAKR,OAAL,GAAe,IAAf;AAEA,cAAM,KAAKH,IAAL,CAAU,CAAV,EAAa,CAAb,GAAN;AAEA,aAAKA,IAAL,CAAUS,KAAV;AAEA,aAAKN,OAAL,GAAe,KAAf;AACD,OARD,CAQE,OAAOS,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAAKZ,IAAL,CAAUS,KAAV;AACA,aAAKN,OAAL,GAAe,KAAf;AACD;AACF,KAnCS;AAAA;;AAAA;;AAsCZ,eAAeJ,KAAf","sourcesContent":["class Queue {\n  data = [];\n\n  subscribe = (listener) => {\n    this.listener = listener;\n  };\n\n  running = false;\n\n  error = [];\n  populateData = (data) => {\n    this.data.push(data);\n  };\n\n  depopulateData = () => {\n    this.Data.shift();\n  };\n\n  run = async () => {\n    if (this.running === true) return;\n    if (this.Data.length === 0) return;\n\n    try {\n      this.running = true;\n\n      await this.data[0][0]();\n\n      this.data.shift();\n\n      this.running = false;\n    } catch (err) {\n      console.log(err);\n      this.data.shift();\n      this.running = false;\n    }\n  };\n}\n\nexport default Queue;\n"]},"metadata":{},"sourceType":"module"}