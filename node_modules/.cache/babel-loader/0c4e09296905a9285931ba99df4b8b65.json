{"ast":null,"code":"var _jsxFileName = \"/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/src/utils/connected-wallets.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectedWalletsContext = /*#__PURE__*/createContext({});\nexport const ConnectedWalletsProvider = ({\n  children\n}) => {\n  _s();\n\n  const [connectedWallets, setConnectedWallets] = useState({});\n  useEffect(() => {\n    const updateConnectionAmount = () => {\n      chrome.storage.local.get('connectedWallets', result => {\n        setConnectedWallets(result.connectedWallets || {});\n      });\n    };\n\n    const listener = changes => {\n      if ('connectedWallets' in changes) {\n        updateConnectionAmount();\n      }\n    };\n\n    updateConnectionAmount();\n    chrome.storage.local.onChanged.addListener(listener);\n    return () => chrome.storage.local.onChanged.removeListener(listener);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ConnectedWalletsContext.Provider, {\n    value: connectedWallets,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ConnectedWalletsProvider, \"7N3b3FSsoewPRoEYvjqZnB2S43k=\");\n\n_c = ConnectedWalletsProvider;\nexport const useConnectedWallets = () => {\n  _s2();\n\n  return useContext(ConnectedWalletsContext);\n};\n\n_s2(useConnectedWallets, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ConnectedWalletsProvider\");","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/src/utils/connected-wallets.js"],"names":["createContext","useContext","useEffect","useState","ConnectedWalletsContext","ConnectedWalletsProvider","children","connectedWallets","setConnectedWallets","updateConnectionAmount","chrome","storage","local","get","result","listener","changes","onChanged","addListener","removeListener","useConnectedWallets"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,EAA+CC,QAA/C,QAA+D,OAA/D;;AAEA,MAAMC,uBAAuB,gBAAGJ,aAAa,CAAC,EAAD,CAA7C;AAEA,OAAO,MAAMK,wBAAwB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACxD,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CL,QAAQ,CAAC,EAAD,CAAxD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,sBAAsB,GAAG,MAAM;AACnCC,MAAAA,MAAM,CAACC,OAAP,CAAeC,KAAf,CAAqBC,GAArB,CAAyB,kBAAzB,EAA8CC,MAAD,IAAY;AACvDN,QAAAA,mBAAmB,CAACM,MAAM,CAACP,gBAAP,IAA2B,EAA5B,CAAnB;AACD,OAFD;AAGD,KAJD;;AAKA,UAAMQ,QAAQ,GAAIC,OAAD,IAAa;AAC5B,UAAI,sBAAsBA,OAA1B,EAAmC;AACjCP,QAAAA,sBAAsB;AACvB;AACF,KAJD;;AAKAA,IAAAA,sBAAsB;AACtBC,IAAAA,MAAM,CAACC,OAAP,CAAeC,KAAf,CAAqBK,SAArB,CAA+BC,WAA/B,CAA2CH,QAA3C;AACA,WAAO,MAAML,MAAM,CAACC,OAAP,CAAeC,KAAf,CAAqBK,SAArB,CAA+BE,cAA/B,CAA8CJ,QAA9C,CAAb;AACD,GAdQ,EAcN,EAdM,CAAT;AAgBA,sBACE,QAAC,uBAAD,CAAyB,QAAzB;AAAkC,IAAA,KAAK,EAAER,gBAAzC;AAAA,cACGD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAxBM;;GAAMD,wB;;KAAAA,wB;AA0Bb,OAAO,MAAMe,mBAAmB,GAAG;AAAA;;AAAA,SAAMnB,UAAU,CAACG,uBAAD,CAAhB;AAAA,CAA5B;;IAAMgB,mB","sourcesContent":["import { createContext, useContext, useEffect, useState } from 'react';\n\nconst ConnectedWalletsContext = createContext({});\n\nexport const ConnectedWalletsProvider = ({ children }) => {\n  const [connectedWallets, setConnectedWallets] = useState({});\n\n  useEffect(() => {\n    const updateConnectionAmount = () => {\n      chrome.storage.local.get('connectedWallets', (result) => {\n        setConnectedWallets(result.connectedWallets || {});\n      });\n    };\n    const listener = (changes) => {\n      if ('connectedWallets' in changes) {\n        updateConnectionAmount();\n      }\n    };\n    updateConnectionAmount();\n    chrome.storage.local.onChanged.addListener(listener);\n    return () => chrome.storage.local.onChanged.removeListener(listener);\n  }, []);\n\n  return (\n    <ConnectedWalletsContext.Provider value={connectedWallets}>\n      {children}\n    </ConnectedWalletsContext.Provider>\n  );\n};\n\nexport const useConnectedWallets = () => useContext(ConnectedWalletsContext);\n"]},"metadata":{},"sourceType":"module"}