{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { Account } from '@solana/web3.js';\nimport { useMediaQuery } from '@material-ui/core';\nimport * as bs58 from 'bs58';\nexport async function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\nexport function useLocalStorageState(key, defaultState) {\n  _s();\n\n  const [state, setState] = useState(() => {\n    let storedState = localStorage.getItem(key);\n\n    if (storedState) {\n      return JSON.parse(storedState);\n    }\n\n    return defaultState;\n  });\n  const setLocalStorageState = useCallback(newState => {\n    let changed = state !== newState;\n\n    if (!changed) {\n      return;\n    }\n\n    setState(newState);\n\n    if (newState === null) {\n      localStorage.removeItem(key);\n    } else {\n      localStorage.setItem(key, JSON.stringify(newState));\n    }\n  }, [state, key]);\n  return [state, setLocalStorageState];\n}\n\n_s(useLocalStorageState, \"JOKmImldVb7FOmNNo/OoYwdZlgA=\");\n\nexport function useEffectAfterTimeout(effect, timeout) {\n  _s2();\n\n  useEffect(() => {\n    let handle = setTimeout(effect, timeout);\n    return () => clearTimeout(handle);\n  });\n}\n\n_s2(useEffectAfterTimeout, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nexport function useListener(emitter, eventName) {\n  _s3();\n\n  let [, forceUpdate] = useState(0);\n  useEffect(() => {\n    let listener = () => forceUpdate(i => i + 1);\n\n    emitter.on(eventName, listener);\n    return () => emitter.removeListener(eventName, listener);\n  }, [emitter, eventName]);\n}\n\n_s3(useListener, \"i9YVexKLC1HoILUpF92P33MaIrM=\");\n\nexport function useRefEqual(value, areEqual) {\n  _s4();\n\n  const prevRef = useRef(value);\n\n  if (prevRef.current !== value && !areEqual(prevRef.current, value)) {\n    prevRef.current = value;\n  }\n\n  return prevRef.current;\n}\n\n_s4(useRefEqual, \"dVIYGs5fsf/CDuQC9gE0yacGRVE=\");\n\nexport function abbreviateAddress(address) {\n  let base58 = address.toBase58();\n  return base58.slice(0, 4) + '…' + base58.slice(base58.length - 4);\n}\nexport async function confirmTransaction(connection, signature) {\n  let startTime = new Date();\n  let result = await connection.confirmTransaction(signature, 'recent');\n\n  if (result.value.err) {\n    throw new Error('Error confirming transaction: ' + JSON.stringify(result.value.err));\n  }\n\n  console.log('Transaction confirmed after %sms', new Date().getTime() - startTime.getTime());\n  return result.value;\n} // TODO consolidate popup dimensions\n\nexport function useIsExtensionWidth() {\n  _s5();\n\n  return useMediaQuery('(max-width:450px)');\n}\n\n_s5(useIsExtensionWidth, \"AGUsWXV/IGWEYGrGyhqugaEb9zc=\", false, function () {\n  return [useMediaQuery];\n});\n\nexport const isExtension = window.location.protocol === 'chrome-extension:';\nexport const isExtensionPopup = isExtension && window.opener;\n/**\n * Returns an account object when given the private key\n */\n\nexport const decodeAccount = privateKey => {\n  try {\n    return new Account(JSON.parse(privateKey));\n  } catch (_) {\n    try {\n      return new Account(bs58.decode(privateKey));\n    } catch (_) {\n      return undefined;\n    }\n  }\n};","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/src/utils/utils.ts"],"names":["useCallback","useEffect","useRef","useState","Account","useMediaQuery","bs58","sleep","ms","Promise","resolve","setTimeout","useLocalStorageState","key","defaultState","state","setState","storedState","localStorage","getItem","JSON","parse","setLocalStorageState","newState","changed","removeItem","setItem","stringify","useEffectAfterTimeout","effect","timeout","handle","clearTimeout","useListener","emitter","eventName","forceUpdate","listener","i","on","removeListener","useRefEqual","value","areEqual","prevRef","current","abbreviateAddress","address","base58","toBase58","slice","length","confirmTransaction","connection","signature","startTime","Date","result","err","Error","console","log","getTime","useIsExtensionWidth","isExtension","window","location","protocol","isExtensionPopup","opener","decodeAccount","privateKey","_","decode","undefined"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react';\nimport { Account, Connection, PublicKey } from '@solana/web3.js';\nimport { useMediaQuery } from '@material-ui/core';\nimport * as bs58 from 'bs58';\n\nexport async function sleep(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport function useLocalStorageState<T>(\n  key: string,\n  defaultState: T,\n): [T, (T) => void] {\n  const [state, setState] = useState(() => {\n    let storedState = localStorage.getItem(key);\n    if (storedState) {\n      return JSON.parse(storedState);\n    }\n    return defaultState;\n  });\n\n  const setLocalStorageState = useCallback(\n    (newState) => {\n      let changed = state !== newState;\n      if (!changed) {\n        return;\n      }\n      setState(newState);\n      if (newState === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, JSON.stringify(newState));\n      }\n    },\n    [state, key],\n  );\n\n  return [state, setLocalStorageState];\n}\n\nexport function useEffectAfterTimeout(effect: () => void, timeout: number) {\n  useEffect(() => {\n    let handle = setTimeout(effect, timeout);\n    return () => clearTimeout(handle);\n  });\n}\n\nexport function useListener(emitter, eventName: string) {\n  let [, forceUpdate] = useState(0);\n  useEffect(() => {\n    let listener = () => forceUpdate((i) => i + 1);\n    emitter.on(eventName, listener);\n    return () => emitter.removeListener(eventName, listener);\n  }, [emitter, eventName]);\n}\n\nexport function useRefEqual<T>(\n  value: T,\n  areEqual: (oldValue: T, newValue: T) => boolean,\n): T {\n  const prevRef = useRef<T>(value);\n  if (prevRef.current !== value && !areEqual(prevRef.current, value)) {\n    prevRef.current = value;\n  }\n  return prevRef.current;\n}\n\nexport function abbreviateAddress(address: PublicKey) {\n  let base58 = address.toBase58();\n  return base58.slice(0, 4) + '…' + base58.slice(base58.length - 4);\n}\n\nexport async function confirmTransaction(\n  connection: Connection,\n  signature: string,\n) {\n  let startTime = new Date();\n  let result = await connection.confirmTransaction(signature, 'recent');\n  if (result.value.err) {\n    throw new Error(\n      'Error confirming transaction: ' + JSON.stringify(result.value.err),\n    );\n  }\n  console.log(\n    'Transaction confirmed after %sms',\n    new Date().getTime() - startTime.getTime(),\n  );\n  return result.value;\n}\n\n// TODO consolidate popup dimensions\nexport function useIsExtensionWidth() {\n  return useMediaQuery('(max-width:450px)');\n}\n\nexport const isExtension = window.location.protocol === 'chrome-extension:';\n\nexport const isExtensionPopup = isExtension && window.opener;\n/**\n * Returns an account object when given the private key\n */\nexport const decodeAccount = (privateKey: string) => {\n  try {\n    return new Account(JSON.parse(privateKey));\n  } catch (_) {\n    try {\n      return new Account(bs58.decode(privateKey));\n    } catch (_) {\n      return undefined;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}