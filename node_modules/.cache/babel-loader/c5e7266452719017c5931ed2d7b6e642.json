{"ast":null,"code":"/**\r\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\r\n *\r\n * @version 0.5.7\r\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\r\n * @copyright Chen, Yi-Cyuan 2015-2016\r\n * @license MIT\r\n */\n\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var root = typeof window === 'object' ? window : {};\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n\n  if (NODE_JS) {\n    root = global;\n  }\n\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array'];\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(bits, padding, type);\n    }\n\n    return method;\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createShakeOutputMethod(bits, padding, type);\n    }\n\n    return method;\n  };\n\n  var algorithms = [{\n    name: 'keccak',\n    padding: KECCAK_PADDING,\n    bits: BITS,\n    createMethod: createMethod\n  }, {\n    name: 'sha3',\n    padding: PADDING,\n    bits: BITS,\n    createMethod: createMethod\n  }, {\n    name: 'shake',\n    padding: SHAKE_PADDING,\n    bits: SHAKE_BITS,\n    createMethod: createShakeMethod\n  }];\n  var methods = {},\n      methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = 1600 - (bits << 1) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    var notString = typeof message !== 'string';\n\n    if (notString && message.constructor === ArrayBuffer) {\n      message = new Uint8Array(message);\n    }\n\n    var length = message.length,\n        blocks = this.blocks,\n        byteCount = this.byteCount,\n        blockCount = this.blockCount,\n        index = 0,\n        s = this.s,\n        i,\n        code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | code >> 6) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | code >> 12) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + ((code & 0x3ff) << 10 | message.charCodeAt(++index) & 0x3ff);\n            blocks[i >> 2] |= (0xf0 | code >> 18) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code >> 12 & 0x3f) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    var blocks = this.blocks,\n        i = this.lastByteIndex,\n        blockCount = this.blockCount,\n        s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n\n    blocks[blockCount - 1] |= 0x80000000;\n\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n    var blockCount = this.blockCount,\n        s = this.s,\n        outputBlocks = this.outputBlocks,\n        extraBytes = this.extraBytes,\n        i = 0,\n        j = 0;\n    var hex = '',\n        block;\n\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F] + HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F] + HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F] + HEX_CHARS[block >> 28 & 0x0F] + HEX_CHARS[block >> 24 & 0x0F];\n      }\n\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n\n    if (extraBytes) {\n      block = s[i];\n\n      if (extraBytes > 0) {\n        hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F];\n      }\n\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F];\n      }\n\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F];\n      }\n    }\n\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n    var blockCount = this.blockCount,\n        s = this.s,\n        outputBlocks = this.outputBlocks,\n        extraBytes = this.extraBytes,\n        i = 0,\n        j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n\n    if (extraBytes) {\n      buffer = new ArrayBuffer(outputBlocks + 1 << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n\n    var array = new Uint32Array(buffer);\n\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n    var blockCount = this.blockCount,\n        s = this.s,\n        outputBlocks = this.outputBlocks,\n        extraBytes = this.extraBytes,\n        i = 0,\n        j = 0;\n    var array = [],\n        offset,\n        block;\n\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = block >> 8 & 0xFF;\n        array[offset + 2] = block >> 16 & 0xFF;\n        array[offset + 3] = block >> 24 & 0xFF;\n      }\n\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n\n      if (extraBytes > 0) {\n        array[offset] = block & 0xFF;\n      }\n\n      if (extraBytes > 1) {\n        array[offset + 1] = block >> 8 & 0xFF;\n      }\n\n      if (extraBytes > 2) {\n        array[offset + 2] = block >> 16 & 0xFF;\n      }\n    }\n\n    return array;\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n      h = c8 ^ (c2 << 1 | c3 >>> 31);\n      l = c9 ^ (c3 << 1 | c2 >>> 31);\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ (c4 << 1 | c5 >>> 31);\n      l = c1 ^ (c5 << 1 | c4 >>> 31);\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ (c6 << 1 | c7 >>> 31);\n      l = c3 ^ (c7 << 1 | c6 >>> 31);\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ (c8 << 1 | c9 >>> 31);\n      l = c5 ^ (c9 << 1 | c8 >>> 31);\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ (c0 << 1 | c1 >>> 31);\n      l = c7 ^ (c1 << 1 | c0 >>> 31);\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n      b0 = s[0];\n      b1 = s[1];\n      b32 = s[11] << 4 | s[10] >>> 28;\n      b33 = s[10] << 4 | s[11] >>> 28;\n      b14 = s[20] << 3 | s[21] >>> 29;\n      b15 = s[21] << 3 | s[20] >>> 29;\n      b46 = s[31] << 9 | s[30] >>> 23;\n      b47 = s[30] << 9 | s[31] >>> 23;\n      b28 = s[40] << 18 | s[41] >>> 14;\n      b29 = s[41] << 18 | s[40] >>> 14;\n      b20 = s[2] << 1 | s[3] >>> 31;\n      b21 = s[3] << 1 | s[2] >>> 31;\n      b2 = s[13] << 12 | s[12] >>> 20;\n      b3 = s[12] << 12 | s[13] >>> 20;\n      b34 = s[22] << 10 | s[23] >>> 22;\n      b35 = s[23] << 10 | s[22] >>> 22;\n      b16 = s[33] << 13 | s[32] >>> 19;\n      b17 = s[32] << 13 | s[33] >>> 19;\n      b48 = s[42] << 2 | s[43] >>> 30;\n      b49 = s[43] << 2 | s[42] >>> 30;\n      b40 = s[5] << 30 | s[4] >>> 2;\n      b41 = s[4] << 30 | s[5] >>> 2;\n      b22 = s[14] << 6 | s[15] >>> 26;\n      b23 = s[15] << 6 | s[14] >>> 26;\n      b4 = s[25] << 11 | s[24] >>> 21;\n      b5 = s[24] << 11 | s[25] >>> 21;\n      b36 = s[34] << 15 | s[35] >>> 17;\n      b37 = s[35] << 15 | s[34] >>> 17;\n      b18 = s[45] << 29 | s[44] >>> 3;\n      b19 = s[44] << 29 | s[45] >>> 3;\n      b10 = s[6] << 28 | s[7] >>> 4;\n      b11 = s[7] << 28 | s[6] >>> 4;\n      b42 = s[17] << 23 | s[16] >>> 9;\n      b43 = s[16] << 23 | s[17] >>> 9;\n      b24 = s[26] << 25 | s[27] >>> 7;\n      b25 = s[27] << 25 | s[26] >>> 7;\n      b6 = s[36] << 21 | s[37] >>> 11;\n      b7 = s[37] << 21 | s[36] >>> 11;\n      b38 = s[47] << 24 | s[46] >>> 8;\n      b39 = s[46] << 24 | s[47] >>> 8;\n      b30 = s[8] << 27 | s[9] >>> 5;\n      b31 = s[9] << 27 | s[8] >>> 5;\n      b12 = s[18] << 20 | s[19] >>> 12;\n      b13 = s[19] << 20 | s[18] >>> 12;\n      b44 = s[29] << 7 | s[28] >>> 25;\n      b45 = s[28] << 7 | s[29] >>> 25;\n      b26 = s[38] << 8 | s[39] >>> 24;\n      b27 = s[39] << 8 | s[38] >>> 24;\n      b8 = s[48] << 14 | s[49] >>> 18;\n      b9 = s[49] << 14 | s[48] >>> 18;\n      s[0] = b0 ^ ~b2 & b4;\n      s[1] = b1 ^ ~b3 & b5;\n      s[10] = b10 ^ ~b12 & b14;\n      s[11] = b11 ^ ~b13 & b15;\n      s[20] = b20 ^ ~b22 & b24;\n      s[21] = b21 ^ ~b23 & b25;\n      s[30] = b30 ^ ~b32 & b34;\n      s[31] = b31 ^ ~b33 & b35;\n      s[40] = b40 ^ ~b42 & b44;\n      s[41] = b41 ^ ~b43 & b45;\n      s[2] = b2 ^ ~b4 & b6;\n      s[3] = b3 ^ ~b5 & b7;\n      s[12] = b12 ^ ~b14 & b16;\n      s[13] = b13 ^ ~b15 & b17;\n      s[22] = b22 ^ ~b24 & b26;\n      s[23] = b23 ^ ~b25 & b27;\n      s[32] = b32 ^ ~b34 & b36;\n      s[33] = b33 ^ ~b35 & b37;\n      s[42] = b42 ^ ~b44 & b46;\n      s[43] = b43 ^ ~b45 & b47;\n      s[4] = b4 ^ ~b6 & b8;\n      s[5] = b5 ^ ~b7 & b9;\n      s[14] = b14 ^ ~b16 & b18;\n      s[15] = b15 ^ ~b17 & b19;\n      s[24] = b24 ^ ~b26 & b28;\n      s[25] = b25 ^ ~b27 & b29;\n      s[34] = b34 ^ ~b36 & b38;\n      s[35] = b35 ^ ~b37 & b39;\n      s[44] = b44 ^ ~b46 & b48;\n      s[45] = b45 ^ ~b47 & b49;\n      s[6] = b6 ^ ~b8 & b0;\n      s[7] = b7 ^ ~b9 & b1;\n      s[16] = b16 ^ ~b18 & b10;\n      s[17] = b17 ^ ~b19 & b11;\n      s[26] = b26 ^ ~b28 & b20;\n      s[27] = b27 ^ ~b29 & b21;\n      s[36] = b36 ^ ~b38 & b30;\n      s[37] = b37 ^ ~b39 & b31;\n      s[46] = b46 ^ ~b48 & b40;\n      s[47] = b47 ^ ~b49 & b41;\n      s[8] = b8 ^ ~b0 & b2;\n      s[9] = b9 ^ ~b1 & b3;\n      s[18] = b18 ^ ~b10 & b12;\n      s[19] = b19 ^ ~b11 & b13;\n      s[28] = b28 ^ ~b20 & b22;\n      s[29] = b29 ^ ~b21 & b23;\n      s[38] = b38 ^ ~b30 & b32;\n      s[39] = b39 ^ ~b31 & b33;\n      s[48] = b48 ^ ~b40 & b42;\n      s[49] = b49 ^ ~b41 & b43;\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (var i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/node_modules/js-sha3/src/sha3.js"],"names":["root","window","NODE_JS","JS_SHA3_NO_NODE_JS","process","versions","node","global","COMMON_JS","JS_SHA3_NO_COMMON_JS","module","exports","HEX_CHARS","split","SHAKE_PADDING","KECCAK_PADDING","PADDING","SHIFT","RC","BITS","SHAKE_BITS","OUTPUT_TYPES","createOutputMethod","bits","padding","outputType","message","Keccak","update","createShakeOutputMethod","outputBits","createMethod","method","create","i","length","type","createShakeMethod","algorithms","name","methods","methodNames","algorithm","j","methodName","push","blocks","s","reset","block","start","blockCount","byteCount","outputBlocks","extraBytes","prototype","notString","constructor","ArrayBuffer","Uint8Array","index","code","charCodeAt","lastByteIndex","f","finalize","toString","hex","arrayBuffer","bytes","buffer","array","Uint32Array","slice","digest","offset","h","l","n","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49"],"mappings":"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","sourcesContent":["/**\r\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\r\n *\r\n * @version 0.5.7\r\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\r\n * @copyright Chen, Yi-Cyuan 2015-2016\r\n * @license MIT\r\n */\r\n/*jslint bitwise: true */\r\n(function () {\r\n  'use strict';\r\n\r\n  var root = typeof window === 'object' ? window : {};\r\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\r\n  if (NODE_JS) {\r\n    root = global;\r\n  }\r\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\r\n  var HEX_CHARS = '0123456789abcdef'.split('');\r\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\r\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\r\n  var PADDING = [6, 1536, 393216, 100663296];\r\n  var SHIFT = [0, 8, 16, 24];\r\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\r\n            0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\r\n            2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\r\n            2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\r\n            2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\r\n  var BITS = [224, 256, 384, 512];\r\n  var SHAKE_BITS = [128, 256];\r\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array'];\r\n\r\n  var createOutputMethod = function (bits, padding, outputType) {\r\n    return function (message) {\r\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\r\n    };\r\n  };\r\n\r\n  var createShakeOutputMethod = function (bits, padding, outputType) {\r\n    return function (message, outputBits) {\r\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\r\n    };\r\n  };\r\n\r\n  var createMethod = function (bits, padding) {\r\n    var method = createOutputMethod(bits, padding, 'hex');\r\n    method.create = function () {\r\n      return new Keccak(bits, padding, bits);\r\n    };\r\n    method.update = function (message) {\r\n      return method.create().update(message);\r\n    };\r\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\r\n      var type = OUTPUT_TYPES[i];\r\n      method[type] = createOutputMethod(bits, padding, type);\r\n    }\r\n    return method;\r\n  };\r\n\r\n  var createShakeMethod = function (bits, padding) {\r\n    var method = createShakeOutputMethod(bits, padding, 'hex');\r\n    method.create = function (outputBits) {\r\n      return new Keccak(bits, padding, outputBits);\r\n    };\r\n    method.update = function (message, outputBits) {\r\n      return method.create(outputBits).update(message);\r\n    };\r\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\r\n      var type = OUTPUT_TYPES[i];\r\n      method[type] = createShakeOutputMethod(bits, padding, type);\r\n    }\r\n    return method;\r\n  };\r\n\r\n  var algorithms = [\r\n    {name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod},\r\n    {name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod},\r\n    {name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod}\r\n  ];\r\n\r\n  var methods = {}, methodNames = [];\r\n\r\n  for (var i = 0; i < algorithms.length; ++i) {\r\n    var algorithm = algorithms[i];\r\n    var bits  = algorithm.bits;\r\n    for (var j = 0; j < bits.length; ++j) {\r\n      var methodName = algorithm.name +'_' + bits[j];\r\n      methodNames.push(methodName);\r\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\r\n    }\r\n  }\r\n\r\n  function Keccak(bits, padding, outputBits) {\r\n    this.blocks = [];\r\n    this.s = [];\r\n    this.padding = padding;\r\n    this.outputBits = outputBits;\r\n    this.reset = true;\r\n    this.block = 0;\r\n    this.start = 0;\r\n    this.blockCount = (1600 - (bits << 1)) >> 5;\r\n    this.byteCount = this.blockCount << 2;\r\n    this.outputBlocks = outputBits >> 5;\r\n    this.extraBytes = (outputBits & 31) >> 3;\r\n\r\n    for (var i = 0; i < 50; ++i) {\r\n      this.s[i] = 0;\r\n    }\r\n  }\r\n\r\n  Keccak.prototype.update = function (message) {\r\n    var notString = typeof message !== 'string';\r\n    if (notString && message.constructor === ArrayBuffer) {\r\n      message = new Uint8Array(message);\r\n    }\r\n    var length = message.length, blocks = this.blocks, byteCount = this.byteCount,\r\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\r\n\r\n    while (index < length) {\r\n      if (this.reset) {\r\n        this.reset = false;\r\n        blocks[0] = this.block;\r\n        for (i = 1; i < blockCount + 1; ++i) {\r\n          blocks[i] = 0;\r\n        }\r\n      }\r\n      if (notString) {\r\n        for (i = this.start; index < length && i < byteCount; ++index) {\r\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\r\n        }\r\n      } else {\r\n        for (i = this.start; index < length && i < byteCount; ++index) {\r\n          code = message.charCodeAt(index);\r\n          if (code < 0x80) {\r\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\r\n          } else if (code < 0x800) {\r\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n          } else if (code < 0xd800 || code >= 0xe000) {\r\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n          } else {\r\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\r\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n          }\r\n        }\r\n      }\r\n      this.lastByteIndex = i;\r\n      if (i >= byteCount) {\r\n        this.start = i - byteCount;\r\n        this.block = blocks[blockCount];\r\n        for (i = 0; i < blockCount; ++i) {\r\n          s[i] ^= blocks[i];\r\n        }\r\n        f(s);\r\n        this.reset = true;\r\n      } else {\r\n        this.start = i;\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  Keccak.prototype.finalize = function () {\r\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\r\n    blocks[i >> 2] |= this.padding[i & 3];\r\n    if (this.lastByteIndex === this.byteCount) {\r\n      blocks[0] = blocks[blockCount];\r\n      for (i = 1; i < blockCount + 1; ++i) {\r\n        blocks[i] = 0;\r\n      }\r\n    }\r\n    blocks[blockCount - 1] |= 0x80000000;\r\n    for (i = 0; i < blockCount; ++i) {\r\n      s[i] ^= blocks[i];\r\n    }\r\n    f(s);\r\n  };\r\n\r\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\r\n    this.finalize();\r\n\r\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\r\n        extraBytes = this.extraBytes, i = 0, j = 0;\r\n    var hex = '', block;\r\n    while (j < outputBlocks) {\r\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\r\n        block = s[i];\r\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\r\n               HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\r\n               HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\r\n               HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\r\n      }\r\n      if (j % blockCount === 0) {\r\n        f(s);\r\n        i = 0;\r\n      }\r\n    }\r\n    if (extraBytes) {\r\n      block = s[i];\r\n      if (extraBytes > 0) {\r\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\r\n      }\r\n      if (extraBytes > 1) {\r\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\r\n      }\r\n      if (extraBytes > 2) {\r\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\r\n      }\r\n    }\r\n    return hex;\r\n  };\r\n\r\n  Keccak.prototype.arrayBuffer = function () {\r\n    this.finalize();\r\n\r\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\r\n        extraBytes = this.extraBytes, i = 0, j = 0;\r\n    var bytes = this.outputBits >> 3;\r\n    var buffer;\r\n    if (extraBytes) {\r\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\r\n    } else {\r\n      buffer = new ArrayBuffer(bytes);\r\n    }\r\n    var array = new Uint32Array(buffer);\r\n    while (j < outputBlocks) {\r\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\r\n        array[j] = s[i];\r\n      }\r\n      if (j % blockCount === 0) {\r\n        f(s);\r\n      }\r\n    }\r\n    if (extraBytes) {\r\n      array[i] = s[i];\r\n      buffer = buffer.slice(0, bytes);\r\n    }\r\n    return buffer;\r\n  };\r\n\r\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\r\n\r\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\r\n    this.finalize();\r\n\r\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\r\n        extraBytes = this.extraBytes, i = 0, j = 0;\r\n    var array = [], offset, block;\r\n    while (j < outputBlocks) {\r\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\r\n        offset = j << 2;\r\n        block = s[i];\r\n        array[offset] = block & 0xFF;\r\n        array[offset + 1] = (block >> 8) & 0xFF;\r\n        array[offset + 2] = (block >> 16) & 0xFF;\r\n        array[offset + 3] = (block >> 24) & 0xFF;\r\n      }\r\n      if (j % blockCount === 0) {\r\n        f(s);\r\n      }\r\n    }\r\n    if (extraBytes) {\r\n      offset = j << 2;\r\n      block = s[i];\r\n      if (extraBytes > 0) {\r\n        array[offset] = block & 0xFF;\r\n      }\r\n      if (extraBytes > 1) {\r\n        array[offset + 1] = (block >> 8) & 0xFF;\r\n      }\r\n      if (extraBytes > 2) {\r\n        array[offset + 2] = (block >> 16) & 0xFF;\r\n      }\r\n    }\r\n    return array;\r\n  };\r\n\r\n  var f = function (s) {\r\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\r\n        b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\r\n        b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\r\n        b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\r\n    for (n = 0; n < 48; n += 2) {\r\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\r\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\r\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\r\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\r\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\r\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\r\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\r\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\r\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\r\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\r\n\r\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\r\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\r\n      s[0] ^= h;\r\n      s[1] ^= l;\r\n      s[10] ^= h;\r\n      s[11] ^= l;\r\n      s[20] ^= h;\r\n      s[21] ^= l;\r\n      s[30] ^= h;\r\n      s[31] ^= l;\r\n      s[40] ^= h;\r\n      s[41] ^= l;\r\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\r\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\r\n      s[2] ^= h;\r\n      s[3] ^= l;\r\n      s[12] ^= h;\r\n      s[13] ^= l;\r\n      s[22] ^= h;\r\n      s[23] ^= l;\r\n      s[32] ^= h;\r\n      s[33] ^= l;\r\n      s[42] ^= h;\r\n      s[43] ^= l;\r\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\r\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\r\n      s[4] ^= h;\r\n      s[5] ^= l;\r\n      s[14] ^= h;\r\n      s[15] ^= l;\r\n      s[24] ^= h;\r\n      s[25] ^= l;\r\n      s[34] ^= h;\r\n      s[35] ^= l;\r\n      s[44] ^= h;\r\n      s[45] ^= l;\r\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\r\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\r\n      s[6] ^= h;\r\n      s[7] ^= l;\r\n      s[16] ^= h;\r\n      s[17] ^= l;\r\n      s[26] ^= h;\r\n      s[27] ^= l;\r\n      s[36] ^= h;\r\n      s[37] ^= l;\r\n      s[46] ^= h;\r\n      s[47] ^= l;\r\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\r\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\r\n      s[8] ^= h;\r\n      s[9] ^= l;\r\n      s[18] ^= h;\r\n      s[19] ^= l;\r\n      s[28] ^= h;\r\n      s[29] ^= l;\r\n      s[38] ^= h;\r\n      s[39] ^= l;\r\n      s[48] ^= h;\r\n      s[49] ^= l;\r\n\r\n      b0 = s[0];\r\n      b1 = s[1];\r\n      b32 = (s[11] << 4) | (s[10] >>> 28);\r\n      b33 = (s[10] << 4) | (s[11] >>> 28);\r\n      b14 = (s[20] << 3) | (s[21] >>> 29);\r\n      b15 = (s[21] << 3) | (s[20] >>> 29);\r\n      b46 = (s[31] << 9) | (s[30] >>> 23);\r\n      b47 = (s[30] << 9) | (s[31] >>> 23);\r\n      b28 = (s[40] << 18) | (s[41] >>> 14);\r\n      b29 = (s[41] << 18) | (s[40] >>> 14);\r\n      b20 = (s[2] << 1) | (s[3] >>> 31);\r\n      b21 = (s[3] << 1) | (s[2] >>> 31);\r\n      b2 = (s[13] << 12) | (s[12] >>> 20);\r\n      b3 = (s[12] << 12) | (s[13] >>> 20);\r\n      b34 = (s[22] << 10) | (s[23] >>> 22);\r\n      b35 = (s[23] << 10) | (s[22] >>> 22);\r\n      b16 = (s[33] << 13) | (s[32] >>> 19);\r\n      b17 = (s[32] << 13) | (s[33] >>> 19);\r\n      b48 = (s[42] << 2) | (s[43] >>> 30);\r\n      b49 = (s[43] << 2) | (s[42] >>> 30);\r\n      b40 = (s[5] << 30) | (s[4] >>> 2);\r\n      b41 = (s[4] << 30) | (s[5] >>> 2);\r\n      b22 = (s[14] << 6) | (s[15] >>> 26);\r\n      b23 = (s[15] << 6) | (s[14] >>> 26);\r\n      b4 = (s[25] << 11) | (s[24] >>> 21);\r\n      b5 = (s[24] << 11) | (s[25] >>> 21);\r\n      b36 = (s[34] << 15) | (s[35] >>> 17);\r\n      b37 = (s[35] << 15) | (s[34] >>> 17);\r\n      b18 = (s[45] << 29) | (s[44] >>> 3);\r\n      b19 = (s[44] << 29) | (s[45] >>> 3);\r\n      b10 = (s[6] << 28) | (s[7] >>> 4);\r\n      b11 = (s[7] << 28) | (s[6] >>> 4);\r\n      b42 = (s[17] << 23) | (s[16] >>> 9);\r\n      b43 = (s[16] << 23) | (s[17] >>> 9);\r\n      b24 = (s[26] << 25) | (s[27] >>> 7);\r\n      b25 = (s[27] << 25) | (s[26] >>> 7);\r\n      b6 = (s[36] << 21) | (s[37] >>> 11);\r\n      b7 = (s[37] << 21) | (s[36] >>> 11);\r\n      b38 = (s[47] << 24) | (s[46] >>> 8);\r\n      b39 = (s[46] << 24) | (s[47] >>> 8);\r\n      b30 = (s[8] << 27) | (s[9] >>> 5);\r\n      b31 = (s[9] << 27) | (s[8] >>> 5);\r\n      b12 = (s[18] << 20) | (s[19] >>> 12);\r\n      b13 = (s[19] << 20) | (s[18] >>> 12);\r\n      b44 = (s[29] << 7) | (s[28] >>> 25);\r\n      b45 = (s[28] << 7) | (s[29] >>> 25);\r\n      b26 = (s[38] << 8) | (s[39] >>> 24);\r\n      b27 = (s[39] << 8) | (s[38] >>> 24);\r\n      b8 = (s[48] << 14) | (s[49] >>> 18);\r\n      b9 = (s[49] << 14) | (s[48] >>> 18);\r\n\r\n      s[0] = b0 ^ (~b2 & b4);\r\n      s[1] = b1 ^ (~b3 & b5);\r\n      s[10] = b10 ^ (~b12 & b14);\r\n      s[11] = b11 ^ (~b13 & b15);\r\n      s[20] = b20 ^ (~b22 & b24);\r\n      s[21] = b21 ^ (~b23 & b25);\r\n      s[30] = b30 ^ (~b32 & b34);\r\n      s[31] = b31 ^ (~b33 & b35);\r\n      s[40] = b40 ^ (~b42 & b44);\r\n      s[41] = b41 ^ (~b43 & b45);\r\n      s[2] = b2 ^ (~b4 & b6);\r\n      s[3] = b3 ^ (~b5 & b7);\r\n      s[12] = b12 ^ (~b14 & b16);\r\n      s[13] = b13 ^ (~b15 & b17);\r\n      s[22] = b22 ^ (~b24 & b26);\r\n      s[23] = b23 ^ (~b25 & b27);\r\n      s[32] = b32 ^ (~b34 & b36);\r\n      s[33] = b33 ^ (~b35 & b37);\r\n      s[42] = b42 ^ (~b44 & b46);\r\n      s[43] = b43 ^ (~b45 & b47);\r\n      s[4] = b4 ^ (~b6 & b8);\r\n      s[5] = b5 ^ (~b7 & b9);\r\n      s[14] = b14 ^ (~b16 & b18);\r\n      s[15] = b15 ^ (~b17 & b19);\r\n      s[24] = b24 ^ (~b26 & b28);\r\n      s[25] = b25 ^ (~b27 & b29);\r\n      s[34] = b34 ^ (~b36 & b38);\r\n      s[35] = b35 ^ (~b37 & b39);\r\n      s[44] = b44 ^ (~b46 & b48);\r\n      s[45] = b45 ^ (~b47 & b49);\r\n      s[6] = b6 ^ (~b8 & b0);\r\n      s[7] = b7 ^ (~b9 & b1);\r\n      s[16] = b16 ^ (~b18 & b10);\r\n      s[17] = b17 ^ (~b19 & b11);\r\n      s[26] = b26 ^ (~b28 & b20);\r\n      s[27] = b27 ^ (~b29 & b21);\r\n      s[36] = b36 ^ (~b38 & b30);\r\n      s[37] = b37 ^ (~b39 & b31);\r\n      s[46] = b46 ^ (~b48 & b40);\r\n      s[47] = b47 ^ (~b49 & b41);\r\n      s[8] = b8 ^ (~b0 & b2);\r\n      s[9] = b9 ^ (~b1 & b3);\r\n      s[18] = b18 ^ (~b10 & b12);\r\n      s[19] = b19 ^ (~b11 & b13);\r\n      s[28] = b28 ^ (~b20 & b22);\r\n      s[29] = b29 ^ (~b21 & b23);\r\n      s[38] = b38 ^ (~b30 & b32);\r\n      s[39] = b39 ^ (~b31 & b33);\r\n      s[48] = b48 ^ (~b40 & b42);\r\n      s[49] = b49 ^ (~b41 & b43);\r\n\r\n      s[0] ^= RC[n];\r\n      s[1] ^= RC[n + 1];\r\n    }\r\n  };\r\n\r\n  if (COMMON_JS) {\r\n    module.exports = methods;\r\n  } else {\r\n    for (var i = 0; i < methodNames.length; ++i) {\r\n      root[methodNames[i]] = methods[methodNames[i]];\r\n    }\r\n  }\r\n})();\r\n"]},"metadata":{},"sourceType":"script"}