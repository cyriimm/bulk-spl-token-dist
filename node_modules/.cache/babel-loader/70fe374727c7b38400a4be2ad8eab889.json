{"ast":null,"code":"/* eslint-disable no-continue */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable no-param-reassign */\n\n/* eslint-disable no-prototype-builtins */\nvar errorClasses = {};\nvar deserializers = {};\n\nvar addCustomErrorDeserializer = function (name, deserializer) {\n  deserializers[name] = deserializer;\n};\n\nvar createCustomErrorClass = function (name) {\n  var C = function CustomError(message, fields) {\n    Object.assign(this, fields);\n    this.name = name;\n    this.message = message || name;\n    this.stack = new Error().stack;\n  };\n\n  C.prototype = new Error();\n  errorClasses[name] = C;\n  return C;\n}; // inspired from https://github.com/programble/errio/blob/master/index.js\n\n\nvar deserializeError = function (object) {\n  if (typeof object === \"object\" && object) {\n    try {\n      // $FlowFixMe FIXME HACK\n      var msg = JSON.parse(object.message);\n\n      if (msg.message && msg.name) {\n        object = msg;\n      }\n    } catch (e) {// nothing\n    }\n\n    var error = void 0;\n\n    if (typeof object.name === \"string\") {\n      var name_1 = object.name;\n      var des = deserializers[name_1];\n\n      if (des) {\n        error = des(object);\n      } else {\n        var constructor = name_1 === \"Error\" ? Error : errorClasses[name_1];\n\n        if (!constructor) {\n          console.warn(\"deserializing an unknown class '\" + name_1 + \"'\");\n          constructor = createCustomErrorClass(name_1);\n        }\n\n        error = Object.create(constructor.prototype);\n\n        try {\n          for (var prop in object) {\n            if (object.hasOwnProperty(prop)) {\n              error[prop] = object[prop];\n            }\n          }\n        } catch (e) {// sometimes setting a property can fail (e.g. .name)\n        }\n      }\n    } else {\n      error = new Error(object.message);\n    }\n\n    if (!error.stack && Error.captureStackTrace) {\n      Error.captureStackTrace(error, deserializeError);\n    }\n\n    return error;\n  }\n\n  return new Error(String(object));\n}; // inspired from https://github.com/sindresorhus/serialize-error/blob/master/index.js\n\n\nvar serializeError = function (value) {\n  if (!value) return value;\n\n  if (typeof value === \"object\") {\n    return destroyCircular(value, []);\n  }\n\n  if (typeof value === \"function\") {\n    return \"[Function: \" + (value.name || \"anonymous\") + \"]\";\n  }\n\n  return value;\n}; // https://www.npmjs.com/package/destroy-circular\n\n\nfunction destroyCircular(from, seen) {\n  var to = {};\n  seen.push(from);\n\n  for (var _i = 0, _a = Object.keys(from); _i < _a.length; _i++) {\n    var key = _a[_i];\n    var value = from[key];\n\n    if (typeof value === \"function\") {\n      continue;\n    }\n\n    if (!value || typeof value !== \"object\") {\n      to[key] = value;\n      continue;\n    }\n\n    if (seen.indexOf(from[key]) === -1) {\n      to[key] = destroyCircular(from[key], seen.slice(0));\n      continue;\n    }\n\n    to[key] = \"[Circular]\";\n  }\n\n  if (typeof from.name === \"string\") {\n    to.name = from.name;\n  }\n\n  if (typeof from.message === \"string\") {\n    to.message = from.message;\n  }\n\n  if (typeof from.stack === \"string\") {\n    to.stack = from.stack;\n  }\n\n  return to;\n}\n\nvar AccountNameRequiredError = createCustomErrorClass(\"AccountNameRequired\");\nvar AccountNotSupported = createCustomErrorClass(\"AccountNotSupported\");\nvar AmountRequired = createCustomErrorClass(\"AmountRequired\");\nvar BluetoothRequired = createCustomErrorClass(\"BluetoothRequired\");\nvar BtcUnmatchedApp = createCustomErrorClass(\"BtcUnmatchedApp\");\nvar CantOpenDevice = createCustomErrorClass(\"CantOpenDevice\");\nvar CashAddrNotSupported = createCustomErrorClass(\"CashAddrNotSupported\");\nvar CurrencyNotSupported = createCustomErrorClass(\"CurrencyNotSupported\");\nvar DeviceAppVerifyNotSupported = createCustomErrorClass(\"DeviceAppVerifyNotSupported\");\nvar DeviceGenuineSocketEarlyClose = createCustomErrorClass(\"DeviceGenuineSocketEarlyClose\");\nvar DeviceNotGenuineError = createCustomErrorClass(\"DeviceNotGenuine\");\nvar DeviceOnDashboardExpected = createCustomErrorClass(\"DeviceOnDashboardExpected\");\nvar DeviceOnDashboardUnexpected = createCustomErrorClass(\"DeviceOnDashboardUnexpected\");\nvar DeviceInOSUExpected = createCustomErrorClass(\"DeviceInOSUExpected\");\nvar DeviceHalted = createCustomErrorClass(\"DeviceHalted\");\nvar DeviceNameInvalid = createCustomErrorClass(\"DeviceNameInvalid\");\nvar DeviceSocketFail = createCustomErrorClass(\"DeviceSocketFail\");\nvar DeviceSocketNoBulkStatus = createCustomErrorClass(\"DeviceSocketNoBulkStatus\");\nvar DisconnectedDevice = createCustomErrorClass(\"DisconnectedDevice\");\nvar DisconnectedDeviceDuringOperation = createCustomErrorClass(\"DisconnectedDeviceDuringOperation\");\nvar EnpointConfigError = createCustomErrorClass(\"EnpointConfig\");\nvar EthAppPleaseEnableContractData = createCustomErrorClass(\"EthAppPleaseEnableContractData\");\nvar FeeEstimationFailed = createCustomErrorClass(\"FeeEstimationFailed\");\nvar FirmwareNotRecognized = createCustomErrorClass(\"FirmwareNotRecognized\");\nvar HardResetFail = createCustomErrorClass(\"HardResetFail\");\nvar InvalidXRPTag = createCustomErrorClass(\"InvalidXRPTag\");\nvar InvalidAddress = createCustomErrorClass(\"InvalidAddress\");\nvar InvalidAddressBecauseDestinationIsAlsoSource = createCustomErrorClass(\"InvalidAddressBecauseDestinationIsAlsoSource\");\nvar LatestMCUInstalledError = createCustomErrorClass(\"LatestMCUInstalledError\");\nvar UnknownMCU = createCustomErrorClass(\"UnknownMCU\");\nvar LedgerAPIError = createCustomErrorClass(\"LedgerAPIError\");\nvar LedgerAPIErrorWithMessage = createCustomErrorClass(\"LedgerAPIErrorWithMessage\");\nvar LedgerAPINotAvailable = createCustomErrorClass(\"LedgerAPINotAvailable\");\nvar ManagerAppAlreadyInstalledError = createCustomErrorClass(\"ManagerAppAlreadyInstalled\");\nvar ManagerAppRelyOnBTCError = createCustomErrorClass(\"ManagerAppRelyOnBTC\");\nvar ManagerAppDepInstallRequired = createCustomErrorClass(\"ManagerAppDepInstallRequired\");\nvar ManagerAppDepUninstallRequired = createCustomErrorClass(\"ManagerAppDepUninstallRequired\");\nvar ManagerDeviceLockedError = createCustomErrorClass(\"ManagerDeviceLocked\");\nvar ManagerFirmwareNotEnoughSpaceError = createCustomErrorClass(\"ManagerFirmwareNotEnoughSpace\");\nvar ManagerNotEnoughSpaceError = createCustomErrorClass(\"ManagerNotEnoughSpace\");\nvar ManagerUninstallBTCDep = createCustomErrorClass(\"ManagerUninstallBTCDep\");\nvar NetworkDown = createCustomErrorClass(\"NetworkDown\");\nvar NoAddressesFound = createCustomErrorClass(\"NoAddressesFound\");\nvar NotEnoughBalance = createCustomErrorClass(\"NotEnoughBalance\");\nvar NotEnoughBalanceToDelegate = createCustomErrorClass(\"NotEnoughBalanceToDelegate\");\nvar NotEnoughBalanceInParentAccount = createCustomErrorClass(\"NotEnoughBalanceInParentAccount\");\nvar NotEnoughSpendableBalance = createCustomErrorClass(\"NotEnoughSpendableBalance\");\nvar NotEnoughBalanceBecauseDestinationNotCreated = createCustomErrorClass(\"NotEnoughBalanceBecauseDestinationNotCreated\");\nvar NoAccessToCamera = createCustomErrorClass(\"NoAccessToCamera\");\nvar NotEnoughGas = createCustomErrorClass(\"NotEnoughGas\");\nvar NotSupportedLegacyAddress = createCustomErrorClass(\"NotSupportedLegacyAddress\");\nvar GasLessThanEstimate = createCustomErrorClass(\"GasLessThanEstimate\");\nvar PasswordsDontMatchError = createCustomErrorClass(\"PasswordsDontMatch\");\nvar PasswordIncorrectError = createCustomErrorClass(\"PasswordIncorrect\");\nvar RecommendSubAccountsToEmpty = createCustomErrorClass(\"RecommendSubAccountsToEmpty\");\nvar RecommendUndelegation = createCustomErrorClass(\"RecommendUndelegation\");\nvar TimeoutTagged = createCustomErrorClass(\"TimeoutTagged\");\nvar UnexpectedBootloader = createCustomErrorClass(\"UnexpectedBootloader\");\nvar MCUNotGenuineToDashboard = createCustomErrorClass(\"MCUNotGenuineToDashboard\");\nvar RecipientRequired = createCustomErrorClass(\"RecipientRequired\");\nvar UnavailableTezosOriginatedAccountReceive = createCustomErrorClass(\"UnavailableTezosOriginatedAccountReceive\");\nvar UnavailableTezosOriginatedAccountSend = createCustomErrorClass(\"UnavailableTezosOriginatedAccountSend\");\nvar UpdateFetchFileFail = createCustomErrorClass(\"UpdateFetchFileFail\");\nvar UpdateIncorrectHash = createCustomErrorClass(\"UpdateIncorrectHash\");\nvar UpdateIncorrectSig = createCustomErrorClass(\"UpdateIncorrectSig\");\nvar UpdateYourApp = createCustomErrorClass(\"UpdateYourApp\");\nvar UserRefusedDeviceNameChange = createCustomErrorClass(\"UserRefusedDeviceNameChange\");\nvar UserRefusedAddress = createCustomErrorClass(\"UserRefusedAddress\");\nvar UserRefusedFirmwareUpdate = createCustomErrorClass(\"UserRefusedFirmwareUpdate\");\nvar UserRefusedAllowManager = createCustomErrorClass(\"UserRefusedAllowManager\");\nvar UserRefusedOnDevice = createCustomErrorClass(\"UserRefusedOnDevice\"); // TODO rename because it's just for transaction refusal\n\nvar TransportOpenUserCancelled = createCustomErrorClass(\"TransportOpenUserCancelled\");\nvar TransportInterfaceNotAvailable = createCustomErrorClass(\"TransportInterfaceNotAvailable\");\nvar TransportRaceCondition = createCustomErrorClass(\"TransportRaceCondition\");\nvar TransportWebUSBGestureRequired = createCustomErrorClass(\"TransportWebUSBGestureRequired\");\nvar DeviceShouldStayInApp = createCustomErrorClass(\"DeviceShouldStayInApp\");\nvar WebsocketConnectionError = createCustomErrorClass(\"WebsocketConnectionError\");\nvar WebsocketConnectionFailed = createCustomErrorClass(\"WebsocketConnectionFailed\");\nvar WrongDeviceForAccount = createCustomErrorClass(\"WrongDeviceForAccount\");\nvar WrongAppForCurrency = createCustomErrorClass(\"WrongAppForCurrency\");\nvar ETHAddressNonEIP = createCustomErrorClass(\"ETHAddressNonEIP\");\nvar CantScanQRCode = createCustomErrorClass(\"CantScanQRCode\");\nvar FeeNotLoaded = createCustomErrorClass(\"FeeNotLoaded\");\nvar FeeRequired = createCustomErrorClass(\"FeeRequired\");\nvar FeeTooHigh = createCustomErrorClass(\"FeeTooHigh\");\nvar SyncError = createCustomErrorClass(\"SyncError\");\nvar PairingFailed = createCustomErrorClass(\"PairingFailed\");\nvar GenuineCheckFailed = createCustomErrorClass(\"GenuineCheckFailed\");\nvar LedgerAPI4xx = createCustomErrorClass(\"LedgerAPI4xx\");\nvar LedgerAPI5xx = createCustomErrorClass(\"LedgerAPI5xx\");\nvar FirmwareOrAppUpdateRequired = createCustomErrorClass(\"FirmwareOrAppUpdateRequired\"); // db stuff, no need to translate\n\nvar NoDBPathGiven = createCustomErrorClass(\"NoDBPathGiven\");\nvar DBWrongPassword = createCustomErrorClass(\"DBWrongPassword\");\nvar DBNotReset = createCustomErrorClass(\"DBNotReset\");\n/**\r\n * TransportError is used for any generic transport errors.\r\n * e.g. Error thrown when data received by exchanges are incorrect or if exchanged failed to communicate with the device for various reason.\r\n */\n\nfunction TransportError(message, id) {\n  this.name = \"TransportError\";\n  this.message = message;\n  this.stack = new Error().stack;\n  this.id = id;\n}\n\nTransportError.prototype = new Error();\naddCustomErrorDeserializer(\"TransportError\", function (e) {\n  return new TransportError(e.message, e.id);\n});\nvar StatusCodes = {\n  PIN_REMAINING_ATTEMPTS: 0x63c0,\n  INCORRECT_LENGTH: 0x6700,\n  MISSING_CRITICAL_PARAMETER: 0x6800,\n  COMMAND_INCOMPATIBLE_FILE_STRUCTURE: 0x6981,\n  SECURITY_STATUS_NOT_SATISFIED: 0x6982,\n  CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\n  INCORRECT_DATA: 0x6a80,\n  NOT_ENOUGH_MEMORY_SPACE: 0x6a84,\n  REFERENCED_DATA_NOT_FOUND: 0x6a88,\n  FILE_ALREADY_EXISTS: 0x6a89,\n  INCORRECT_P1_P2: 0x6b00,\n  INS_NOT_SUPPORTED: 0x6d00,\n  CLA_NOT_SUPPORTED: 0x6e00,\n  TECHNICAL_PROBLEM: 0x6f00,\n  OK: 0x9000,\n  MEMORY_PROBLEM: 0x9240,\n  NO_EF_SELECTED: 0x9400,\n  INVALID_OFFSET: 0x9402,\n  FILE_NOT_FOUND: 0x9404,\n  INCONSISTENT_FILE: 0x9408,\n  ALGORITHM_NOT_SUPPORTED: 0x9484,\n  INVALID_KCV: 0x9485,\n  CODE_NOT_INITIALIZED: 0x9802,\n  ACCESS_CONDITION_NOT_FULFILLED: 0x9804,\n  CONTRADICTION_SECRET_CODE_STATUS: 0x9808,\n  CONTRADICTION_INVALIDATION: 0x9810,\n  CODE_BLOCKED: 0x9840,\n  MAX_VALUE_REACHED: 0x9850,\n  GP_AUTH_FAILED: 0x6300,\n  LICENSING: 0x6f42,\n  HALTED: 0x6faa\n};\n\nfunction getAltStatusMessage(code) {\n  switch (code) {\n    // improve text of most common errors\n    case 0x6700:\n      return \"Incorrect length\";\n\n    case 0x6800:\n      return \"Missing critical parameter\";\n\n    case 0x6982:\n      return \"Security not satisfied (dongle locked or have invalid access rights)\";\n\n    case 0x6985:\n      return \"Condition of use not satisfied (denied by the user?)\";\n\n    case 0x6a80:\n      return \"Invalid data received\";\n\n    case 0x6b00:\n      return \"Invalid parameter received\";\n  }\n\n  if (0x6f00 <= code && code <= 0x6fff) {\n    return \"Internal error, please report\";\n  }\n}\n/**\r\n * Error thrown when a device returned a non success status.\r\n * the error.statusCode is one of the `StatusCodes` exported by this library.\r\n */\n\n\nfunction TransportStatusError(statusCode) {\n  this.name = \"TransportStatusError\";\n  var statusText = Object.keys(StatusCodes).find(function (k) {\n    return StatusCodes[k] === statusCode;\n  }) || \"UNKNOWN_ERROR\";\n  var smsg = getAltStatusMessage(statusCode) || statusText;\n  var statusCodeStr = statusCode.toString(16);\n  this.message = \"Ledger device: \" + smsg + \" (0x\" + statusCodeStr + \")\";\n  this.stack = new Error().stack;\n  this.statusCode = statusCode;\n  this.statusText = statusText;\n}\n\nTransportStatusError.prototype = new Error();\naddCustomErrorDeserializer(\"TransportStatusError\", function (e) {\n  return new TransportStatusError(e.statusCode);\n});\nexport { AccountNameRequiredError, AccountNotSupported, AmountRequired, BluetoothRequired, BtcUnmatchedApp, CantOpenDevice, CantScanQRCode, CashAddrNotSupported, CurrencyNotSupported, DBNotReset, DBWrongPassword, DeviceAppVerifyNotSupported, DeviceGenuineSocketEarlyClose, DeviceHalted, DeviceInOSUExpected, DeviceNameInvalid, DeviceNotGenuineError, DeviceOnDashboardExpected, DeviceOnDashboardUnexpected, DeviceShouldStayInApp, DeviceSocketFail, DeviceSocketNoBulkStatus, DisconnectedDevice, DisconnectedDeviceDuringOperation, ETHAddressNonEIP, EnpointConfigError, EthAppPleaseEnableContractData, FeeEstimationFailed, FeeNotLoaded, FeeRequired, FeeTooHigh, FirmwareNotRecognized, FirmwareOrAppUpdateRequired, GasLessThanEstimate, GenuineCheckFailed, HardResetFail, InvalidAddress, InvalidAddressBecauseDestinationIsAlsoSource, InvalidXRPTag, LatestMCUInstalledError, LedgerAPI4xx, LedgerAPI5xx, LedgerAPIError, LedgerAPIErrorWithMessage, LedgerAPINotAvailable, MCUNotGenuineToDashboard, ManagerAppAlreadyInstalledError, ManagerAppDepInstallRequired, ManagerAppDepUninstallRequired, ManagerAppRelyOnBTCError, ManagerDeviceLockedError, ManagerFirmwareNotEnoughSpaceError, ManagerNotEnoughSpaceError, ManagerUninstallBTCDep, NetworkDown, NoAccessToCamera, NoAddressesFound, NoDBPathGiven, NotEnoughBalance, NotEnoughBalanceBecauseDestinationNotCreated, NotEnoughBalanceInParentAccount, NotEnoughBalanceToDelegate, NotEnoughGas, NotEnoughSpendableBalance, NotSupportedLegacyAddress, PairingFailed, PasswordIncorrectError, PasswordsDontMatchError, RecipientRequired, RecommendSubAccountsToEmpty, RecommendUndelegation, StatusCodes, SyncError, TimeoutTagged, TransportError, TransportInterfaceNotAvailable, TransportOpenUserCancelled, TransportRaceCondition, TransportStatusError, TransportWebUSBGestureRequired, UnavailableTezosOriginatedAccountReceive, UnavailableTezosOriginatedAccountSend, UnexpectedBootloader, UnknownMCU, UpdateFetchFileFail, UpdateIncorrectHash, UpdateIncorrectSig, UpdateYourApp, UserRefusedAddress, UserRefusedAllowManager, UserRefusedDeviceNameChange, UserRefusedFirmwareUpdate, UserRefusedOnDevice, WebsocketConnectionError, WebsocketConnectionFailed, WrongAppForCurrency, WrongDeviceForAccount, addCustomErrorDeserializer, createCustomErrorClass, deserializeError, getAltStatusMessage, serializeError };","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/node_modules/@ledgerhq/errors/dist/index.js"],"names":["errorClasses","deserializers","addCustomErrorDeserializer","name","deserializer","createCustomErrorClass","C","CustomError","message","fields","Object","assign","stack","Error","prototype","deserializeError","object","msg","JSON","parse","e","error","name_1","des","constructor","console","warn","create","prop","hasOwnProperty","captureStackTrace","String","serializeError","value","destroyCircular","from","seen","to","push","_i","_a","keys","length","key","indexOf","slice","AccountNameRequiredError","AccountNotSupported","AmountRequired","BluetoothRequired","BtcUnmatchedApp","CantOpenDevice","CashAddrNotSupported","CurrencyNotSupported","DeviceAppVerifyNotSupported","DeviceGenuineSocketEarlyClose","DeviceNotGenuineError","DeviceOnDashboardExpected","DeviceOnDashboardUnexpected","DeviceInOSUExpected","DeviceHalted","DeviceNameInvalid","DeviceSocketFail","DeviceSocketNoBulkStatus","DisconnectedDevice","DisconnectedDeviceDuringOperation","EnpointConfigError","EthAppPleaseEnableContractData","FeeEstimationFailed","FirmwareNotRecognized","HardResetFail","InvalidXRPTag","InvalidAddress","InvalidAddressBecauseDestinationIsAlsoSource","LatestMCUInstalledError","UnknownMCU","LedgerAPIError","LedgerAPIErrorWithMessage","LedgerAPINotAvailable","ManagerAppAlreadyInstalledError","ManagerAppRelyOnBTCError","ManagerAppDepInstallRequired","ManagerAppDepUninstallRequired","ManagerDeviceLockedError","ManagerFirmwareNotEnoughSpaceError","ManagerNotEnoughSpaceError","ManagerUninstallBTCDep","NetworkDown","NoAddressesFound","NotEnoughBalance","NotEnoughBalanceToDelegate","NotEnoughBalanceInParentAccount","NotEnoughSpendableBalance","NotEnoughBalanceBecauseDestinationNotCreated","NoAccessToCamera","NotEnoughGas","NotSupportedLegacyAddress","GasLessThanEstimate","PasswordsDontMatchError","PasswordIncorrectError","RecommendSubAccountsToEmpty","RecommendUndelegation","TimeoutTagged","UnexpectedBootloader","MCUNotGenuineToDashboard","RecipientRequired","UnavailableTezosOriginatedAccountReceive","UnavailableTezosOriginatedAccountSend","UpdateFetchFileFail","UpdateIncorrectHash","UpdateIncorrectSig","UpdateYourApp","UserRefusedDeviceNameChange","UserRefusedAddress","UserRefusedFirmwareUpdate","UserRefusedAllowManager","UserRefusedOnDevice","TransportOpenUserCancelled","TransportInterfaceNotAvailable","TransportRaceCondition","TransportWebUSBGestureRequired","DeviceShouldStayInApp","WebsocketConnectionError","WebsocketConnectionFailed","WrongDeviceForAccount","WrongAppForCurrency","ETHAddressNonEIP","CantScanQRCode","FeeNotLoaded","FeeRequired","FeeTooHigh","SyncError","PairingFailed","GenuineCheckFailed","LedgerAPI4xx","LedgerAPI5xx","FirmwareOrAppUpdateRequired","NoDBPathGiven","DBWrongPassword","DBNotReset","TransportError","id","StatusCodes","PIN_REMAINING_ATTEMPTS","INCORRECT_LENGTH","MISSING_CRITICAL_PARAMETER","COMMAND_INCOMPATIBLE_FILE_STRUCTURE","SECURITY_STATUS_NOT_SATISFIED","CONDITIONS_OF_USE_NOT_SATISFIED","INCORRECT_DATA","NOT_ENOUGH_MEMORY_SPACE","REFERENCED_DATA_NOT_FOUND","FILE_ALREADY_EXISTS","INCORRECT_P1_P2","INS_NOT_SUPPORTED","CLA_NOT_SUPPORTED","TECHNICAL_PROBLEM","OK","MEMORY_PROBLEM","NO_EF_SELECTED","INVALID_OFFSET","FILE_NOT_FOUND","INCONSISTENT_FILE","ALGORITHM_NOT_SUPPORTED","INVALID_KCV","CODE_NOT_INITIALIZED","ACCESS_CONDITION_NOT_FULFILLED","CONTRADICTION_SECRET_CODE_STATUS","CONTRADICTION_INVALIDATION","CODE_BLOCKED","MAX_VALUE_REACHED","GP_AUTH_FAILED","LICENSING","HALTED","getAltStatusMessage","code","TransportStatusError","statusCode","statusText","find","k","smsg","statusCodeStr","toString"],"mappings":"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","sourcesContent":["/* eslint-disable no-continue */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-prototype-builtins */\r\nvar errorClasses = {};\r\nvar deserializers = {};\r\nvar addCustomErrorDeserializer = function (name, deserializer) {\r\n    deserializers[name] = deserializer;\r\n};\r\nvar createCustomErrorClass = function (name) {\r\n    var C = function CustomError(message, fields) {\r\n        Object.assign(this, fields);\r\n        this.name = name;\r\n        this.message = message || name;\r\n        this.stack = new Error().stack;\r\n    };\r\n    C.prototype = new Error();\r\n    errorClasses[name] = C;\r\n    return C;\r\n};\r\n// inspired from https://github.com/programble/errio/blob/master/index.js\r\nvar deserializeError = function (object) {\r\n    if (typeof object === \"object\" && object) {\r\n        try {\r\n            // $FlowFixMe FIXME HACK\r\n            var msg = JSON.parse(object.message);\r\n            if (msg.message && msg.name) {\r\n                object = msg;\r\n            }\r\n        }\r\n        catch (e) {\r\n            // nothing\r\n        }\r\n        var error = void 0;\r\n        if (typeof object.name === \"string\") {\r\n            var name_1 = object.name;\r\n            var des = deserializers[name_1];\r\n            if (des) {\r\n                error = des(object);\r\n            }\r\n            else {\r\n                var constructor = name_1 === \"Error\" ? Error : errorClasses[name_1];\r\n                if (!constructor) {\r\n                    console.warn(\"deserializing an unknown class '\" + name_1 + \"'\");\r\n                    constructor = createCustomErrorClass(name_1);\r\n                }\r\n                error = Object.create(constructor.prototype);\r\n                try {\r\n                    for (var prop in object) {\r\n                        if (object.hasOwnProperty(prop)) {\r\n                            error[prop] = object[prop];\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // sometimes setting a property can fail (e.g. .name)\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            error = new Error(object.message);\r\n        }\r\n        if (!error.stack && Error.captureStackTrace) {\r\n            Error.captureStackTrace(error, deserializeError);\r\n        }\r\n        return error;\r\n    }\r\n    return new Error(String(object));\r\n};\r\n// inspired from https://github.com/sindresorhus/serialize-error/blob/master/index.js\r\nvar serializeError = function (value) {\r\n    if (!value)\r\n        return value;\r\n    if (typeof value === \"object\") {\r\n        return destroyCircular(value, []);\r\n    }\r\n    if (typeof value === \"function\") {\r\n        return \"[Function: \" + (value.name || \"anonymous\") + \"]\";\r\n    }\r\n    return value;\r\n};\r\n// https://www.npmjs.com/package/destroy-circular\r\nfunction destroyCircular(from, seen) {\r\n    var to = {};\r\n    seen.push(from);\r\n    for (var _i = 0, _a = Object.keys(from); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        var value = from[key];\r\n        if (typeof value === \"function\") {\r\n            continue;\r\n        }\r\n        if (!value || typeof value !== \"object\") {\r\n            to[key] = value;\r\n            continue;\r\n        }\r\n        if (seen.indexOf(from[key]) === -1) {\r\n            to[key] = destroyCircular(from[key], seen.slice(0));\r\n            continue;\r\n        }\r\n        to[key] = \"[Circular]\";\r\n    }\r\n    if (typeof from.name === \"string\") {\r\n        to.name = from.name;\r\n    }\r\n    if (typeof from.message === \"string\") {\r\n        to.message = from.message;\r\n    }\r\n    if (typeof from.stack === \"string\") {\r\n        to.stack = from.stack;\r\n    }\r\n    return to;\r\n}\n\nvar AccountNameRequiredError = createCustomErrorClass(\"AccountNameRequired\");\r\nvar AccountNotSupported = createCustomErrorClass(\"AccountNotSupported\");\r\nvar AmountRequired = createCustomErrorClass(\"AmountRequired\");\r\nvar BluetoothRequired = createCustomErrorClass(\"BluetoothRequired\");\r\nvar BtcUnmatchedApp = createCustomErrorClass(\"BtcUnmatchedApp\");\r\nvar CantOpenDevice = createCustomErrorClass(\"CantOpenDevice\");\r\nvar CashAddrNotSupported = createCustomErrorClass(\"CashAddrNotSupported\");\r\nvar CurrencyNotSupported = createCustomErrorClass(\"CurrencyNotSupported\");\r\nvar DeviceAppVerifyNotSupported = createCustomErrorClass(\"DeviceAppVerifyNotSupported\");\r\nvar DeviceGenuineSocketEarlyClose = createCustomErrorClass(\"DeviceGenuineSocketEarlyClose\");\r\nvar DeviceNotGenuineError = createCustomErrorClass(\"DeviceNotGenuine\");\r\nvar DeviceOnDashboardExpected = createCustomErrorClass(\"DeviceOnDashboardExpected\");\r\nvar DeviceOnDashboardUnexpected = createCustomErrorClass(\"DeviceOnDashboardUnexpected\");\r\nvar DeviceInOSUExpected = createCustomErrorClass(\"DeviceInOSUExpected\");\r\nvar DeviceHalted = createCustomErrorClass(\"DeviceHalted\");\r\nvar DeviceNameInvalid = createCustomErrorClass(\"DeviceNameInvalid\");\r\nvar DeviceSocketFail = createCustomErrorClass(\"DeviceSocketFail\");\r\nvar DeviceSocketNoBulkStatus = createCustomErrorClass(\"DeviceSocketNoBulkStatus\");\r\nvar DisconnectedDevice = createCustomErrorClass(\"DisconnectedDevice\");\r\nvar DisconnectedDeviceDuringOperation = createCustomErrorClass(\"DisconnectedDeviceDuringOperation\");\r\nvar EnpointConfigError = createCustomErrorClass(\"EnpointConfig\");\r\nvar EthAppPleaseEnableContractData = createCustomErrorClass(\"EthAppPleaseEnableContractData\");\r\nvar FeeEstimationFailed = createCustomErrorClass(\"FeeEstimationFailed\");\r\nvar FirmwareNotRecognized = createCustomErrorClass(\"FirmwareNotRecognized\");\r\nvar HardResetFail = createCustomErrorClass(\"HardResetFail\");\r\nvar InvalidXRPTag = createCustomErrorClass(\"InvalidXRPTag\");\r\nvar InvalidAddress = createCustomErrorClass(\"InvalidAddress\");\r\nvar InvalidAddressBecauseDestinationIsAlsoSource = createCustomErrorClass(\"InvalidAddressBecauseDestinationIsAlsoSource\");\r\nvar LatestMCUInstalledError = createCustomErrorClass(\"LatestMCUInstalledError\");\r\nvar UnknownMCU = createCustomErrorClass(\"UnknownMCU\");\r\nvar LedgerAPIError = createCustomErrorClass(\"LedgerAPIError\");\r\nvar LedgerAPIErrorWithMessage = createCustomErrorClass(\"LedgerAPIErrorWithMessage\");\r\nvar LedgerAPINotAvailable = createCustomErrorClass(\"LedgerAPINotAvailable\");\r\nvar ManagerAppAlreadyInstalledError = createCustomErrorClass(\"ManagerAppAlreadyInstalled\");\r\nvar ManagerAppRelyOnBTCError = createCustomErrorClass(\"ManagerAppRelyOnBTC\");\r\nvar ManagerAppDepInstallRequired = createCustomErrorClass(\"ManagerAppDepInstallRequired\");\r\nvar ManagerAppDepUninstallRequired = createCustomErrorClass(\"ManagerAppDepUninstallRequired\");\r\nvar ManagerDeviceLockedError = createCustomErrorClass(\"ManagerDeviceLocked\");\r\nvar ManagerFirmwareNotEnoughSpaceError = createCustomErrorClass(\"ManagerFirmwareNotEnoughSpace\");\r\nvar ManagerNotEnoughSpaceError = createCustomErrorClass(\"ManagerNotEnoughSpace\");\r\nvar ManagerUninstallBTCDep = createCustomErrorClass(\"ManagerUninstallBTCDep\");\r\nvar NetworkDown = createCustomErrorClass(\"NetworkDown\");\r\nvar NoAddressesFound = createCustomErrorClass(\"NoAddressesFound\");\r\nvar NotEnoughBalance = createCustomErrorClass(\"NotEnoughBalance\");\r\nvar NotEnoughBalanceToDelegate = createCustomErrorClass(\"NotEnoughBalanceToDelegate\");\r\nvar NotEnoughBalanceInParentAccount = createCustomErrorClass(\"NotEnoughBalanceInParentAccount\");\r\nvar NotEnoughSpendableBalance = createCustomErrorClass(\"NotEnoughSpendableBalance\");\r\nvar NotEnoughBalanceBecauseDestinationNotCreated = createCustomErrorClass(\"NotEnoughBalanceBecauseDestinationNotCreated\");\r\nvar NoAccessToCamera = createCustomErrorClass(\"NoAccessToCamera\");\r\nvar NotEnoughGas = createCustomErrorClass(\"NotEnoughGas\");\r\nvar NotSupportedLegacyAddress = createCustomErrorClass(\"NotSupportedLegacyAddress\");\r\nvar GasLessThanEstimate = createCustomErrorClass(\"GasLessThanEstimate\");\r\nvar PasswordsDontMatchError = createCustomErrorClass(\"PasswordsDontMatch\");\r\nvar PasswordIncorrectError = createCustomErrorClass(\"PasswordIncorrect\");\r\nvar RecommendSubAccountsToEmpty = createCustomErrorClass(\"RecommendSubAccountsToEmpty\");\r\nvar RecommendUndelegation = createCustomErrorClass(\"RecommendUndelegation\");\r\nvar TimeoutTagged = createCustomErrorClass(\"TimeoutTagged\");\r\nvar UnexpectedBootloader = createCustomErrorClass(\"UnexpectedBootloader\");\r\nvar MCUNotGenuineToDashboard = createCustomErrorClass(\"MCUNotGenuineToDashboard\");\r\nvar RecipientRequired = createCustomErrorClass(\"RecipientRequired\");\r\nvar UnavailableTezosOriginatedAccountReceive = createCustomErrorClass(\"UnavailableTezosOriginatedAccountReceive\");\r\nvar UnavailableTezosOriginatedAccountSend = createCustomErrorClass(\"UnavailableTezosOriginatedAccountSend\");\r\nvar UpdateFetchFileFail = createCustomErrorClass(\"UpdateFetchFileFail\");\r\nvar UpdateIncorrectHash = createCustomErrorClass(\"UpdateIncorrectHash\");\r\nvar UpdateIncorrectSig = createCustomErrorClass(\"UpdateIncorrectSig\");\r\nvar UpdateYourApp = createCustomErrorClass(\"UpdateYourApp\");\r\nvar UserRefusedDeviceNameChange = createCustomErrorClass(\"UserRefusedDeviceNameChange\");\r\nvar UserRefusedAddress = createCustomErrorClass(\"UserRefusedAddress\");\r\nvar UserRefusedFirmwareUpdate = createCustomErrorClass(\"UserRefusedFirmwareUpdate\");\r\nvar UserRefusedAllowManager = createCustomErrorClass(\"UserRefusedAllowManager\");\r\nvar UserRefusedOnDevice = createCustomErrorClass(\"UserRefusedOnDevice\"); // TODO rename because it's just for transaction refusal\r\nvar TransportOpenUserCancelled = createCustomErrorClass(\"TransportOpenUserCancelled\");\r\nvar TransportInterfaceNotAvailable = createCustomErrorClass(\"TransportInterfaceNotAvailable\");\r\nvar TransportRaceCondition = createCustomErrorClass(\"TransportRaceCondition\");\r\nvar TransportWebUSBGestureRequired = createCustomErrorClass(\"TransportWebUSBGestureRequired\");\r\nvar DeviceShouldStayInApp = createCustomErrorClass(\"DeviceShouldStayInApp\");\r\nvar WebsocketConnectionError = createCustomErrorClass(\"WebsocketConnectionError\");\r\nvar WebsocketConnectionFailed = createCustomErrorClass(\"WebsocketConnectionFailed\");\r\nvar WrongDeviceForAccount = createCustomErrorClass(\"WrongDeviceForAccount\");\r\nvar WrongAppForCurrency = createCustomErrorClass(\"WrongAppForCurrency\");\r\nvar ETHAddressNonEIP = createCustomErrorClass(\"ETHAddressNonEIP\");\r\nvar CantScanQRCode = createCustomErrorClass(\"CantScanQRCode\");\r\nvar FeeNotLoaded = createCustomErrorClass(\"FeeNotLoaded\");\r\nvar FeeRequired = createCustomErrorClass(\"FeeRequired\");\r\nvar FeeTooHigh = createCustomErrorClass(\"FeeTooHigh\");\r\nvar SyncError = createCustomErrorClass(\"SyncError\");\r\nvar PairingFailed = createCustomErrorClass(\"PairingFailed\");\r\nvar GenuineCheckFailed = createCustomErrorClass(\"GenuineCheckFailed\");\r\nvar LedgerAPI4xx = createCustomErrorClass(\"LedgerAPI4xx\");\r\nvar LedgerAPI5xx = createCustomErrorClass(\"LedgerAPI5xx\");\r\nvar FirmwareOrAppUpdateRequired = createCustomErrorClass(\"FirmwareOrAppUpdateRequired\");\r\n// db stuff, no need to translate\r\nvar NoDBPathGiven = createCustomErrorClass(\"NoDBPathGiven\");\r\nvar DBWrongPassword = createCustomErrorClass(\"DBWrongPassword\");\r\nvar DBNotReset = createCustomErrorClass(\"DBNotReset\");\r\n/**\r\n * TransportError is used for any generic transport errors.\r\n * e.g. Error thrown when data received by exchanges are incorrect or if exchanged failed to communicate with the device for various reason.\r\n */\r\nfunction TransportError(message, id) {\r\n    this.name = \"TransportError\";\r\n    this.message = message;\r\n    this.stack = new Error().stack;\r\n    this.id = id;\r\n}\r\nTransportError.prototype = new Error();\r\naddCustomErrorDeserializer(\"TransportError\", function (e) { return new TransportError(e.message, e.id); });\r\nvar StatusCodes = {\r\n    PIN_REMAINING_ATTEMPTS: 0x63c0,\r\n    INCORRECT_LENGTH: 0x6700,\r\n    MISSING_CRITICAL_PARAMETER: 0x6800,\r\n    COMMAND_INCOMPATIBLE_FILE_STRUCTURE: 0x6981,\r\n    SECURITY_STATUS_NOT_SATISFIED: 0x6982,\r\n    CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\r\n    INCORRECT_DATA: 0x6a80,\r\n    NOT_ENOUGH_MEMORY_SPACE: 0x6a84,\r\n    REFERENCED_DATA_NOT_FOUND: 0x6a88,\r\n    FILE_ALREADY_EXISTS: 0x6a89,\r\n    INCORRECT_P1_P2: 0x6b00,\r\n    INS_NOT_SUPPORTED: 0x6d00,\r\n    CLA_NOT_SUPPORTED: 0x6e00,\r\n    TECHNICAL_PROBLEM: 0x6f00,\r\n    OK: 0x9000,\r\n    MEMORY_PROBLEM: 0x9240,\r\n    NO_EF_SELECTED: 0x9400,\r\n    INVALID_OFFSET: 0x9402,\r\n    FILE_NOT_FOUND: 0x9404,\r\n    INCONSISTENT_FILE: 0x9408,\r\n    ALGORITHM_NOT_SUPPORTED: 0x9484,\r\n    INVALID_KCV: 0x9485,\r\n    CODE_NOT_INITIALIZED: 0x9802,\r\n    ACCESS_CONDITION_NOT_FULFILLED: 0x9804,\r\n    CONTRADICTION_SECRET_CODE_STATUS: 0x9808,\r\n    CONTRADICTION_INVALIDATION: 0x9810,\r\n    CODE_BLOCKED: 0x9840,\r\n    MAX_VALUE_REACHED: 0x9850,\r\n    GP_AUTH_FAILED: 0x6300,\r\n    LICENSING: 0x6f42,\r\n    HALTED: 0x6faa,\r\n};\r\nfunction getAltStatusMessage(code) {\r\n    switch (code) {\r\n        // improve text of most common errors\r\n        case 0x6700:\r\n            return \"Incorrect length\";\r\n        case 0x6800:\r\n            return \"Missing critical parameter\";\r\n        case 0x6982:\r\n            return \"Security not satisfied (dongle locked or have invalid access rights)\";\r\n        case 0x6985:\r\n            return \"Condition of use not satisfied (denied by the user?)\";\r\n        case 0x6a80:\r\n            return \"Invalid data received\";\r\n        case 0x6b00:\r\n            return \"Invalid parameter received\";\r\n    }\r\n    if (0x6f00 <= code && code <= 0x6fff) {\r\n        return \"Internal error, please report\";\r\n    }\r\n}\r\n/**\r\n * Error thrown when a device returned a non success status.\r\n * the error.statusCode is one of the `StatusCodes` exported by this library.\r\n */\r\nfunction TransportStatusError(statusCode) {\r\n    this.name = \"TransportStatusError\";\r\n    var statusText = Object.keys(StatusCodes).find(function (k) { return StatusCodes[k] === statusCode; }) ||\r\n        \"UNKNOWN_ERROR\";\r\n    var smsg = getAltStatusMessage(statusCode) || statusText;\r\n    var statusCodeStr = statusCode.toString(16);\r\n    this.message = \"Ledger device: \" + smsg + \" (0x\" + statusCodeStr + \")\";\r\n    this.stack = new Error().stack;\r\n    this.statusCode = statusCode;\r\n    this.statusText = statusText;\r\n}\r\nTransportStatusError.prototype = new Error();\r\naddCustomErrorDeserializer(\"TransportStatusError\", function (e) { return new TransportStatusError(e.statusCode); });\n\nexport { AccountNameRequiredError, AccountNotSupported, AmountRequired, BluetoothRequired, BtcUnmatchedApp, CantOpenDevice, CantScanQRCode, CashAddrNotSupported, CurrencyNotSupported, DBNotReset, DBWrongPassword, DeviceAppVerifyNotSupported, DeviceGenuineSocketEarlyClose, DeviceHalted, DeviceInOSUExpected, DeviceNameInvalid, DeviceNotGenuineError, DeviceOnDashboardExpected, DeviceOnDashboardUnexpected, DeviceShouldStayInApp, DeviceSocketFail, DeviceSocketNoBulkStatus, DisconnectedDevice, DisconnectedDeviceDuringOperation, ETHAddressNonEIP, EnpointConfigError, EthAppPleaseEnableContractData, FeeEstimationFailed, FeeNotLoaded, FeeRequired, FeeTooHigh, FirmwareNotRecognized, FirmwareOrAppUpdateRequired, GasLessThanEstimate, GenuineCheckFailed, HardResetFail, InvalidAddress, InvalidAddressBecauseDestinationIsAlsoSource, InvalidXRPTag, LatestMCUInstalledError, LedgerAPI4xx, LedgerAPI5xx, LedgerAPIError, LedgerAPIErrorWithMessage, LedgerAPINotAvailable, MCUNotGenuineToDashboard, ManagerAppAlreadyInstalledError, ManagerAppDepInstallRequired, ManagerAppDepUninstallRequired, ManagerAppRelyOnBTCError, ManagerDeviceLockedError, ManagerFirmwareNotEnoughSpaceError, ManagerNotEnoughSpaceError, ManagerUninstallBTCDep, NetworkDown, NoAccessToCamera, NoAddressesFound, NoDBPathGiven, NotEnoughBalance, NotEnoughBalanceBecauseDestinationNotCreated, NotEnoughBalanceInParentAccount, NotEnoughBalanceToDelegate, NotEnoughGas, NotEnoughSpendableBalance, NotSupportedLegacyAddress, PairingFailed, PasswordIncorrectError, PasswordsDontMatchError, RecipientRequired, RecommendSubAccountsToEmpty, RecommendUndelegation, StatusCodes, SyncError, TimeoutTagged, TransportError, TransportInterfaceNotAvailable, TransportOpenUserCancelled, TransportRaceCondition, TransportStatusError, TransportWebUSBGestureRequired, UnavailableTezosOriginatedAccountReceive, UnavailableTezosOriginatedAccountSend, UnexpectedBootloader, UnknownMCU, UpdateFetchFileFail, UpdateIncorrectHash, UpdateIncorrectSig, UpdateYourApp, UserRefusedAddress, UserRefusedAllowManager, UserRefusedDeviceNameChange, UserRefusedFirmwareUpdate, UserRefusedOnDevice, WebsocketConnectionError, WebsocketConnectionFailed, WrongAppForCurrency, WrongDeviceForAccount, addCustomErrorDeserializer, createCustomErrorClass, deserializeError, getAltStatusMessage, serializeError };\n"]},"metadata":{},"sourceType":"module"}