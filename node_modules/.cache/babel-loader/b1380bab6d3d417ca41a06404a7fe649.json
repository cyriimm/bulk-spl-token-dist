{"ast":null,"code":"var _jsxFileName = \"/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/src/components/AddHarwareWalletDialog.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Card from '@material-ui/core/Card';\nimport DialogForm from './DialogForm';\nimport { LedgerWalletProvider } from '../utils/walletProvider/ledger';\nimport { AccountsSelector, DerivationPathMenuItem, toDerivationPath } from '../pages/LoginPage.js';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useSnackbar } from 'notistack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddHardwareView = {\n  Splash: 0,\n  Accounts: 1,\n  Confirm: 2\n};\nexport default function AddHardwareWalletDialog({\n  open,\n  onAdd,\n  onClose\n}) {\n  _s();\n\n  const [view, setView] = useState(AddHardwareView.Splash);\n  const [hardwareAccount, setHardwareAccount] = useState(null);\n  return /*#__PURE__*/_jsxDEV(DialogForm, {\n    onClose: onClose,\n    open: open,\n    onEnter: () => {},\n    fullWidth: true,\n    children: view === AddHardwareView.Splash ? /*#__PURE__*/_jsxDEV(AddHardwareWalletSplash, {\n      onClose: onClose,\n      onContinue: () => setView(AddHardwareView.Accounts)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : view === AddHardwareView.Accounts ? /*#__PURE__*/_jsxDEV(LedgerAccounts, {\n      onContinue: account => {\n        setHardwareAccount(account);\n        setView(AddHardwareView.Confirm);\n      },\n      open: open,\n      onClose: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ConfirmHardwareWallet, {\n      account: hardwareAccount,\n      onDone: () => {\n        onAdd(hardwareAccount);\n        onClose();\n        setView(AddHardwareView.Splash);\n      },\n      onBack: () => {\n        setView(AddHardwareView.Accounts);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddHardwareWalletDialog, \"wekoBP+JdE+1PX/y3VkfuZRrpAA=\");\n\n_c = AddHardwareWalletDialog;\n\nfunction ConfirmHardwareWallet({\n  account,\n  onDone,\n  onBack\n}) {\n  _s2();\n\n  const [didConfirm, setDidConfirm] = useState(false);\n  useEffect(() => {\n    if (!didConfirm) {\n      account.provider.confirmPublicKey().then(() => setDidConfirm(true)).catch(err => {\n        console.error('Error confirming', err);\n        onBack();\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Confirm your wallet address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      style: {\n        paddingTop: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          fontWeight: \"fontWeightBold\",\n          children: \"Check your ledger and confirm the address displayed is the address chosen. Then click \\\"done\\\".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: account.publicKey.toString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: onBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: onDone,\n        disabled: !didConfirm,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(ConfirmHardwareWallet, \"CVpfrdQ1DPMuSnjCpJftb2pLypA=\");\n\n_c2 = ConfirmHardwareWallet;\n\nfunction AddHardwareWalletSplash({\n  onContinue,\n  onClose\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Add hardware wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      style: {\n        paddingTop: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Connect your ledger and open the Solana application. When you are ready, click \\\"continue\\\".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: onClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: onContinue,\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c3 = AddHardwareWalletSplash;\n\nfunction LedgerAccounts({\n  onContinue,\n  onClose,\n  open\n}) {\n  _s3();\n\n  const [dPathMenuItem, setDPathMenuItem] = useState(DerivationPathMenuItem.Bip44Root);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [accounts, setAccounts] = useState(null);\n\n  const onClick = provider => {\n    onContinue({\n      provider,\n      publicKey: provider.pubKey,\n      derivationPath: provider.derivationPath,\n      account: provider.account,\n      change: provider.change\n    });\n  };\n\n  useEffect(() => {\n    if (open) {\n      const fetch = async () => {\n        let accounts = [];\n\n        if (dPathMenuItem === DerivationPathMenuItem.Bip44Root) {\n          let provider = new LedgerWalletProvider({\n            derivationPath: toDerivationPath(dPathMenuItem)\n          });\n          accounts.push(await provider.init());\n        } else {\n          setAccounts(null); // Loading in parallel makes the ledger upset. So do it serially.\n\n          for (let k = 0; k < 10; k += 1) {\n            let provider = new LedgerWalletProvider({\n              derivationPath: toDerivationPath(dPathMenuItem),\n              account: k\n            });\n            accounts.push(await provider.init());\n          }\n        }\n\n        setAccounts(accounts);\n      };\n\n      fetch().catch(err => {\n        console.log(`received error when attempting to connect ledger: ${err}`);\n\n        if (err && err.statusCode === 0x6804) {\n          enqueueSnackbar('Unlock ledger device', {\n            variant: 'error'\n          });\n        }\n\n        onClose();\n      });\n    }\n  }, [dPathMenuItem, enqueueSnackbar, open, onClose]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    elevation: 0,\n    children: accounts === null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '24px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        align: \"center\",\n        children: \"Loading accounts from your hardware wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n        style: {\n          display: 'block',\n          marginLeft: 'auto',\n          marginRight: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(AccountsSelector, {\n      showRoot: true,\n      onClick: onClick,\n      accounts: accounts,\n      setDPathMenuItem: setDPathMenuItem,\n      dPathMenuItem: dPathMenuItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(LedgerAccounts, \"ez9u4yMH6W5xiBAcj0Uyz3nIwV4=\", false, function () {\n  return [useSnackbar];\n});\n\n_c4 = LedgerAccounts;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"AddHardwareWalletDialog\");\n$RefreshReg$(_c2, \"ConfirmHardwareWallet\");\n$RefreshReg$(_c3, \"AddHardwareWalletSplash\");\n$RefreshReg$(_c4, \"LedgerAccounts\");","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/src/components/AddHarwareWalletDialog.js"],"names":["React","useEffect","useState","Typography","DialogActions","Button","DialogTitle","DialogContent","Card","DialogForm","LedgerWalletProvider","AccountsSelector","DerivationPathMenuItem","toDerivationPath","CircularProgress","useSnackbar","AddHardwareView","Splash","Accounts","Confirm","AddHardwareWalletDialog","open","onAdd","onClose","view","setView","hardwareAccount","setHardwareAccount","account","ConfirmHardwareWallet","onDone","onBack","didConfirm","setDidConfirm","provider","confirmPublicKey","then","catch","err","console","error","paddingTop","display","flexDirection","publicKey","toString","AddHardwareWalletSplash","onContinue","LedgerAccounts","dPathMenuItem","setDPathMenuItem","Bip44Root","enqueueSnackbar","accounts","setAccounts","onClick","pubKey","derivationPath","change","fetch","push","init","k","log","statusCode","variant","padding","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Card from '@material-ui/core/Card';\nimport DialogForm from './DialogForm';\nimport { LedgerWalletProvider } from '../utils/walletProvider/ledger';\nimport {\n  AccountsSelector,\n  DerivationPathMenuItem,\n  toDerivationPath,\n} from '../pages/LoginPage.js';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useSnackbar } from 'notistack';\n\nconst AddHardwareView = {\n  Splash: 0,\n  Accounts: 1,\n  Confirm: 2,\n};\n\nexport default function AddHardwareWalletDialog({ open, onAdd, onClose }) {\n  const [view, setView] = useState(AddHardwareView.Splash);\n  const [hardwareAccount, setHardwareAccount] = useState(null);\n  return (\n    <DialogForm onClose={onClose} open={open} onEnter={() => {}} fullWidth>\n      {view === AddHardwareView.Splash ? (\n        <AddHardwareWalletSplash\n          onClose={onClose}\n          onContinue={() => setView(AddHardwareView.Accounts)}\n        />\n      ) : view === AddHardwareView.Accounts ? (\n        <LedgerAccounts\n          onContinue={(account) => {\n            setHardwareAccount(account);\n            setView(AddHardwareView.Confirm);\n          }}\n          open={open}\n          onClose={onClose}\n        />\n      ) : (\n        <ConfirmHardwareWallet\n          account={hardwareAccount}\n          onDone={() => {\n            onAdd(hardwareAccount);\n            onClose();\n            setView(AddHardwareView.Splash);\n          }}\n          onBack={() => {\n            setView(AddHardwareView.Accounts);\n          }}\n        />\n      )}\n    </DialogForm>\n  );\n}\n\nfunction ConfirmHardwareWallet({ account, onDone, onBack }) {\n  const [didConfirm, setDidConfirm] = useState(false);\n  useEffect(() => {\n    if (!didConfirm) {\n      account.provider\n        .confirmPublicKey()\n        .then(() => setDidConfirm(true))\n        .catch((err) => {\n          console.error('Error confirming', err);\n          onBack();\n        });\n    }\n  });\n  return (\n    <>\n      <DialogTitle>Confirm your wallet address</DialogTitle>\n      <DialogContent style={{ paddingTop: 16 }}>\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\n          <Typography fontWeight=\"fontWeightBold\">\n            Check your ledger and confirm the address displayed is the address\n            chosen. Then click \"done\".\n          </Typography>\n          <Typography>{account.publicKey.toString()}</Typography>\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={onBack}>\n          Back\n        </Button>\n        <Button color=\"primary\" onClick={onDone} disabled={!didConfirm}>\n          Done\n        </Button>\n      </DialogActions>\n    </>\n  );\n}\n\nfunction AddHardwareWalletSplash({ onContinue, onClose }) {\n  return (\n    <>\n      <DialogTitle>Add hardware wallet</DialogTitle>\n      <DialogContent style={{ paddingTop: 16 }}>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <b>\n            Connect your ledger and open the Solana application. When you are\n            ready, click \"continue\".\n          </b>\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={onClose}>\n          Cancel\n        </Button>\n        <Button color=\"primary\" onClick={onContinue}>\n          Continue\n        </Button>\n      </DialogActions>\n    </>\n  );\n}\n\nfunction LedgerAccounts({ onContinue, onClose, open }) {\n  const [dPathMenuItem, setDPathMenuItem] = useState(\n    DerivationPathMenuItem.Bip44Root,\n  );\n  const { enqueueSnackbar } = useSnackbar();\n  const [accounts, setAccounts] = useState(null);\n  const onClick = (provider) => {\n    onContinue({\n      provider,\n      publicKey: provider.pubKey,\n      derivationPath: provider.derivationPath,\n      account: provider.account,\n      change: provider.change,\n    });\n  };\n  useEffect(() => {\n    if (open) {\n      const fetch = async () => {\n        let accounts = [];\n        if (dPathMenuItem === DerivationPathMenuItem.Bip44Root) {\n          let provider = new LedgerWalletProvider({\n            derivationPath: toDerivationPath(dPathMenuItem),\n          });\n          accounts.push(await provider.init());\n        } else {\n          setAccounts(null);\n          // Loading in parallel makes the ledger upset. So do it serially.\n          for (let k = 0; k < 10; k += 1) {\n            let provider = new LedgerWalletProvider({\n              derivationPath: toDerivationPath(dPathMenuItem),\n              account: k,\n            });\n            accounts.push(await provider.init());\n          }\n        }\n        setAccounts(accounts);\n      };\n      fetch().catch((err) => {\n        console.log(`received error when attempting to connect ledger: ${err}`);\n        if (err && err.statusCode === 0x6804) {\n          enqueueSnackbar('Unlock ledger device', { variant: 'error' });\n        }\n        onClose();\n      });\n    }\n  }, [dPathMenuItem, enqueueSnackbar, open, onClose]);\n  return (\n    <Card elevation={0}>\n      {accounts === null ? (\n        <div style={{ padding: '24px' }}>\n          <Typography align=\"center\">\n            Loading accounts from your hardware wallet\n          </Typography>\n          <CircularProgress\n            style={{\n              display: 'block',\n              marginLeft: 'auto',\n              marginRight: 'auto',\n            }}\n          />\n        </div>\n      ) : (\n        <AccountsSelector\n          showRoot={true}\n          onClick={onClick}\n          accounts={accounts}\n          setDPathMenuItem={setDPathMenuItem}\n          dPathMenuItem={dPathMenuItem}\n        />\n      )}\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}