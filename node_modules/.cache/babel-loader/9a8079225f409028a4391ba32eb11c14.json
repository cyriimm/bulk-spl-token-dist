{"ast":null,"code":"var Mode = require('./mode');\n\nvar Polynomial = require('./Polynomial');\n\nvar math = require('./math');\n\nvar QRMaskPattern = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7\n};\nvar QRUtil = {\n  PATTERN_POSITION_TABLE: [[], [6, 18], [6, 22], [6, 26], [6, 30], [6, 34], [6, 22, 38], [6, 24, 42], [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62], [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82], [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102], [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122], [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138], [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154], [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170]],\n  G15: 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0,\n  G18: 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0,\n  G15_MASK: 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1,\n  getBCHTypeInfo: function (data) {\n    var d = data << 10;\n\n    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n      d ^= QRUtil.G15 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15);\n    }\n\n    return (data << 10 | d) ^ QRUtil.G15_MASK;\n  },\n  getBCHTypeNumber: function (data) {\n    var d = data << 12;\n\n    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n      d ^= QRUtil.G18 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18);\n    }\n\n    return data << 12 | d;\n  },\n  getBCHDigit: function (data) {\n    var digit = 0;\n\n    while (data != 0) {\n      digit++;\n      data >>>= 1;\n    }\n\n    return digit;\n  },\n  getPatternPosition: function (typeNumber) {\n    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n  },\n  getMask: function (maskPattern, i, j) {\n    switch (maskPattern) {\n      case QRMaskPattern.PATTERN000:\n        return (i + j) % 2 == 0;\n\n      case QRMaskPattern.PATTERN001:\n        return i % 2 == 0;\n\n      case QRMaskPattern.PATTERN010:\n        return j % 3 == 0;\n\n      case QRMaskPattern.PATTERN011:\n        return (i + j) % 3 == 0;\n\n      case QRMaskPattern.PATTERN100:\n        return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\n\n      case QRMaskPattern.PATTERN101:\n        return i * j % 2 + i * j % 3 == 0;\n\n      case QRMaskPattern.PATTERN110:\n        return (i * j % 2 + i * j % 3) % 2 == 0;\n\n      case QRMaskPattern.PATTERN111:\n        return (i * j % 3 + (i + j) % 2) % 2 == 0;\n\n      default:\n        throw new Error(\"bad maskPattern:\" + maskPattern);\n    }\n  },\n  getErrorCorrectPolynomial: function (errorCorrectLength) {\n    var a = new Polynomial([1], 0);\n\n    for (var i = 0; i < errorCorrectLength; i++) {\n      a = a.multiply(new Polynomial([1, math.gexp(i)], 0));\n    }\n\n    return a;\n  },\n  getLengthInBits: function (mode, type) {\n    if (1 <= type && type < 10) {\n      // 1 - 9\n      switch (mode) {\n        case Mode.MODE_NUMBER:\n          return 10;\n\n        case Mode.MODE_ALPHA_NUM:\n          return 9;\n\n        case Mode.MODE_8BIT_BYTE:\n          return 8;\n\n        case Mode.MODE_KANJI:\n          return 8;\n\n        default:\n          throw new Error(\"mode:\" + mode);\n      }\n    } else if (type < 27) {\n      // 10 - 26\n      switch (mode) {\n        case Mode.MODE_NUMBER:\n          return 12;\n\n        case Mode.MODE_ALPHA_NUM:\n          return 11;\n\n        case Mode.MODE_8BIT_BYTE:\n          return 16;\n\n        case Mode.MODE_KANJI:\n          return 10;\n\n        default:\n          throw new Error(\"mode:\" + mode);\n      }\n    } else if (type < 41) {\n      // 27 - 40\n      switch (mode) {\n        case Mode.MODE_NUMBER:\n          return 14;\n\n        case Mode.MODE_ALPHA_NUM:\n          return 13;\n\n        case Mode.MODE_8BIT_BYTE:\n          return 16;\n\n        case Mode.MODE_KANJI:\n          return 12;\n\n        default:\n          throw new Error(\"mode:\" + mode);\n      }\n    } else {\n      throw new Error(\"type:\" + type);\n    }\n  },\n  getLostPoint: function (qrCode) {\n    var moduleCount = qrCode.getModuleCount();\n    var lostPoint = 0; // LEVEL1\n\n    for (var row = 0; row < moduleCount; row++) {\n      for (var col = 0; col < moduleCount; col++) {\n        var sameCount = 0;\n        var dark = qrCode.isDark(row, col);\n\n        for (var r = -1; r <= 1; r++) {\n          if (row + r < 0 || moduleCount <= row + r) {\n            continue;\n          }\n\n          for (var c = -1; c <= 1; c++) {\n            if (col + c < 0 || moduleCount <= col + c) {\n              continue;\n            }\n\n            if (r == 0 && c == 0) {\n              continue;\n            }\n\n            if (dark == qrCode.isDark(row + r, col + c)) {\n              sameCount++;\n            }\n          }\n        }\n\n        if (sameCount > 5) {\n          lostPoint += 3 + sameCount - 5;\n        }\n      }\n    } // LEVEL2\n\n\n    for (var row = 0; row < moduleCount - 1; row++) {\n      for (var col = 0; col < moduleCount - 1; col++) {\n        var count = 0;\n        if (qrCode.isDark(row, col)) count++;\n        if (qrCode.isDark(row + 1, col)) count++;\n        if (qrCode.isDark(row, col + 1)) count++;\n        if (qrCode.isDark(row + 1, col + 1)) count++;\n\n        if (count == 0 || count == 4) {\n          lostPoint += 3;\n        }\n      }\n    } // LEVEL3\n\n\n    for (var row = 0; row < moduleCount; row++) {\n      for (var col = 0; col < moduleCount - 6; col++) {\n        if (qrCode.isDark(row, col) && !qrCode.isDark(row, col + 1) && qrCode.isDark(row, col + 2) && qrCode.isDark(row, col + 3) && qrCode.isDark(row, col + 4) && !qrCode.isDark(row, col + 5) && qrCode.isDark(row, col + 6)) {\n          lostPoint += 40;\n        }\n      }\n    }\n\n    for (var col = 0; col < moduleCount; col++) {\n      for (var row = 0; row < moduleCount - 6; row++) {\n        if (qrCode.isDark(row, col) && !qrCode.isDark(row + 1, col) && qrCode.isDark(row + 2, col) && qrCode.isDark(row + 3, col) && qrCode.isDark(row + 4, col) && !qrCode.isDark(row + 5, col) && qrCode.isDark(row + 6, col)) {\n          lostPoint += 40;\n        }\n      }\n    } // LEVEL4\n\n\n    var darkCount = 0;\n\n    for (var col = 0; col < moduleCount; col++) {\n      for (var row = 0; row < moduleCount; row++) {\n        if (qrCode.isDark(row, col)) {\n          darkCount++;\n        }\n      }\n    }\n\n    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n    lostPoint += ratio * 10;\n    return lostPoint;\n  }\n};\nmodule.exports = QRUtil;","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/node_modules/qr.js/lib/util.js"],"names":["Mode","require","Polynomial","math","QRMaskPattern","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","QRUtil","PATTERN_POSITION_TABLE","G15","G18","G15_MASK","getBCHTypeInfo","data","d","getBCHDigit","getBCHTypeNumber","digit","getPatternPosition","typeNumber","getMask","maskPattern","i","j","Math","floor","Error","getErrorCorrectPolynomial","errorCorrectLength","a","multiply","gexp","getLengthInBits","mode","type","MODE_NUMBER","MODE_ALPHA_NUM","MODE_8BIT_BYTE","MODE_KANJI","getLostPoint","qrCode","moduleCount","getModuleCount","lostPoint","row","col","sameCount","dark","isDark","r","c","count","darkCount","ratio","abs","module","exports"],"mappings":"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","sourcesContent":["var Mode = require('./mode');\nvar Polynomial = require('./Polynomial');\nvar math = require('./math');\n\nvar QRMaskPattern = {\n\tPATTERN000 : 0,\n\tPATTERN001 : 1,\n\tPATTERN010 : 2,\n\tPATTERN011 : 3,\n\tPATTERN100 : 4,\n\tPATTERN101 : 5,\n\tPATTERN110 : 6,\n\tPATTERN111 : 7\n};\n\nvar QRUtil = {\n\n    PATTERN_POSITION_TABLE : [\n\t    [],\n\t    [6, 18],\n\t    [6, 22],\n\t    [6, 26],\n\t    [6, 30],\n\t    [6, 34],\n\t    [6, 22, 38],\n\t    [6, 24, 42],\n\t    [6, 26, 46],\n\t    [6, 28, 50],\n\t    [6, 30, 54],\t\t\n\t    [6, 32, 58],\n\t    [6, 34, 62],\n\t    [6, 26, 46, 66],\n\t    [6, 26, 48, 70],\n\t    [6, 26, 50, 74],\n\t    [6, 30, 54, 78],\n\t    [6, 30, 56, 82],\n\t    [6, 30, 58, 86],\n\t    [6, 34, 62, 90],\n\t    [6, 28, 50, 72, 94],\n\t    [6, 26, 50, 74, 98],\n\t    [6, 30, 54, 78, 102],\n\t    [6, 28, 54, 80, 106],\n\t    [6, 32, 58, 84, 110],\n\t    [6, 30, 58, 86, 114],\n\t    [6, 34, 62, 90, 118],\n\t    [6, 26, 50, 74, 98, 122],\n\t    [6, 30, 54, 78, 102, 126],\n\t    [6, 26, 52, 78, 104, 130],\n\t    [6, 30, 56, 82, 108, 134],\n\t    [6, 34, 60, 86, 112, 138],\n\t    [6, 30, 58, 86, 114, 142],\n\t    [6, 34, 62, 90, 118, 146],\n\t    [6, 30, 54, 78, 102, 126, 150],\n\t    [6, 24, 50, 76, 102, 128, 154],\n\t    [6, 28, 54, 80, 106, 132, 158],\n\t    [6, 32, 58, 84, 110, 136, 162],\n\t    [6, 26, 54, 82, 110, 138, 166],\n\t    [6, 30, 58, 86, 114, 142, 170]\n    ],\n\n    G15 : (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\n    G18 : (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\n    G15_MASK : (1 << 14) | (1 << 12) | (1 << 10)\t| (1 << 4) | (1 << 1),\n\n    getBCHTypeInfo : function(data) {\n\t    var d = data << 10;\n\t    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n\t\t    d ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) ) ); \t\n\t    }\n\t    return ( (data << 10) | d) ^ QRUtil.G15_MASK;\n    },\n\n    getBCHTypeNumber : function(data) {\n\t    var d = data << 12;\n\t    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n\t\t    d ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) ) ); \t\n\t    }\n\t    return (data << 12) | d;\n    },\n\n    getBCHDigit : function(data) {\n\n\t    var digit = 0;\n\n\t    while (data != 0) {\n\t\t    digit++;\n\t\t    data >>>= 1;\n\t    }\n\n\t    return digit;\n    },\n\n    getPatternPosition : function(typeNumber) {\n\t    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n    },\n\n    getMask : function(maskPattern, i, j) {\n\t    \n\t    switch (maskPattern) {\n\t\t    \n\t    case QRMaskPattern.PATTERN000 : return (i + j) % 2 == 0;\n\t    case QRMaskPattern.PATTERN001 : return i % 2 == 0;\n\t    case QRMaskPattern.PATTERN010 : return j % 3 == 0;\n\t    case QRMaskPattern.PATTERN011 : return (i + j) % 3 == 0;\n\t    case QRMaskPattern.PATTERN100 : return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0;\n\t    case QRMaskPattern.PATTERN101 : return (i * j) % 2 + (i * j) % 3 == 0;\n\t    case QRMaskPattern.PATTERN110 : return ( (i * j) % 2 + (i * j) % 3) % 2 == 0;\n\t    case QRMaskPattern.PATTERN111 : return ( (i * j) % 3 + (i + j) % 2) % 2 == 0;\n\n\t    default :\n\t\t    throw new Error(\"bad maskPattern:\" + maskPattern);\n\t    }\n    },\n\n    getErrorCorrectPolynomial : function(errorCorrectLength) {\n\n\t    var a = new Polynomial([1], 0);\n\n\t    for (var i = 0; i < errorCorrectLength; i++) {\n\t\t    a = a.multiply(new Polynomial([1, math.gexp(i)], 0) );\n\t    }\n\n\t    return a;\n    },\n\n    getLengthInBits : function(mode, type) {\n\n\t    if (1 <= type && type < 10) {\n\n\t\t    // 1 - 9\n\n\t\t    switch(mode) {\n\t\t    case Mode.MODE_NUMBER \t: return 10;\n\t\t    case Mode.MODE_ALPHA_NUM \t: return 9;\n\t\t    case Mode.MODE_8BIT_BYTE\t: return 8;\n\t\t    case Mode.MODE_KANJI  \t: return 8;\n\t\t    default :\n\t\t\t    throw new Error(\"mode:\" + mode);\n\t\t    }\n\n\t    } else if (type < 27) {\n\n\t\t    // 10 - 26\n\n\t\t    switch(mode) {\n\t\t    case Mode.MODE_NUMBER \t: return 12;\n\t\t    case Mode.MODE_ALPHA_NUM \t: return 11;\n\t\t    case Mode.MODE_8BIT_BYTE\t: return 16;\n\t\t    case Mode.MODE_KANJI  \t: return 10;\n\t\t    default :\n\t\t\t    throw new Error(\"mode:\" + mode);\n\t\t    }\n\n\t    } else if (type < 41) {\n\n\t\t    // 27 - 40\n\n\t\t    switch(mode) {\n\t\t    case Mode.MODE_NUMBER \t: return 14;\n\t\t    case Mode.MODE_ALPHA_NUM\t: return 13;\n\t\t    case Mode.MODE_8BIT_BYTE\t: return 16;\n\t\t    case Mode.MODE_KANJI  \t: return 12;\n\t\t    default :\n\t\t\t    throw new Error(\"mode:\" + mode);\n\t\t    }\n\n\t    } else {\n\t\t    throw new Error(\"type:\" + type);\n\t    }\n    },\n\n    getLostPoint : function(qrCode) {\n\t    \n\t    var moduleCount = qrCode.getModuleCount();\n\t    \n\t    var lostPoint = 0;\n\t    \n\t    // LEVEL1\n\t    \n\t    for (var row = 0; row < moduleCount; row++) {\n\n\t\t    for (var col = 0; col < moduleCount; col++) {\n\n\t\t\t    var sameCount = 0;\n\t\t\t    var dark = qrCode.isDark(row, col);\n\n\t\t\t\tfor (var r = -1; r <= 1; r++) {\n\n\t\t\t\t    if (row + r < 0 || moduleCount <= row + r) {\n\t\t\t\t\t    continue;\n\t\t\t\t    }\n\n\t\t\t\t    for (var c = -1; c <= 1; c++) {\n\n\t\t\t\t\t    if (col + c < 0 || moduleCount <= col + c) {\n\t\t\t\t\t\t    continue;\n\t\t\t\t\t    }\n\n\t\t\t\t\t    if (r == 0 && c == 0) {\n\t\t\t\t\t\t    continue;\n\t\t\t\t\t    }\n\n\t\t\t\t\t    if (dark == qrCode.isDark(row + r, col + c) ) {\n\t\t\t\t\t\t    sameCount++;\n\t\t\t\t\t    }\n\t\t\t\t    }\n\t\t\t    }\n\n\t\t\t    if (sameCount > 5) {\n\t\t\t\t    lostPoint += (3 + sameCount - 5);\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    // LEVEL2\n\n\t    for (var row = 0; row < moduleCount - 1; row++) {\n\t\t    for (var col = 0; col < moduleCount - 1; col++) {\n\t\t\t    var count = 0;\n\t\t\t    if (qrCode.isDark(row,     col    ) ) count++;\n\t\t\t    if (qrCode.isDark(row + 1, col    ) ) count++;\n\t\t\t    if (qrCode.isDark(row,     col + 1) ) count++;\n\t\t\t    if (qrCode.isDark(row + 1, col + 1) ) count++;\n\t\t\t    if (count == 0 || count == 4) {\n\t\t\t\t    lostPoint += 3;\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    // LEVEL3\n\n\t    for (var row = 0; row < moduleCount; row++) {\n\t\t    for (var col = 0; col < moduleCount - 6; col++) {\n\t\t\t    if (qrCode.isDark(row, col)\n\t\t\t\t\t    && !qrCode.isDark(row, col + 1)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 2)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 3)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 4)\n\t\t\t\t\t    && !qrCode.isDark(row, col + 5)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 6) ) {\n\t\t\t\t    lostPoint += 40;\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    for (var col = 0; col < moduleCount; col++) {\n\t\t    for (var row = 0; row < moduleCount - 6; row++) {\n\t\t\t    if (qrCode.isDark(row, col)\n\t\t\t\t\t    && !qrCode.isDark(row + 1, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 2, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 3, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 4, col)\n\t\t\t\t\t    && !qrCode.isDark(row + 5, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 6, col) ) {\n\t\t\t\t    lostPoint += 40;\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    // LEVEL4\n\t    \n\t    var darkCount = 0;\n\n\t    for (var col = 0; col < moduleCount; col++) {\n\t\t    for (var row = 0; row < moduleCount; row++) {\n\t\t\t    if (qrCode.isDark(row, col) ) {\n\t\t\t\t    darkCount++;\n\t\t\t    }\n\t\t    }\n\t    }\n\t    \n\t    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n\t    lostPoint += ratio * 10;\n\n\t    return lostPoint;\t\t\n    }\n};\n\nmodule.exports = QRUtil;\n"]},"metadata":{},"sourceType":"script"}