{"ast":null,"code":"class Queue {\n  constructor() {\n    this.promises = [];\n    this.running = false;\n\n    this.populatePromises = promise => {\n      this.promises.push(promise);\n    };\n\n    this.depopulatePromises = promsise => {\n      this.promises.shift();\n    };\n\n    this.run = async () => {\n      if (this.running === true) return;\n      if (this.promises.length === 0) return;\n\n      try {\n        this.running = true;\n        await this.promises[0]();\n        this.running.promises.shift();\n        this.running = false;\n      } catch (err) {\n        console.log(err);\n        this.promises.shift();\n        this.running = false;\n      }\n    };\n  }\n\n}\n\nexport default Queue;","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/src/utils/Queue.js"],"names":["Queue","promises","running","populatePromises","promise","push","depopulatePromises","promsise","shift","run","length","err","console","log"],"mappings":"AAAA,MAAMA,KAAN,CAAY;AAAA;AAAA,SACVC,QADU,GACC,EADD;AAAA,SAGVC,OAHU,GAGA,KAHA;;AAAA,SAKVC,gBALU,GAKUC,OAAD,IAAa;AAC9B,WAAKH,QAAL,CAAcI,IAAd,CAAmBD,OAAnB;AACD,KAPS;;AAAA,SASVE,kBATU,GASYC,QAAD,IAAc;AACjC,WAAKN,QAAL,CAAcO,KAAd;AACD,KAXS;;AAAA,SAaVC,GAbU,GAaJ,YAAY;AAChB,UAAI,KAAKP,OAAL,KAAiB,IAArB,EAA2B;AAC3B,UAAI,KAAKD,QAAL,CAAcS,MAAd,KAAyB,CAA7B,EAAgC;;AAEhC,UAAI;AACF,aAAKR,OAAL,GAAe,IAAf;AAEA,cAAM,KAAKD,QAAL,CAAc,CAAd,GAAN;AACA,aAAKC,OAAL,CAAaD,QAAb,CAAsBO,KAAtB;AACA,aAAKN,OAAL,GAAe,KAAf;AACD,OAND,CAME,OAAOS,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAAKV,QAAL,CAAcO,KAAd;AACA,aAAKN,OAAL,GAAe,KAAf;AACD;AACF,KA5BS;AAAA;;AAAA;;AA+BZ,eAAeF,KAAf","sourcesContent":["class Queue {\n  promises = [];\n\n  running = false;\n\n  populatePromises = (promise) => {\n    this.promises.push(promise);\n  };\n\n  depopulatePromises = (promsise) => {\n    this.promises.shift();\n  };\n\n  run = async () => {\n    if (this.running === true) return;\n    if (this.promises.length === 0) return;\n\n    try {\n      this.running = true;\n\n      await this.promises[0]();\n      this.running.promises.shift();\n      this.running = false;\n    } catch (err) {\n      console.log(err);\n      this.promises.shift();\n      this.running = false;\n    }\n  };\n}\n\nexport default Queue;\n"]},"metadata":{},"sourceType":"module"}