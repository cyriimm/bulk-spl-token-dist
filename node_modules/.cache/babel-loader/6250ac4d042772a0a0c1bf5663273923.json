{"ast":null,"code":"module.exports = urlSetQuery;\n\nfunction urlSetQuery(url, query) {\n  if (query) {\n    // remove optional leading symbols\n    query = query.trim().replace(/^(\\?|#|&)/, ''); // don't append empty query\n\n    query = query ? '?' + query : query;\n    var parts = url.split(/[\\?\\#]/);\n    var start = parts[0];\n\n    if (query && /\\:\\/\\/[^\\/]*$/.test(start)) {\n      // e.g. http://foo.com -> http://foo.com/\n      start = start + '/';\n    }\n\n    var match = url.match(/(\\#.*)$/);\n    url = start + query;\n\n    if (match) {\n      // add hash back in\n      url = url + match[0];\n    }\n  }\n\n  return url;\n}","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/node_modules/url-set-query/index.js"],"names":["module","exports","urlSetQuery","url","query","trim","replace","parts","split","start","test","match"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,WAAjB;;AACA,SAASA,WAAT,CAAsBC,GAAtB,EAA2BC,KAA3B,EAAkC;AAChC,MAAIA,KAAJ,EAAW;AACT;AACAA,IAAAA,KAAK,GAAGA,KAAK,CAACC,IAAN,GAAaC,OAAb,CAAqB,WAArB,EAAkC,EAAlC,CAAR,CAFS,CAIT;;AACAF,IAAAA,KAAK,GAAGA,KAAK,GAAI,MAAMA,KAAV,GAAmBA,KAAhC;AAEA,QAAIG,KAAK,GAAGJ,GAAG,CAACK,KAAJ,CAAU,QAAV,CAAZ;AACA,QAAIC,KAAK,GAAGF,KAAK,CAAC,CAAD,CAAjB;;AACA,QAAIH,KAAK,IAAI,gBAAgBM,IAAhB,CAAqBD,KAArB,CAAb,EAA0C;AACxC;AACAA,MAAAA,KAAK,GAAGA,KAAK,GAAG,GAAhB;AACD;;AACD,QAAIE,KAAK,GAAGR,GAAG,CAACQ,KAAJ,CAAU,SAAV,CAAZ;AACAR,IAAAA,GAAG,GAAGM,KAAK,GAAGL,KAAd;;AACA,QAAIO,KAAJ,EAAW;AAAE;AACXR,MAAAA,GAAG,GAAGA,GAAG,GAAGQ,KAAK,CAAC,CAAD,CAAjB;AACD;AACF;;AACD,SAAOR,GAAP;AACD","sourcesContent":["module.exports = urlSetQuery\nfunction urlSetQuery (url, query) {\n  if (query) {\n    // remove optional leading symbols\n    query = query.trim().replace(/^(\\?|#|&)/, '')\n\n    // don't append empty query\n    query = query ? ('?' + query) : query\n\n    var parts = url.split(/[\\?\\#]/)\n    var start = parts[0]\n    if (query && /\\:\\/\\/[^\\/]*$/.test(start)) {\n      // e.g. http://foo.com -> http://foo.com/\n      start = start + '/'\n    }\n    var match = url.match(/(\\#.*)$/)\n    url = start + query\n    if (match) { // add hash back in\n      url = url + match[0]\n    }\n  }\n  return url\n}\n"]},"metadata":{},"sourceType":"script"}