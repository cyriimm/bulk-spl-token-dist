{"ast":null,"code":"import * as BufferLayout from 'buffer-layout';\nimport { PublicKey } from '@solana/web3.js';\nexport const ACCOUNT_LAYOUT = BufferLayout.struct([BufferLayout.blob(32, 'mint'), BufferLayout.blob(32, 'owner'), BufferLayout.nu64('amount'), BufferLayout.blob(93)]);\nexport const MINT_LAYOUT = BufferLayout.struct([BufferLayout.blob(44), BufferLayout.u8('decimals'), BufferLayout.blob(37)]);\nexport function parseTokenAccountData(data) {\n  let {\n    mint,\n    owner,\n    amount\n  } = ACCOUNT_LAYOUT.decode(data);\n  return {\n    mint: new PublicKey(mint),\n    owner: new PublicKey(owner),\n    amount\n  };\n}\nexport function parseMintData(data) {\n  let {\n    decimals\n  } = MINT_LAYOUT.decode(data);\n  return {\n    decimals\n  };\n}\nexport function getOwnedAccountsFilters(publicKey) {\n  return [{\n    memcmp: {\n      offset: ACCOUNT_LAYOUT.offsetOf('owner'),\n      bytes: publicKey.toBase58()\n    }\n  }, {\n    dataSize: ACCOUNT_LAYOUT.span\n  }];\n}","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/src/utils/tokens/data.js"],"names":["BufferLayout","PublicKey","ACCOUNT_LAYOUT","struct","blob","nu64","MINT_LAYOUT","u8","parseTokenAccountData","data","mint","owner","amount","decode","parseMintData","decimals","getOwnedAccountsFilters","publicKey","memcmp","offset","offsetOf","bytes","toBase58","dataSize","span"],"mappings":"AAAA,OAAO,KAAKA,YAAZ,MAA8B,eAA9B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,OAAO,MAAMC,cAAc,GAAGF,YAAY,CAACG,MAAb,CAAoB,CAChDH,YAAY,CAACI,IAAb,CAAkB,EAAlB,EAAsB,MAAtB,CADgD,EAEhDJ,YAAY,CAACI,IAAb,CAAkB,EAAlB,EAAsB,OAAtB,CAFgD,EAGhDJ,YAAY,CAACK,IAAb,CAAkB,QAAlB,CAHgD,EAIhDL,YAAY,CAACI,IAAb,CAAkB,EAAlB,CAJgD,CAApB,CAAvB;AAOP,OAAO,MAAME,WAAW,GAAGN,YAAY,CAACG,MAAb,CAAoB,CAC7CH,YAAY,CAACI,IAAb,CAAkB,EAAlB,CAD6C,EAE7CJ,YAAY,CAACO,EAAb,CAAgB,UAAhB,CAF6C,EAG7CP,YAAY,CAACI,IAAb,CAAkB,EAAlB,CAH6C,CAApB,CAApB;AAMP,OAAO,SAASI,qBAAT,CAA+BC,IAA/B,EAAqC;AAC1C,MAAI;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA0BV,cAAc,CAACW,MAAf,CAAsBJ,IAAtB,CAA9B;AACA,SAAO;AACLC,IAAAA,IAAI,EAAE,IAAIT,SAAJ,CAAcS,IAAd,CADD;AAELC,IAAAA,KAAK,EAAE,IAAIV,SAAJ,CAAcU,KAAd,CAFF;AAGLC,IAAAA;AAHK,GAAP;AAKD;AAED,OAAO,SAASE,aAAT,CAAuBL,IAAvB,EAA6B;AAClC,MAAI;AAAEM,IAAAA;AAAF,MAAeT,WAAW,CAACO,MAAZ,CAAmBJ,IAAnB,CAAnB;AACA,SAAO;AAAEM,IAAAA;AAAF,GAAP;AACD;AAED,OAAO,SAASC,uBAAT,CAAiCC,SAAjC,EAA4C;AACjD,SAAO,CACL;AACEC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAEjB,cAAc,CAACkB,QAAf,CAAwB,OAAxB,CADF;AAENC,MAAAA,KAAK,EAAEJ,SAAS,CAACK,QAAV;AAFD;AADV,GADK,EAOL;AACEC,IAAAA,QAAQ,EAAErB,cAAc,CAACsB;AAD3B,GAPK,CAAP;AAWD","sourcesContent":["import * as BufferLayout from 'buffer-layout';\nimport { PublicKey } from '@solana/web3.js';\n\nexport const ACCOUNT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(32, 'mint'),\n  BufferLayout.blob(32, 'owner'),\n  BufferLayout.nu64('amount'),\n  BufferLayout.blob(93),\n]);\n\nexport const MINT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(44),\n  BufferLayout.u8('decimals'),\n  BufferLayout.blob(37),\n]);\n\nexport function parseTokenAccountData(data) {\n  let { mint, owner, amount } = ACCOUNT_LAYOUT.decode(data);\n  return {\n    mint: new PublicKey(mint),\n    owner: new PublicKey(owner),\n    amount,\n  };\n}\n\nexport function parseMintData(data) {\n  let { decimals } = MINT_LAYOUT.decode(data);\n  return { decimals };\n}\n\nexport function getOwnedAccountsFilters(publicKey) {\n  return [\n    {\n      memcmp: {\n        offset: ACCOUNT_LAYOUT.offsetOf('owner'),\n        bytes: publicKey.toBase58(),\n      },\n    },\n    {\n      dataSize: ACCOUNT_LAYOUT.span,\n    },\n  ];\n}\n"]},"metadata":{},"sourceType":"module"}