{"ast":null,"code":"var sha3 = require('js-sha3').keccak_256;\n\nvar uts46 = require('idna-uts46-hx');\n\nfunction namehash(inputName) {\n  // Reject empty names:\n  var node = '';\n\n  for (var i = 0; i < 32; i++) {\n    node += '00';\n  }\n\n  name = normalize(inputName);\n\n  if (name) {\n    var labels = name.split('.');\n\n    for (var i = labels.length - 1; i >= 0; i--) {\n      var labelSha = sha3(labels[i]);\n      node = sha3(new Buffer(node + labelSha, 'hex'));\n    }\n  }\n\n  return '0x' + node;\n}\n\nfunction normalize(name) {\n  return name ? uts46.toUnicode(name, {\n    useStd3ASCII: true,\n    transitional: false\n  }) : name;\n}\n\nexports.hash = namehash;\nexports.normalize = normalize;","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/node_modules/eth-ens-namehash/index.js"],"names":["sha3","require","keccak_256","uts46","namehash","inputName","node","i","name","normalize","labels","split","length","labelSha","Buffer","toUnicode","useStd3ASCII","transitional","exports","hash"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBC,UAA9B;;AACA,IAAIC,KAAK,GAAGF,OAAO,CAAC,eAAD,CAAnB;;AAEA,SAASG,QAAT,CAAmBC,SAAnB,EAA8B;AAC5B;AACA,MAAIC,IAAI,GAAG,EAAX;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BD,IAAAA,IAAI,IAAI,IAAR;AACD;;AAEDE,EAAAA,IAAI,GAAGC,SAAS,CAACJ,SAAD,CAAhB;;AAEA,MAAIG,IAAJ,EAAU;AACR,QAAIE,MAAM,GAAGF,IAAI,CAACG,KAAL,CAAW,GAAX,CAAb;;AAEA,SAAI,IAAIJ,CAAC,GAAGG,MAAM,CAACE,MAAP,GAAgB,CAA5B,EAA+BL,CAAC,IAAI,CAApC,EAAuCA,CAAC,EAAxC,EAA4C;AAC1C,UAAIM,QAAQ,GAAGb,IAAI,CAACU,MAAM,CAACH,CAAD,CAAP,CAAnB;AACAD,MAAAA,IAAI,GAAGN,IAAI,CAAC,IAAIc,MAAJ,CAAWR,IAAI,GAAGO,QAAlB,EAA4B,KAA5B,CAAD,CAAX;AACD;AACF;;AAED,SAAO,OAAOP,IAAd;AACD;;AAED,SAASG,SAAT,CAAmBD,IAAnB,EAAyB;AACvB,SAAOA,IAAI,GAAGL,KAAK,CAACY,SAAN,CAAgBP,IAAhB,EAAsB;AAACQ,IAAAA,YAAY,EAAE,IAAf;AAAqBC,IAAAA,YAAY,EAAE;AAAnC,GAAtB,CAAH,GAAsET,IAAjF;AACD;;AAEDU,OAAO,CAACC,IAAR,GAAef,QAAf;AACAc,OAAO,CAACT,SAAR,GAAoBA,SAApB","sourcesContent":["var sha3 = require('js-sha3').keccak_256\nvar uts46 = require('idna-uts46-hx')\n\nfunction namehash (inputName) {\n  // Reject empty names:\n  var node = ''\n  for (var i = 0; i < 32; i++) {\n    node += '00'\n  }\n\n  name = normalize(inputName)\n\n  if (name) {\n    var labels = name.split('.')\n\n    for(var i = labels.length - 1; i >= 0; i--) {\n      var labelSha = sha3(labels[i])\n      node = sha3(new Buffer(node + labelSha, 'hex'))\n    }\n  }\n\n  return '0x' + node\n}\n\nfunction normalize(name) {\n  return name ? uts46.toUnicode(name, {useStd3ASCII: true, transitional: false}) : name\n}\n\nexports.hash = namehash\nexports.normalize = normalize\n"]},"metadata":{},"sourceType":"script"}