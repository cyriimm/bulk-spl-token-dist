{"ast":null,"code":"var _jsxFileName = \"/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/src/pages/LoginPage.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { generateMnemonicAndSeed, useHasLockedMnemonicAndSeed, loadMnemonicAndSeed, mnemonicToSeed, storeMnemonicAndSeed, normalizeMnemonic } from '../utils/wallet-seed';\nimport { getAccountFromSeed, DERIVATION_PATH } from '../utils/walletProvider/localStorage.js';\nimport Container from '@material-ui/core/Container';\nimport LoadingIndicator from '../components/LoadingIndicator';\nimport { BalanceListItem } from '../components/BalancesList.js';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { DialogActions, DialogContentText, DialogTitle, Typography } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useCallAsync } from '../utils/notifications';\nimport Link from '@material-ui/core/Link';\nimport { validateMnemonic } from 'bip39';\nimport DialogForm from '../components/DialogForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n\n  const [restore, setRestore] = useState(false);\n  const [hasLockedMnemonicAndSeed, loading] = useHasLockedMnemonicAndSeed();\n\n  if (loading) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: restore ? /*#__PURE__*/_jsxDEV(RestoreWalletForm, {\n      goBack: () => setRestore(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [hasLockedMnemonicAndSeed ? /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 39\n      }, this) : /*#__PURE__*/_jsxDEV(CreateWalletForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 55\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        style: {\n          cursor: 'pointer'\n        },\n        onClick: () => setRestore(true),\n        children: \"Restore existing wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginPage, \"HGipO9oHCkl7vPjQsLeggCgciZY=\", false, function () {\n  return [useHasLockedMnemonicAndSeed];\n});\n\n_c = LoginPage;\n\nfunction CreateWalletForm() {\n  _s2();\n\n  const [mnemonicAndSeed, setMnemonicAndSeed] = useState(null);\n  useEffect(() => {\n    generateMnemonicAndSeed().then(setMnemonicAndSeed);\n  }, []);\n  const [savedWords, setSavedWords] = useState(false);\n  const callAsync = useCallAsync();\n\n  function submit(password) {\n    const {\n      mnemonic,\n      seed\n    } = mnemonicAndSeed;\n    callAsync(storeMnemonicAndSeed(mnemonic, seed, password, DERIVATION_PATH.bip44Change), {\n      progressMessage: 'Creating wallet...',\n      successMessage: 'Wallet created'\n    });\n  }\n\n  if (!savedWords) {\n    return /*#__PURE__*/_jsxDEV(SeedWordsForm, {\n      mnemonicAndSeed: mnemonicAndSeed,\n      goForward: () => setSavedWords(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChoosePasswordForm, {\n    mnemonicAndSeed: mnemonicAndSeed,\n    goBack: () => setSavedWords(false),\n    onSubmit: submit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(CreateWalletForm, \"eeyICTZHxAUgIrx5QM1uOZZrGJk=\", false, function () {\n  return [useCallAsync];\n});\n\n_c2 = CreateWalletForm;\n\nfunction SeedWordsForm({\n  mnemonicAndSeed,\n  goForward\n}) {\n  _s3();\n\n  const [confirmed, setConfirmed] = useState(false);\n  const [showDialog, setShowDialog] = useState(false);\n  const [seedCheck, setSeedCheck] = useState('');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: \"Create New Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          paragraph: true,\n          children: \"Create a new wallet to hold Solana and SPL tokens.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Please write down the following twenty four words and keep them in a safe place:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), mnemonicAndSeed ? /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          fullWidth: true,\n          multiline: true,\n          margin: \"normal\",\n          value: mnemonicAndSeed.mnemonic,\n          label: \"Seed Words\",\n          onFocus: e => e.currentTarget.select()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          paragraph: true,\n          children: \"Your private keys are only stored on your current computer or device. You will need these words to restore your wallet if your browser's storage is cleared or your device is damaged or lost.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          paragraph: true,\n          children: [\"By default, sollet will use \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"m/44'/501'/0'/0'\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 41\n          }, this), \" as the derivation path for the main wallet. To use an alternative path, try restoring an existing wallet.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: confirmed,\n            disabled: !mnemonicAndSeed,\n            onChange: e => setConfirmed(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this),\n          label: \"I have saved these words in a safe place.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        style: {\n          justifyContent: 'flex-end'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          disabled: !confirmed,\n          onClick: () => setShowDialog(true),\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogForm, {\n      open: showDialog,\n      onClose: () => setShowDialog(false),\n      onSubmit: goForward,\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: 'Confirm Mnemonic'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContentText, {\n        style: {\n          margin: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: \"Please re-enter your seed phrase to confirm that you have saved it.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: `Please type your seed phrase to confirm`,\n          fullWidth: true,\n          variant: \"outlined\",\n          margin: \"normal\",\n          value: seedCheck,\n          onChange: e => setSeedCheck(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setShowDialog(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"secondary\",\n          disabled: normalizeMnemonic(seedCheck) !== (mnemonicAndSeed === null || mnemonicAndSeed === void 0 ? void 0 : mnemonicAndSeed.mnemonic),\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s3(SeedWordsForm, \"hbw2gVqz9lq7jtB6SRZZ6n8Tsz0=\");\n\n_c3 = SeedWordsForm;\n\nfunction ChoosePasswordForm({\n  goBack,\n  onSubmit\n}) {\n  _s4();\n\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Choose a Password (Optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Optionally pick a password to protect your wallet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"New Password\",\n        type: \"password\",\n        autoComplete: \"new-password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"Confirm Password\",\n        type: \"password\",\n        autoComplete: \"new-password\",\n        value: passwordConfirm,\n        onChange: e => setPasswordConfirm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"If you forget your password you will need to restore your wallet using your seed words.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      style: {\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: goBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        disabled: password !== passwordConfirm,\n        onClick: () => onSubmit(password),\n        children: \"Create Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n}\n\n_s4(ChoosePasswordForm, \"pP5WYezrfJaGa4zS6WkOpddu2Uo=\");\n\n_c4 = ChoosePasswordForm;\n\nfunction LoginForm() {\n  _s5();\n\n  const [password, setPassword] = useState('');\n  const [stayLoggedIn, setStayLoggedIn] = useState(false);\n  const callAsync = useCallAsync();\n\n  const submit = () => {\n    callAsync(loadMnemonicAndSeed(password, stayLoggedIn), {\n      progressMessage: 'Unlocking wallet...',\n      successMessage: 'Wallet unlocked'\n    });\n  };\n\n  const submitOnEnter = e => {\n    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n      e.preventDefault();\n      e.stopPropagation();\n      submit();\n    }\n  };\n\n  const setPasswordOnChange = e => setPassword(e.target.value);\n\n  const toggleStayLoggedIn = e => setStayLoggedIn(e.target.checked);\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Unlock Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"Password\",\n        type: \"password\",\n        autoComplete: \"current-password\",\n        value: password,\n        onChange: setPasswordOnChange,\n        onKeyDown: submitOnEnter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: stayLoggedIn,\n          onChange: toggleStayLoggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this),\n        label: \"Keep wallet unlocked\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      style: {\n        justifyContent: 'flex-end'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: submit,\n        children: \"Unlock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n}\n\n_s5(LoginForm, \"DFdInwMevkov808m37dRbDwe5Q8=\", false, function () {\n  return [useCallAsync];\n});\n\n_c5 = LoginForm;\n\nfunction RestoreWalletForm({\n  goBack\n}) {\n  _s6();\n\n  const [rawMnemonic, setRawMnemonic] = useState('');\n  const [seed, setSeed] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const [next, setNext] = useState(false);\n  const mnemonic = normalizeMnemonic(rawMnemonic);\n  const isNextBtnEnabled = password === passwordConfirm && validateMnemonic(mnemonic);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: next ? /*#__PURE__*/_jsxDEV(DerivedAccounts, {\n      goBack: () => setNext(false),\n      mnemonic: mnemonic,\n      password: password,\n      seed: seed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: \"Restore Existing Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Restore your wallet using your twelve or twenty-four seed words. Note that this will delete any existing wallet on this device.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          fontWeight: \"fontWeightBold\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Do not enter your hardware wallet seedphrase here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this), \" Hardware wallets can be optionally connected after a web wallet is created.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          fullWidth: true,\n          multiline: true,\n          rows: 3,\n          margin: \"normal\",\n          label: \"Seed Words\",\n          value: rawMnemonic,\n          onChange: e => setRawMnemonic(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          fullWidth: true,\n          margin: \"normal\",\n          label: \"New Password (Optional)\",\n          type: \"password\",\n          autoComplete: \"new-password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          fullWidth: true,\n          margin: \"normal\",\n          label: \"Confirm Password\",\n          type: \"password\",\n          autoComplete: \"new-password\",\n          value: passwordConfirm,\n          onChange: e => setPasswordConfirm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        style: {\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: goBack,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          disabled: !isNextBtnEnabled,\n          onClick: () => {\n            mnemonicToSeed(mnemonic).then(seed => {\n              setSeed(seed);\n              setNext(true);\n            });\n          },\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s6(RestoreWalletForm, \"x5BE/edOxyj+X6++tEITcxUGzK8=\");\n\n_c6 = RestoreWalletForm;\n\nfunction DerivedAccounts({\n  goBack,\n  mnemonic,\n  seed,\n  password\n}) {\n  _s7();\n\n  const callAsync = useCallAsync();\n  const [dPathMenuItem, setDPathMenuItem] = useState(DerivationPathMenuItem.Bip44Change);\n  const accounts = [...Array(10)].map((_, idx) => {\n    return getAccountFromSeed(Buffer.from(seed, 'hex'), idx, toDerivationPath(dPathMenuItem));\n  });\n\n  function submit() {\n    callAsync(storeMnemonicAndSeed(mnemonic, seed, password, toDerivationPath(dPathMenuItem)));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(AccountsSelector, {\n      showDeprecated: true,\n      accounts: accounts,\n      dPathMenuItem: dPathMenuItem,\n      setDPathMenuItem: setDPathMenuItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      style: {\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: goBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: submit,\n        children: \"Restore\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 420,\n    columnNumber: 5\n  }, this);\n}\n\n_s7(DerivedAccounts, \"ePxQIFtKX2KAnOjWqt/9W2RzeJc=\", false, function () {\n  return [useCallAsync];\n});\n\n_c7 = DerivedAccounts;\nexport function AccountsSelector({\n  showRoot,\n  showDeprecated,\n  accounts,\n  dPathMenuItem,\n  setDPathMenuItem,\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(CardContent, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Derivable Accounts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"outlined\",\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          value: dPathMenuItem,\n          onChange: e => {\n            setDPathMenuItem(e.target.value);\n          },\n          children: [showRoot && /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: DerivationPathMenuItem.Bip44Root,\n            children: `m/44'/501'`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: DerivationPathMenuItem.Bip44,\n            children: `m/44'/501'/0'`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: DerivationPathMenuItem.Bip44Change,\n            children: `m/44'/501'/0'/0'`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 13\n          }, this), showDeprecated && /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: DerivationPathMenuItem.Deprecated,\n            children: `m/501'/0'/0/0 (deprecated)`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 7\n    }, this), accounts.map(acc => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: onClick ? () => onClick(acc) : {},\n        children: /*#__PURE__*/_jsxDEV(BalanceListItem, {\n          onClick: onClick,\n          publicKey: acc.publicKey,\n          expandable: false\n        }, acc.publicKey.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 446,\n    columnNumber: 5\n  }, this);\n} // Material UI's Select doesn't render properly when using an `undefined` value,\n// so we define this type and the subsequent `toDerivationPath` translator as a\n// workaround.\n//\n// DERIVATION_PATH.deprecated is always undefined.\n\n_c8 = AccountsSelector;\nexport const DerivationPathMenuItem = {\n  Deprecated: 0,\n  Bip44: 1,\n  Bip44Change: 2,\n  Bip44Root: 3 // Ledger only.\n\n};\nexport function toDerivationPath(dPathMenuItem) {\n  switch (dPathMenuItem) {\n    case DerivationPathMenuItem.Deprecated:\n      return DERIVATION_PATH.deprecated;\n\n    case DerivationPathMenuItem.Bip44:\n      return DERIVATION_PATH.bip44;\n\n    case DerivationPathMenuItem.Bip44Change:\n      return DERIVATION_PATH.bip44Change;\n\n    case DerivationPathMenuItem.Bip44Root:\n      return DERIVATION_PATH.bip44Root;\n\n    default:\n      throw new Error(`invalid derivation path: ${dPathMenuItem}`);\n  }\n}\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"LoginPage\");\n$RefreshReg$(_c2, \"CreateWalletForm\");\n$RefreshReg$(_c3, \"SeedWordsForm\");\n$RefreshReg$(_c4, \"ChoosePasswordForm\");\n$RefreshReg$(_c5, \"LoginForm\");\n$RefreshReg$(_c6, \"RestoreWalletForm\");\n$RefreshReg$(_c7, \"DerivedAccounts\");\n$RefreshReg$(_c8, \"AccountsSelector\");","map":{"version":3,"sources":["/Users/onyejivictor/Documents/code/cope/bulk-spl-token-dist/src/pages/LoginPage.js"],"names":["React","useEffect","useState","generateMnemonicAndSeed","useHasLockedMnemonicAndSeed","loadMnemonicAndSeed","mnemonicToSeed","storeMnemonicAndSeed","normalizeMnemonic","getAccountFromSeed","DERIVATION_PATH","Container","LoadingIndicator","BalanceListItem","Card","CardContent","DialogActions","DialogContentText","DialogTitle","Typography","TextField","Checkbox","FormControl","FormControlLabel","CardActions","Button","Select","MenuItem","useCallAsync","Link","validateMnemonic","DialogForm","LoginPage","restore","setRestore","hasLockedMnemonicAndSeed","loading","cursor","CreateWalletForm","mnemonicAndSeed","setMnemonicAndSeed","then","savedWords","setSavedWords","callAsync","submit","password","mnemonic","seed","bip44Change","progressMessage","successMessage","SeedWordsForm","goForward","confirmed","setConfirmed","showDialog","setShowDialog","seedCheck","setSeedCheck","e","currentTarget","select","target","checked","justifyContent","margin","display","flexDirection","value","ChoosePasswordForm","goBack","onSubmit","setPassword","passwordConfirm","setPasswordConfirm","LoginForm","stayLoggedIn","setStayLoggedIn","submitOnEnter","code","preventDefault","stopPropagation","setPasswordOnChange","toggleStayLoggedIn","RestoreWalletForm","rawMnemonic","setRawMnemonic","setSeed","next","setNext","isNextBtnEnabled","DerivedAccounts","dPathMenuItem","setDPathMenuItem","DerivationPathMenuItem","Bip44Change","accounts","Array","map","_","idx","Buffer","from","toDerivationPath","AccountsSelector","showRoot","showDeprecated","onClick","Bip44Root","Bip44","Deprecated","acc","publicKey","toString","deprecated","bip44","bip44Root","Error"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  generateMnemonicAndSeed,\n  useHasLockedMnemonicAndSeed,\n  loadMnemonicAndSeed,\n  mnemonicToSeed,\n  storeMnemonicAndSeed,\n  normalizeMnemonic,\n} from '../utils/wallet-seed';\nimport {\n  getAccountFromSeed,\n  DERIVATION_PATH,\n} from '../utils/walletProvider/localStorage.js';\nimport Container from '@material-ui/core/Container';\nimport LoadingIndicator from '../components/LoadingIndicator';\nimport { BalanceListItem } from '../components/BalancesList.js';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { DialogActions, DialogContentText, DialogTitle, Typography } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useCallAsync } from '../utils/notifications';\nimport Link from '@material-ui/core/Link';\nimport { validateMnemonic } from 'bip39';\nimport DialogForm from '../components/DialogForm';\n\nexport default function LoginPage() {\n  const [restore, setRestore] = useState(false);\n  const [hasLockedMnemonicAndSeed, loading] = useHasLockedMnemonicAndSeed();\n  \n  if (loading) {\n    return null;\n  }\n\n  return (\n    <Container maxWidth=\"sm\">\n      {restore ? (\n        <RestoreWalletForm goBack={() => setRestore(false)} />\n      ) : (\n        <>\n          {hasLockedMnemonicAndSeed ? <LoginForm /> : <CreateWalletForm />}\n          <br />\n          <Link style={{ cursor: 'pointer' }} onClick={() => setRestore(true)}>\n            Restore existing wallet\n          </Link>\n        </>\n      )}\n    </Container>\n  );\n}\n\nfunction CreateWalletForm() {\n  const [mnemonicAndSeed, setMnemonicAndSeed] = useState(null);\n  useEffect(() => {\n    generateMnemonicAndSeed().then(setMnemonicAndSeed);\n  }, []);\n  const [savedWords, setSavedWords] = useState(false);\n  const callAsync = useCallAsync();\n\n  function submit(password) {\n    const { mnemonic, seed } = mnemonicAndSeed;\n    callAsync(\n      storeMnemonicAndSeed(\n        mnemonic,\n        seed,\n        password,\n        DERIVATION_PATH.bip44Change,\n      ),\n      {\n        progressMessage: 'Creating wallet...',\n        successMessage: 'Wallet created',\n      },\n    );\n  }\n\n  if (!savedWords) {\n    return (\n      <SeedWordsForm\n        mnemonicAndSeed={mnemonicAndSeed}\n        goForward={() => setSavedWords(true)}\n      />\n    );\n  }\n\n  return (\n    <ChoosePasswordForm\n      mnemonicAndSeed={mnemonicAndSeed}\n      goBack={() => setSavedWords(false)}\n      onSubmit={submit}\n    />\n  );\n}\n\nfunction SeedWordsForm({ mnemonicAndSeed, goForward }) {\n  const [confirmed, setConfirmed] = useState(false);\n  const [showDialog, setShowDialog] = useState(false);\n  const [seedCheck, setSeedCheck] = useState('');\n\n  return (\n    <>\n      <Card>\n        <CardContent>\n          <Typography variant=\"h5\" gutterBottom>\n            Create New Wallet\n          </Typography>\n          <Typography paragraph>\n            Create a new wallet to hold Solana and SPL tokens.\n          </Typography>\n          <Typography>\n            Please write down the following twenty four words and keep them in a\n            safe place:\n          </Typography>\n          {mnemonicAndSeed ? (\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              multiline\n              margin=\"normal\"\n              value={mnemonicAndSeed.mnemonic}\n              label=\"Seed Words\"\n              onFocus={(e) => e.currentTarget.select()}\n            />\n          ) : (\n            <LoadingIndicator />\n          )}\n          <Typography paragraph>\n            Your private keys are only stored on your current computer or device.\n            You will need these words to restore your wallet if your browser's\n            storage is cleared or your device is damaged or lost.\n          </Typography>\n          <Typography paragraph>\n            By default, sollet will use <code>m/44'/501'/0'/0'</code> as the\n            derivation path for the main wallet. To use an alternative path, try\n            restoring an existing wallet.\n          </Typography>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={confirmed}\n                disabled={!mnemonicAndSeed}\n                onChange={(e) => setConfirmed(e.target.checked)}\n              />\n            }\n            label=\"I have saved these words in a safe place.\"\n          />\n        </CardContent>\n        <CardActions style={{ justifyContent: 'flex-end' }}>\n          <Button color=\"primary\" disabled={!confirmed} onClick={() => setShowDialog(true)}>\n            Continue\n          </Button>\n        </CardActions>\n      </Card>\n      <DialogForm\n        open={showDialog}\n        onClose={() => setShowDialog(false)}\n        onSubmit={goForward}\n        fullWidth\n      >\n        <DialogTitle>{'Confirm Mnemonic'}</DialogTitle>\n        <DialogContentText style={{ margin: 20 }}>\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n            }}\n          >\n            Please re-enter your seed phrase to confirm that you have saved it.\n          </div>\n          <TextField\n            label={`Please type your seed phrase to confirm`}\n            fullWidth\n            variant=\"outlined\"\n            margin=\"normal\"\n            value={seedCheck}\n            onChange={(e) => setSeedCheck(e.target.value)}\n          />\n        </DialogContentText>\n        <DialogActions>\n          <Button onClick={() => setShowDialog(false)}>Close</Button>\n          <Button\n            type=\"submit\"\n            color=\"secondary\"\n            disabled={normalizeMnemonic(seedCheck) !== mnemonicAndSeed?.mnemonic}\n          >\n            Continue\n          </Button>\n        </DialogActions>\n      </DialogForm>\n    </>\n  );\n}\n\nfunction ChoosePasswordForm({ goBack, onSubmit }) {\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\" gutterBottom>\n          Choose a Password (Optional)\n        </Typography>\n        <Typography>\n          Optionally pick a password to protect your wallet.\n        </Typography>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          margin=\"normal\"\n          label=\"New Password\"\n          type=\"password\"\n          autoComplete=\"new-password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          margin=\"normal\"\n          label=\"Confirm Password\"\n          type=\"password\"\n          autoComplete=\"new-password\"\n          value={passwordConfirm}\n          onChange={(e) => setPasswordConfirm(e.target.value)}\n        />\n        <Typography>\n          If you forget your password you will need to restore your wallet using\n          your seed words.\n        </Typography>\n      </CardContent>\n      <CardActions style={{ justifyContent: 'space-between' }}>\n        <Button onClick={goBack}>Back</Button>\n        <Button\n          color=\"primary\"\n          disabled={password !== passwordConfirm}\n          onClick={() => onSubmit(password)}\n        >\n          Create Wallet\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nfunction LoginForm() {\n  const [password, setPassword] = useState('');\n  const [stayLoggedIn, setStayLoggedIn] = useState(false);\n  const callAsync = useCallAsync();\n\n  const submit = () => {\n    callAsync(loadMnemonicAndSeed(password, stayLoggedIn), {\n      progressMessage: 'Unlocking wallet...',\n      successMessage: 'Wallet unlocked',\n    });\n  }\n  const submitOnEnter = (e) => {\n    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n      e.preventDefault();\n      e.stopPropagation();\n      submit();\n    }\n  }\n  const setPasswordOnChange = (e) => setPassword(e.target.value);\n  const toggleStayLoggedIn = (e) => setStayLoggedIn(e.target.checked);\n  \n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\" gutterBottom>\n          Unlock Wallet\n        </Typography>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          margin=\"normal\"\n          label=\"Password\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          value={password}\n          onChange={setPasswordOnChange}\n          onKeyDown={submitOnEnter}\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={stayLoggedIn}\n              onChange={toggleStayLoggedIn}\n            />\n          }\n          label=\"Keep wallet unlocked\"\n        />\n      </CardContent>\n      <CardActions style={{ justifyContent: 'flex-end' }}>\n        <Button color=\"primary\" onClick={submit}>\n          Unlock\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nfunction RestoreWalletForm({ goBack }) {\n  const [rawMnemonic, setRawMnemonic] = useState('');\n  const [seed, setSeed] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const [next, setNext] = useState(false);\n\n  const mnemonic = normalizeMnemonic(rawMnemonic);\n  const isNextBtnEnabled =\n    password === passwordConfirm && validateMnemonic(mnemonic);\n\n  return (\n    <>\n      {next ? (\n        <DerivedAccounts\n          goBack={() => setNext(false)}\n          mnemonic={mnemonic}\n          password={password}\n          seed={seed}\n        />\n      ) : (\n        <Card>\n          <CardContent>\n            <Typography variant=\"h5\" gutterBottom>\n              Restore Existing Wallet\n            </Typography>\n            <Typography>\n              Restore your wallet using your twelve or twenty-four seed words.\n              Note that this will delete any existing wallet on this device.\n            </Typography>\n            <br />\n            <Typography fontWeight=\"fontWeightBold\">\n              <b>Do not enter your hardware wallet seedphrase here.</b> Hardware\n              wallets can be optionally connected after a web wallet is created.\n            </Typography>\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              multiline\n              rows={3}\n              margin=\"normal\"\n              label=\"Seed Words\"\n              value={rawMnemonic}\n              onChange={(e) => setRawMnemonic(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              margin=\"normal\"\n              label=\"New Password (Optional)\"\n              type=\"password\"\n              autoComplete=\"new-password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              margin=\"normal\"\n              label=\"Confirm Password\"\n              type=\"password\"\n              autoComplete=\"new-password\"\n              value={passwordConfirm}\n              onChange={(e) => setPasswordConfirm(e.target.value)}\n            />\n          </CardContent>\n          <CardActions style={{ justifyContent: 'space-between' }}>\n            <Button onClick={goBack}>Cancel</Button>\n            <Button\n              color=\"primary\"\n              disabled={!isNextBtnEnabled}\n              onClick={() => {\n                mnemonicToSeed(mnemonic).then((seed) => {\n                  setSeed(seed);\n                  setNext(true);\n                });\n              }}\n            >\n              Next\n            </Button>\n          </CardActions>\n        </Card>\n      )}\n    </>\n  );\n}\n\nfunction DerivedAccounts({ goBack, mnemonic, seed, password }) {\n  const callAsync = useCallAsync();\n  const [dPathMenuItem, setDPathMenuItem] = useState(\n    DerivationPathMenuItem.Bip44Change,\n  );\n  const accounts = [...Array(10)].map((_, idx) => {\n    return getAccountFromSeed(\n      Buffer.from(seed, 'hex'),\n      idx,\n      toDerivationPath(dPathMenuItem),\n    );\n  });\n\n  function submit() {\n    callAsync(\n      storeMnemonicAndSeed(\n        mnemonic,\n        seed,\n        password,\n        toDerivationPath(dPathMenuItem),\n      ),\n    );\n  }\n\n  return (\n    <Card>\n      <AccountsSelector\n        showDeprecated={true}\n        accounts={accounts}\n        dPathMenuItem={dPathMenuItem}\n        setDPathMenuItem={setDPathMenuItem}\n      />\n      <CardActions style={{ justifyContent: 'space-between' }}>\n        <Button onClick={goBack}>Back</Button>\n        <Button color=\"primary\" onClick={submit}>\n          Restore\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport function AccountsSelector({\n  showRoot,\n  showDeprecated,\n  accounts,\n  dPathMenuItem,\n  setDPathMenuItem,\n  onClick,\n}) {\n  return (\n    <CardContent>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n        }}\n      >\n        <Typography variant=\"h5\" gutterBottom>\n          Derivable Accounts\n        </Typography>\n        <FormControl variant=\"outlined\">\n          <Select\n            value={dPathMenuItem}\n            onChange={(e) => {\n              setDPathMenuItem(e.target.value);\n            }}\n          >\n            {showRoot && (\n              <MenuItem value={DerivationPathMenuItem.Bip44Root}>\n                {`m/44'/501'`}\n              </MenuItem>\n            )}\n            <MenuItem value={DerivationPathMenuItem.Bip44}>\n              {`m/44'/501'/0'`}\n            </MenuItem>\n            <MenuItem value={DerivationPathMenuItem.Bip44Change}>\n              {`m/44'/501'/0'/0'`}\n            </MenuItem>\n            {showDeprecated && (\n              <MenuItem value={DerivationPathMenuItem.Deprecated}>\n                {`m/501'/0'/0/0 (deprecated)`}\n              </MenuItem>\n            )}\n          </Select>\n        </FormControl>\n      </div>\n      {accounts.map((acc) => {\n        return (\n          <div onClick={onClick ? () => onClick(acc) : {}}>\n            <BalanceListItem\n              key={acc.publicKey.toString()}\n              onClick={onClick}\n              publicKey={acc.publicKey}\n              expandable={false}\n            />\n          </div>\n        );\n      })}\n    </CardContent>\n  );\n}\n\n// Material UI's Select doesn't render properly when using an `undefined` value,\n// so we define this type and the subsequent `toDerivationPath` translator as a\n// workaround.\n//\n// DERIVATION_PATH.deprecated is always undefined.\nexport const DerivationPathMenuItem = {\n  Deprecated: 0,\n  Bip44: 1,\n  Bip44Change: 2,\n  Bip44Root: 3, // Ledger only.\n};\n\nexport function toDerivationPath(dPathMenuItem) {\n  switch (dPathMenuItem) {\n    case DerivationPathMenuItem.Deprecated:\n      return DERIVATION_PATH.deprecated;\n    case DerivationPathMenuItem.Bip44:\n      return DERIVATION_PATH.bip44;\n    case DerivationPathMenuItem.Bip44Change:\n      return DERIVATION_PATH.bip44Change;\n    case DerivationPathMenuItem.Bip44Root:\n      return DERIVATION_PATH.bip44Root;\n    default:\n      throw new Error(`invalid derivation path: ${dPathMenuItem}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}