{"version":3,"file":"notistack.cjs.production.min.js","sources":["../src/SnackbarContext.ts","../src/utils/constants.ts","../src/SnackbarContent/SnackbarContent.tsx","../src/SnackbarItem/SnackbarItem.util.ts","../src/utils/defaultIconVariants.tsx","../src/utils/createChainedFunction.js","../src/utils/useEventCallback.js","../src/SnackbarItem/Snackbar.js","../src/SnackbarItem/SnackbarItem.tsx","../src/SnackbarContainer.tsx","../src/SnackbarProvider.tsx","../src/useSnackbar.ts","../src/withSnackbar.js"],"sourcesContent":["import React from 'react';\nimport { ProviderContext } from '.';\n\n// @ts-ignore\nexport default React.createContext<ProviderContext>();\n","import Slide from '@material-ui/core/Slide';\nimport { SnackbarClassKey } from '@material-ui/core/Snackbar';\nimport { CloseReason, ContainerClassKey, SnackbarProviderProps, VariantType, SnackbarOrigin, VariantClassKey } from '../index';\nimport { SnackbarItemProps } from '../SnackbarItem';\nimport { Snack } from '../SnackbarProvider';\n\nexport const allClasses: {\n    mui: Record<SnackbarClassKey, {}>;\n    container: Record<ContainerClassKey, {}>;\n} = {\n    mui: {\n        root: {},\n        anchorOriginTopCenter: {},\n        anchorOriginBottomCenter: {},\n        anchorOriginTopRight: {},\n        anchorOriginBottomRight: {},\n        anchorOriginTopLeft: {},\n        anchorOriginBottomLeft: {},\n    },\n    container: {\n        containerRoot: {},\n        containerAnchorOriginTopCenter: {},\n        containerAnchorOriginBottomCenter: {},\n        containerAnchorOriginTopRight: {},\n        containerAnchorOriginBottomRight: {},\n        containerAnchorOriginTopLeft: {},\n        containerAnchorOriginBottomLeft: {},\n    },\n};\n\nexport const MESSAGES = {\n    NO_PERSIST_ALL: 'WARNING - notistack: Reached maxSnack while all enqueued snackbars have \\'persist\\' flag. Notistack will dismiss the oldest snackbar anyway to allow other ones in the queue to be presented.',\n};\n\nexport const SNACKBAR_INDENTS = {\n    view: { default: 20, dense: 4 },\n    snackbar: { default: 6, dense: 2 },\n};\n\nexport const DEFAULTS = {\n    maxSnack: 3,\n    dense: false,\n    hideIconVariant: false,\n    variant: 'default' as VariantType,\n    autoHideDuration: 5000,\n    anchorOrigin: { vertical: 'bottom', horizontal: 'left' } as SnackbarOrigin,\n    TransitionComponent: Slide,\n    transitionDuration: {\n        enter: 225,\n        exit: 195,\n    },\n};\n\nexport const capitalise = (text: string): string => text.charAt(0).toUpperCase() + text.slice(1);\n\nexport const originKeyExtractor = (anchor: Snack['anchorOrigin']): string => (\n    `${capitalise(anchor.vertical)}${capitalise(anchor.horizontal)}`\n);\n\n/**\n * Omit SnackbarContainer class keys that are not needed for SnackbarItem\n */\nexport const omitContainerKeys = (classes: SnackbarProviderProps['classes']): SnackbarItemProps['classes'] => (\n    // @ts-ignore\n    Object.keys(classes).filter(key => !allClasses.container[key]).reduce((obj, key) => ({ ...obj, [key]: classes[key] }), {})\n);\n\nexport const REASONS: { [key: string]: CloseReason } = {\n    TIMEOUT: 'timeout',\n    CLICKAWAY: 'clickaway',\n    MAXSNACK: 'maxsnack',\n    INSTRUCTED: 'instructed',\n};\n\n/** Tranforms classes name */\nexport const transformer = {\n    toContainerAnchorOrigin: (origin: string) => `anchorOrigin${origin}` as ContainerClassKey,\n    toAnchorOrigin: ({ vertical, horizontal }: SnackbarOrigin) => (\n        `anchorOrigin${capitalise(vertical)}${capitalise(horizontal)}` as SnackbarClassKey\n    ),\n    toVariant: (variant: VariantType) => `variant${capitalise(variant)}` as VariantClassKey,\n};\n\nexport const isDefined = (value: string | null | undefined | number): boolean => (!!value || value === 0);\n\nconst numberOrNull = (numberish?: number | null) => (\n    typeof numberish === 'number' || numberish === null\n);\n\n// @ts-ignore\nexport const merge = (options, props, defaults) => (name: keyof Snack): any => {\n    if (name === 'autoHideDuration') {\n        if (numberOrNull(options.autoHideDuration)) return options.autoHideDuration;\n        if (numberOrNull(props.autoHideDuration)) return props.autoHideDuration;\n        return DEFAULTS.autoHideDuration;\n    }\n\n    return options[name] || props[name] || defaults[name];\n};\n\nexport function objectMerge(options = {}, props = {}, defaults = {}) {\n    return {\n        ...defaults,\n        ...props,\n        ...options,\n    };\n}\n","import React, { forwardRef } from 'react';\nimport clsx from 'clsx';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { SnackbarContentProps } from '../index';\n\nconst styles = (theme: Theme) => createStyles({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        flexGrow: 1,\n        [theme.breakpoints.up('sm')]: {\n            flexGrow: 'initial',\n            minWidth: 288,\n        },\n    }\n});\n\ninterface Props extends WithStyles<typeof styles>, SnackbarContentProps { }\n\nconst SnackbarContent = forwardRef<HTMLDivElement, Props>(({ classes, className, ...props }, ref) => (\n    <div ref={ref} className={clsx(classes.root, className)}  {...props} />\n))\n\nexport default withStyles(styles)(SnackbarContent);\n","import clsx from 'clsx';\nimport { SnackbarItemProps } from './SnackbarItem';\nimport { Snack } from '../SnackbarProvider';\nimport { SnackbarProviderProps } from '..';\n\nconst DIRECTION = {\n    right: 'left',\n    left: 'right',\n    bottom: 'up',\n    top: 'down',\n} as const;\nexport type DirectionType = typeof DIRECTION[keyof typeof DIRECTION]\n\nexport const getTransitionDirection = (anchorOrigin: Snack['anchorOrigin']): DirectionType => {\n    if (anchorOrigin.horizontal !== 'center') {\n        return DIRECTION[anchorOrigin.horizontal];\n    }\n    return DIRECTION[anchorOrigin.vertical];\n};\n\n/**\n * Omit all class keys except what we need for collapse component\n */\nexport const omitNonCollapseKeys = (classes: SnackbarItemProps['classes'], dense: SnackbarProviderProps['dense']): { container: string; wrapper: string; wrapperInner: string; } => ({\n    container: classes.collapseContainer,\n    wrapper: clsx(classes.collapseWrapper, { [classes.collapseWrapperDense]: dense }),\n    wrapperInner: classes.collapseWrapperInner,\n});\n","import React from 'react';\nimport SvgIcon, { SvgIconProps } from '@material-ui/core/SvgIcon';\nimport { IconVariant } from '../index';\n\ntype Icon = (props: SvgIconProps) => JSX.Element;\n\nconst CheckIcon: Icon = props => (\n    <SvgIcon {...props}>\n        <path d=\"M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M10 17L5 12L6.41\n        10.59L10 14.17L17.59 6.58L19 8L10 17Z\" />\n    </SvgIcon>\n);\n\nconst WarningIcon: Icon = props => (\n    <SvgIcon {...props}>\n        <path d=\"M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z\" />\n    </SvgIcon>\n);\n\nconst ErrorIcon: Icon = props => (\n    <SvgIcon {...props}>\n        <path d=\"M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,\n        6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,\n        13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z\" />\n    </SvgIcon>\n);\n\nconst InfoIcon: Icon = props => (\n    <SvgIcon {...props}>\n        <path d=\"M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,\n        0 22,12A10,10 0 0,0 12,2Z\" />\n    </SvgIcon>\n);\n\nconst iconStyles = {\n    fontSize: 20,\n    marginInlineEnd: 8,\n};\n\nconst defaultIconVariants: IconVariant = {\n    default: undefined,\n    success: <CheckIcon style={iconStyles} />,\n    warning: <WarningIcon style={iconStyles} />,\n    error: <ErrorIcon style={iconStyles} />,\n    info: <InfoIcon style={iconStyles} />,\n};\n\nexport default defaultIconVariants;\n","/**\n * @link https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/utils/createChainedFunction.js\n */\nexport default function createChainedFunction(funcs, extraArg) {\n    return funcs.reduce((acc, func) => {\n        if (func == null) return acc;\n\n        if (process.env.NODE_ENV !== 'production') {\n            if (typeof func !== 'function') {\n                // eslint-disable-next-line no-console\n                console.error('Invalid Argument Type. must only provide functions, undefined, or null.');\n            }\n        }\n\n        return function chainedFunction(...args) {\n            const argums = [...args];\n            if (extraArg && argums.indexOf(extraArg) === -1) {\n                argums.push(extraArg);\n            }\n            acc.apply(this, argums);\n            func.apply(this, argums);\n        };\n    }, () => { });\n}\n","/**\n * @link https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/utils/useEventCallback.js\n */\nimport * as React from 'react';\n\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n\nexport default function useEventCallback(fn) {\n    const ref = React.useRef(fn);\n    useEnhancedEffect(() => {\n        ref.current = fn;\n    });\n    return React.useCallback((...args) => (0, ref.current)(...args), []);\n}\n","/**\n * @link https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/Snackbar/Snackbar.js\n */\nimport * as React from 'react';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport { REASONS } from '../utils/constants';\nimport useEventCallback from '../utils/useEventCallback';\n\nconst Snackbar = React.forwardRef((props, ref) => {\n    const {\n        children,\n        autoHideDuration,\n        ClickAwayListenerProps,\n        disableWindowBlurListener = false,\n        onClose,\n        onMouseEnter,\n        onMouseLeave,\n        open,\n        resumeHideDuration,\n        ...other\n    } = props;\n\n    const timerAutoHide = React.useRef();\n\n    const handleClose = useEventCallback((...args) => {\n        if (onClose) {\n            onClose(...args);\n        }\n    });\n\n    const setAutoHideTimer = useEventCallback((autoHideDurationParam) => {\n        if (!onClose || autoHideDurationParam == null) {\n            return;\n        }\n\n        clearTimeout(timerAutoHide.current);\n        timerAutoHide.current = setTimeout(() => {\n            handleClose(null, REASONS.TIMEOUT);\n        }, autoHideDurationParam);\n    });\n\n    React.useEffect(() => {\n        if (open) {\n            setAutoHideTimer(autoHideDuration);\n        }\n\n        return () => {\n            clearTimeout(timerAutoHide.current);\n        };\n    }, [open, autoHideDuration, setAutoHideTimer]);\n\n    /**\n     * Pause the timer when the user is interacting with the Snackbar\n     * or when the user hide the window.\n     */\n    const handlePause = () => {\n        clearTimeout(timerAutoHide.current);\n    };\n\n    /**\n     * Restart the timer when the user is no longer interacting with the Snackbar\n     * or when the window is shown back.\n     */\n    const handleResume = React.useCallback(() => {\n        if (autoHideDuration != null) {\n            setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n        }\n    }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n    const handleMouseEnter = (event) => {\n        if (onMouseEnter) {\n            onMouseEnter(event);\n        }\n        handlePause();\n    };\n\n    const handleMouseLeave = (event) => {\n        if (onMouseLeave) {\n            onMouseLeave(event);\n        }\n        handleResume();\n    };\n\n    const handleClickAway = (event) => {\n        if (onClose) {\n            onClose(event, REASONS.CLICKAWAY);\n        }\n    };\n\n    React.useEffect(() => {\n        if (!disableWindowBlurListener && open) {\n            window.addEventListener('focus', handleResume);\n            window.addEventListener('blur', handlePause);\n\n            return () => {\n                window.removeEventListener('focus', handleResume);\n                window.removeEventListener('blur', handlePause);\n            };\n        }\n\n        return undefined;\n    }, [disableWindowBlurListener, handleResume, open]);\n\n    return (\n        <ClickAwayListener onClickAway={handleClickAway} {...ClickAwayListenerProps}>\n            <div onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave} ref={ref} {...other}>\n                {children}\n            </div>\n        </ClickAwayListener>\n    );\n});\n\nexport default Snackbar;\n","import React, { useState, useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { withStyles, WithStyles, createStyles, Theme, emphasize } from '@material-ui/core/styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport SnackbarContent from '../SnackbarContent';\nimport { getTransitionDirection, omitNonCollapseKeys } from './SnackbarItem.util';\nimport { allClasses, REASONS, SNACKBAR_INDENTS, objectMerge, DEFAULTS, transformer } from '../utils/constants';\nimport { SharedProps, RequiredBy, TransitionHandlerProps, SnackbarProviderProps as ProviderProps } from '../index';\nimport defaultIconVariants from '../utils/defaultIconVariants';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport { Snack } from '../SnackbarProvider';\nimport Snackbar from './Snackbar';\n\nconst styles = (theme: Theme) => {\n    // @ts-ignore\n    const mode = theme.palette.mode || theme.palette.type;\n    const backgroundColor = emphasize(theme.palette.background.default, mode === 'light' ? 0.8 : 0.98);\n    return createStyles({\n        ...allClasses.mui,\n        lessPadding: {\n            paddingLeft: 8 * 2.5,\n        },\n        variantSuccess: {\n            backgroundColor: '#43a047 !important', // green\n            color: '#fff !important',\n        },\n        variantError: {\n            backgroundColor: '#d32f2f !important', // dark red\n            color: '#fff !important',\n        },\n        variantInfo: {\n            backgroundColor: '#2196f3 !important', // nice blue\n            color: '#fff !important',\n        },\n        variantWarning: {\n            backgroundColor: '#ff9800 !important', // amber\n            color: '#fff !important',\n        },\n        contentRoot: {\n            ...theme.typography.body2,\n            backgroundColor,\n            color: theme.palette.getContrastText(backgroundColor),\n            alignItems: 'center',\n            padding: '6px 16px',\n            borderRadius: '4px',\n            boxShadow: '0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)',\n        },\n        message: {\n            display: 'flex',\n            alignItems: 'center',\n            padding: '8px 0',\n        },\n        action: {\n            display: 'flex',\n            alignItems: 'center',\n            marginLeft: 'auto',\n            paddingLeft: 16,\n            marginRight: -8,\n        },\n        wrappedRoot: {\n            position: 'relative',\n            transform: 'translateX(0)',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n        },\n        collapseContainer: {\n            [theme.breakpoints.down('xs')]: {\n                paddingLeft: theme.spacing(1),\n                paddingRight: theme.spacing(1),\n            },\n        },\n        collapseWrapper: {\n            transition: theme.transitions.create(['margin-bottom'], { easing: 'ease' }),\n            marginTop: SNACKBAR_INDENTS.snackbar.default,\n            marginBottom: SNACKBAR_INDENTS.snackbar.default,\n        },\n        collapseWrapperDense: {\n            marginTop: SNACKBAR_INDENTS.snackbar.dense,\n            marginBottom: SNACKBAR_INDENTS.snackbar.dense,\n        },\n        collapseWrapperInner: {\n            width: 'auto',\n            [theme.breakpoints.down('xs')]: {\n                width: '100%',\n            },\n        },\n    });\n}\n\n\ntype RemovedProps =\n    | 'variant' // the one received from Provider is processed and passed to snack prop \n    | 'anchorOrigin' // same as above\n    | 'autoHideDuration' // same as above\n    | 'preventDuplicate' // the one recevied from enqueueSnackbar is processed in provider, therefore shouldn't be passed to SnackbarItem */\n\n\nexport interface SnackbarItemProps extends WithStyles<typeof styles>, RequiredBy<Omit<SharedProps, RemovedProps>, 'onEntered' | 'onExited' | 'onClose'> {\n    snack: Snack;\n    dense: ProviderProps['dense'];\n    iconVariant: ProviderProps['iconVariant'];\n    hideIconVariant: ProviderProps['hideIconVariant'];\n}\n\nconst SnackbarItem: React.FC<SnackbarItemProps> = ({ classes, ...props }) => {\n    const timeout = useRef<ReturnType<typeof setTimeout>>();\n    const [collapsed, setCollapsed] = useState(true);\n\n    useEffect(() => (): void => {\n        if (timeout.current) {\n            clearTimeout(timeout.current);\n        }\n    }, []);\n\n    const handleClose = createChainedFunction([props.snack.onClose, props.onClose], props.snack.key);\n\n    const handleEntered: TransitionHandlerProps['onEntered'] = () => {\n        if (props.snack.requestClose) {\n            handleClose(null, REASONS.INSTRCUTED);\n        }\n    };\n\n    const handleExitedScreen = (): void => {\n        timeout.current = setTimeout(() => {\n            setCollapsed(!collapsed);\n        }, 125);\n    };\n\n    const {\n        style,\n        dense,\n        ariaAttributes: otherAriaAttributes,\n        className: otherClassName,\n        hideIconVariant,\n        iconVariant,\n        snack,\n        action: otherAction,\n        content: otherContent,\n        TransitionComponent: otherTranComponent,\n        TransitionProps: otherTranProps,\n        transitionDuration: otherTranDuration,\n        onEnter: ignoredOnEnter,\n        onEntered: ignoredOnEntered,\n        onEntering: ignoredOnEntering,\n        onExit: ignoredOnExit,\n        onExited: ignoredOnExited,\n        onExiting: ignoredOnExiting,\n        ...other\n    } = props;\n\n    const {\n        persist,\n        key,\n        open,\n        entered,\n        requestClose,\n        className: singleClassName,\n        variant,\n        content: singleContent,\n        action: singleAction,\n        ariaAttributes: singleAriaAttributes,\n        anchorOrigin,\n        message: snackMessage,\n        TransitionComponent: singleTranComponent,\n        TransitionProps: singleTranProps,\n        transitionDuration: singleTranDuration,\n        onEnter,\n        onEntered,\n        onEntering,\n        onExit,\n        onExited,\n        onExiting,\n        ...singleSnackProps\n    } = snack;\n\n    const icon = {\n        ...defaultIconVariants,\n        ...iconVariant,\n    }[variant];\n\n    const ariaAttributes = {\n        'aria-describedby': 'notistack-snackbar',\n        ...objectMerge(singleAriaAttributes, otherAriaAttributes),\n    };\n\n    const TransitionComponent = singleTranComponent || otherTranComponent || DEFAULTS.TransitionComponent;\n    const transitionDuration = objectMerge(singleTranDuration, otherTranDuration, DEFAULTS.transitionDuration);\n    const transitionProps = {\n        direction: getTransitionDirection(anchorOrigin),\n        ...objectMerge(singleTranProps, otherTranProps),\n    };\n\n    let action = singleAction || otherAction;\n    if (typeof action === 'function') {\n        action = action(key);\n    }\n\n    let content = singleContent || otherContent;\n    if (typeof content === 'function') {\n        content = content(key, snack.message);\n    }\n\n    const callbacks: { [key in keyof TransitionHandlerProps]?: any } =\n        ['onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'].reduce((acc, cbName) => ({\n            ...acc,\n            // @ts-ignore\n            [cbName]: createChainedFunction([props.snack[cbName], props[cbName]], props.snack.key),\n        }), {});\n\n    return (\n        <Collapse\n            unmountOnExit\n            timeout={175}\n            in={collapsed}\n            classes={omitNonCollapseKeys(classes, dense)}\n            onExited={callbacks.onExited}\n        >\n            {/* @ts-ignore */}\n            <Snackbar\n                {...other}\n                {...singleSnackProps}\n                open={open}\n                className={clsx(\n                    classes.root,\n                    classes.wrappedRoot,\n                    classes[transformer.toAnchorOrigin(anchorOrigin)],\n                )}\n                onClose={handleClose}\n            >\n                {/* @ts-ignore */}\n                <TransitionComponent\n                    appear\n                    in={open}\n                    timeout={transitionDuration}\n                    {...transitionProps}\n                    onExit={callbacks.onExit}\n                    onExiting={callbacks.onExiting}\n                    onExited={handleExitedScreen}\n                    onEnter={callbacks.onEnter}\n                    onEntering={callbacks.onEntering}\n                    // order matters. first callbacks.onEntered to set entered: true,\n                    // then handleEntered to check if there's a request for closing\n                    onEntered={createChainedFunction([callbacks.onEntered, handleEntered])}\n                >\n                    {/* @ts-ignore */}\n                    {content || (\n                        <SnackbarContent\n                            {...ariaAttributes}\n                            role=\"alert\"\n                            style={style}\n                            className={clsx(\n                                classes.contentRoot,\n                                { [classes.lessPadding]: !hideIconVariant && icon },\n                                classes[transformer.toVariant(variant)],\n                                otherClassName,\n                                singleClassName\n                            )}\n                        >\n                            <div id={ariaAttributes['aria-describedby']} className={classes.message}>\n                                {!hideIconVariant ? icon : null}\n                                {snackMessage}\n                            </div>\n                            {action && (\n                                <div className={classes.action}>{action}</div>\n                            )}\n                        </SnackbarContent>\n                    )}\n                </TransitionComponent>\n            </Snackbar>\n        </Collapse>\n    );\n};\n\nexport default withStyles(styles)(SnackbarItem);\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { SNACKBAR_INDENTS } from './utils/constants';\nimport { SnackbarProviderProps } from '.';\n\nconst useStyle = makeStyles(theme => ({\n    root: {\n        boxSizing: 'border-box',\n        display: 'flex',\n        maxHeight: '100%',\n        maxWidth: '100%',\n        position: 'fixed',\n        flexDirection: 'column',\n        zIndex: theme.zIndex.snackbar,\n        height: 'auto',\n        width: 'auto',\n        minWidth: 288,\n        transition: theme.transitions.create(['top', 'right', 'bottom', 'left'], { easing: 'ease' }),\n        [theme.breakpoints.down('xs')]: {\n            left: '0 !important',\n            right: '0 !important',\n            width: '100%',\n        },\n    },\n    reverseColumns: { flexDirection: 'column-reverse' },\n\n    top: { top: SNACKBAR_INDENTS.view.default - SNACKBAR_INDENTS.snackbar.default },\n    topDense: { top: SNACKBAR_INDENTS.view.dense - SNACKBAR_INDENTS.snackbar.dense },\n\n    bottom: { bottom: SNACKBAR_INDENTS.view.default - SNACKBAR_INDENTS.snackbar.default },\n    bottomDense: { bottom: SNACKBAR_INDENTS.view.dense - SNACKBAR_INDENTS.snackbar.dense },\n\n    left: { left: SNACKBAR_INDENTS.view.default },\n    leftDense: { left: SNACKBAR_INDENTS.view.dense },\n\n    right: { right: SNACKBAR_INDENTS.view.default },\n    rightDense: { right: SNACKBAR_INDENTS.view.dense },\n\n    center: {\n        left: '50%',\n        transform: 'translateX(-50%)',\n        [theme.breakpoints.down('xs')]: {\n            transform: 'translateX(0)',\n        },\n    },\n}));\n\n\ninterface SnackbarContainerProps {\n    children: JSX.Element | JSX.Element[];\n    className?: string;\n    dense: SnackbarProviderProps['dense'];\n    anchorOrigin: NonNullable<SnackbarProviderProps['anchorOrigin']>;\n}\n\nconst SnackbarContainer: React.FC<SnackbarContainerProps> = (props) => {\n    const classes = useStyle();\n    const { className, anchorOrigin, dense, ...other } = props;\n\n    const combinedClassname = clsx(\n        classes.root,\n        classes[anchorOrigin.vertical],\n        classes[anchorOrigin.horizontal],\n        // @ts-ignore\n        classes[`${anchorOrigin.vertical}${dense ? 'Dense' : ''}`],\n        // @ts-ignore\n        classes[`${anchorOrigin.horizontal}${dense ? 'Dense' : ''}`],\n        { [classes.reverseColumns]: anchorOrigin.vertical === 'bottom' },\n        className,\n    );\n\n    return (\n        <div className={combinedClassname} {...other} />\n    );\n};\n\nexport default React.memo(SnackbarContainer);\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport clsx from 'clsx';\nimport SnackbarContext from './SnackbarContext';\nimport { MESSAGES, REASONS, originKeyExtractor, omitContainerKeys, DEFAULTS, merge, transformer, isDefined } from './utils/constants';\nimport SnackbarItem from './SnackbarItem';\nimport SnackbarContainer from './SnackbarContainer';\nimport warning from './utils/warning';\nimport { SnackbarProviderProps, SnackbarKey, SnackbarMessage, OptionsObject, RequiredBy, ProviderContext, TransitionHandlerProps } from '.';\nimport createChainedFunction from './utils/createChainedFunction';\n\ntype Reducer = (state: State) => State;\ntype SnacksByPosition = { [key: string]: Snack[] };\n\nexport interface Snack extends RequiredBy<OptionsObject, 'key' | 'variant' | 'anchorOrigin'> {\n    message: SnackbarMessage;\n    open: boolean;\n    entered: boolean;\n    requestClose: boolean;\n}\n\ninterface State {\n    snacks: Snack[];\n    queue: Snack[];\n    contextValue: ProviderContext;\n}\n\nclass SnackbarProvider extends Component<SnackbarProviderProps, State> {\n    constructor(props: SnackbarProviderProps) {\n        super(props);\n        this.state = {\n            snacks: [],\n            queue: [], // eslint-disable-line react/no-unused-state\n            contextValue: {\n                enqueueSnackbar: this.enqueueSnackbar,\n                closeSnackbar: this.closeSnackbar,\n            },\n        };\n    }\n\n    get maxSnack(): number {\n        return this.props.maxSnack || DEFAULTS.maxSnack;\n    }\n\n    /**\n     * Adds a new snackbar to the queue to be presented.\n     * Returns generated or user defined key referencing the new snackbar or null\n     */\n    enqueueSnackbar = (message: SnackbarMessage, opts: OptionsObject = {}): SnackbarKey => {\n        const {\n            key,\n            preventDuplicate,\n            ...options\n        } = opts;\n\n        const hasSpecifiedKey = isDefined(key);\n        const id = hasSpecifiedKey ? (key as SnackbarKey) : new Date().getTime() + Math.random();\n\n        const merger = merge(options, this.props, DEFAULTS);\n        const snack: Snack = {\n            key: id,\n            ...options,\n            message,\n            open: true,\n            entered: false,\n            requestClose: false,\n            variant: merger('variant'),\n            anchorOrigin: merger('anchorOrigin'),\n            autoHideDuration: merger('autoHideDuration'),\n        };\n\n        if (options.persist) {\n            snack.autoHideDuration = undefined;\n        }\n\n        this.setState((state) => {\n            if ((preventDuplicate === undefined && this.props.preventDuplicate) || preventDuplicate) {\n                const compareFunction = (item: Snack): boolean => (\n                    hasSpecifiedKey ? item.key === key : item.message === message\n                );\n\n                const inQueue = state.queue.findIndex(compareFunction) > -1;\n                const inView = state.snacks.findIndex(compareFunction) > -1;\n                if (inQueue || inView) {\n                    return state;\n                }\n            }\n\n            return this.handleDisplaySnack({\n                ...state,\n                queue: [...state.queue, snack],\n            });\n        });\n\n        return id;\n    };\n\n    /**\n     * Reducer: Display snack if there's space for it. Otherwise, immediately\n     * begin dismissing the oldest message to start showing the new one.\n     */\n    handleDisplaySnack: Reducer = (state) => {\n        const { snacks } = state;\n        if (snacks.length >= this.maxSnack) {\n            return this.handleDismissOldest(state);\n        }\n        return this.processQueue(state);\n    };\n\n    /**\n     * Reducer: Display items (notifications) in the queue if there's space for them.\n     */\n    processQueue: Reducer = (state) => {\n        const { queue, snacks } = state;\n        if (queue.length > 0) {\n            return {\n                ...state,\n                snacks: [...snacks, queue[0]],\n                queue: queue.slice(1, queue.length),\n            };\n        }\n        return state;\n    };\n\n    /**\n     * Reducer: Hide oldest snackbar on the screen because there exists a new one which we have to display.\n     * (ignoring the one with 'persist' flag. i.e. explicitly told by user not to get dismissed).\n     *\n     * Note 1: If there is already a message leaving the screen, no new messages are dismissed.\n     * Note 2: If the oldest message has not yet entered the screen, only a request to close the\n     *         snackbar is made. Once it entered the screen, it will be immediately dismissed.\n     */\n    handleDismissOldest: Reducer = (state) => {\n        if (state.snacks.some(item => !item.open || item.requestClose)) {\n            return state;\n        }\n\n        let popped = false;\n        let ignore = false;\n\n        const persistentCount = state.snacks.reduce((acc, current) => (\n            acc + (current.open && current.persist ? 1 : 0)\n        ), 0);\n\n        if (persistentCount === this.maxSnack) {\n            warning(MESSAGES.NO_PERSIST_ALL);\n            ignore = true;\n        }\n\n        const snacks = state.snacks.map((item) => {\n            if (!popped && (!item.persist || ignore)) {\n                popped = true;\n\n                if (!item.entered) {\n                    return {\n                        ...item,\n                        requestClose: true,\n                    };\n                }\n\n                if (item.onClose) item.onClose(null, REASONS.MAXSNACK, item.key);\n                if (this.props.onClose) this.props.onClose(null, REASONS.MAXSNACK, item.key);\n\n                return {\n                    ...item,\n                    open: false,\n                };\n            }\n\n            return { ...item };\n        });\n\n        return { ...state, snacks };\n    };\n\n    /**\n     * Set the entered state of the snackbar with the given key.\n     */\n    handleEnteredSnack: TransitionHandlerProps['onEntered'] = (node, isAppearing, key) => {\n        if (!isDefined(key)) {\n            throw new Error('handleEnteredSnack Cannot be called with undefined key');\n        }\n\n        this.setState(({ snacks }) => ({\n            snacks: snacks.map(item => (\n                item.key === key ? { ...item, entered: true } : { ...item }\n            )),\n        }));\n    }\n\n    /**\n     * Hide a snackbar after its timeout.\n     */\n    handleCloseSnack: TransitionHandlerProps['onClose'] = (event, reason, key) => {\n        // should not use createChainedFunction for onClose.\n        // because this.closeSnackbar called this function\n        if (this.props.onClose) {\n            this.props.onClose(event, reason, key);\n        }\n\n        if (reason === REASONS.CLICKAWAY) return;\n        const shouldCloseAll = key === undefined;\n\n        this.setState(({ snacks, queue }) => ({\n            snacks: snacks.map((item) => {\n                if (!shouldCloseAll && item.key !== key) {\n                    return { ...item };\n                }\n\n                return item.entered\n                    ? { ...item, open: false }\n                    : { ...item, requestClose: true };\n            }),\n            queue: queue.filter(item => item.key !== key), // eslint-disable-line react/no-unused-state\n        }));\n    };\n\n    /**\n     * Close snackbar with the given key\n     */\n    closeSnackbar: ProviderContext['closeSnackbar'] = (key) => {\n        // call individual snackbar onClose callback passed through options parameter\n        const toBeClosed = this.state.snacks.find(item => item.key === key);\n        if (isDefined(key) && toBeClosed && toBeClosed.onClose) {\n            toBeClosed.onClose(null, REASONS.INSTRUCTED, key);\n        }\n\n        this.handleCloseSnack(null, REASONS.INSTRUCTED, key);\n    }\n\n    /**\n     * When we set open attribute of a snackbar to false (i.e. after we hide a snackbar),\n     * it leaves the screen and immediately after leaving animation is done, this method\n     * gets called. We remove the hidden snackbar from state and then display notifications\n     * waiting in the queue (if any). If after this process the queue is not empty, the\n     * oldest message is dismissed.\n     */\n    // @ts-ignore\n    handleExitedSnack: TransitionHandlerProps['onExited'] = (event, key1, key2) => {\n        const key = key1 || key2;\n        if (!isDefined(key)) {\n            throw new Error('handleExitedSnack Cannot be called with undefined key');\n        }\n\n        this.setState((state) => {\n            const newState = this.processQueue({\n                ...state,\n                snacks: state.snacks.filter(item => item.key !== key),\n            });\n\n            if (newState.queue.length === 0) {\n                return newState;\n            }\n\n            return this.handleDismissOldest(newState);\n        });\n    };\n\n    render(): JSX.Element {\n        const { contextValue } = this.state;\n        const {\n            maxSnack: dontspread1,\n            preventDuplicate: dontspread2,\n            variant: dontspread3,\n            anchorOrigin: dontspread4,\n            iconVariant,\n            dense = DEFAULTS.dense,\n            hideIconVariant = DEFAULTS.hideIconVariant,\n            domRoot,\n            children,\n            classes = {},\n            ...props\n        } = this.props;\n\n        const categ = this.state.snacks.reduce<SnacksByPosition>((acc, current) => {\n            const category = originKeyExtractor(current.anchorOrigin);\n            const existingOfCategory = acc[category] || [];\n            return {\n                ...acc,\n                [category]: [...existingOfCategory, current],\n            };\n        }, {});\n\n        const snackbars = Object.keys(categ).map((origin) => {\n            const snacks = categ[origin];\n            return (\n                <SnackbarContainer\n                    key={origin}\n                    dense={dense}\n                    anchorOrigin={snacks[0].anchorOrigin}\n                    className={clsx(\n                        classes.containerRoot,\n                        classes[transformer.toContainerAnchorOrigin(origin)],\n                    )}\n                >\n                    {snacks.map(snack => (\n                        <SnackbarItem\n                            {...props}\n                            key={snack.key}\n                            snack={snack}\n                            dense={dense}\n                            iconVariant={iconVariant}\n                            hideIconVariant={hideIconVariant}\n                            classes={omitContainerKeys(classes)}\n                            onClose={this.handleCloseSnack}\n                            onExited={createChainedFunction([this.handleExitedSnack, this.props.onExited])}\n                            onEntered={createChainedFunction([this.handleEnteredSnack, this.props.onEntered])}\n                        />\n                    ))}\n                </SnackbarContainer>\n            );\n        });\n\n        return (\n            <SnackbarContext.Provider value={contextValue}>\n                {children}\n                {domRoot ? createPortal(snackbars, domRoot) : snackbars}\n            </SnackbarContext.Provider>\n        );\n    }\n}\n\nexport default SnackbarProvider;\n","import { useContext } from 'react';\nimport SnackbarContext from './SnackbarContext';\nimport { ProviderContext } from '.';\n\nexport default (): ProviderContext => useContext(SnackbarContext);\n","import React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport getDisplayName from './utils/getDisplayName';\nimport SnackbarContext from './SnackbarContext';\n\nconst withSnackbar = (Component) => {\n    const WrappedComponent = React.forwardRef((props, ref) => (\n        <SnackbarContext.Consumer>\n            {context => (\n                <Component\n                    {...props}\n                    ref={ref}\n                    enqueueSnackbar={context.enqueueSnackbar}\n                    closeSnackbar={context.closeSnackbar}\n                />\n            )}\n        </SnackbarContext.Consumer>\n    ));\n\n    if (process.env.NODE_ENV !== 'production') {\n        WrappedComponent.displayName = `WithSnackbar(${getDisplayName(Component)})`;\n    }\n\n    hoistNonReactStatics(WrappedComponent, Component);\n\n    return WrappedComponent;\n};\n\nexport default withSnackbar;\n"],"names":["React","createContext","allClasses","root","anchorOriginTopCenter","anchorOriginBottomCenter","anchorOriginTopRight","anchorOriginBottomRight","anchorOriginTopLeft","anchorOriginBottomLeft","containerRoot","containerAnchorOriginTopCenter","containerAnchorOriginBottomCenter","containerAnchorOriginTopRight","containerAnchorOriginBottomRight","containerAnchorOriginTopLeft","containerAnchorOriginBottomLeft","DEFAULTS","maxSnack","dense","hideIconVariant","variant","autoHideDuration","anchorOrigin","vertical","horizontal","TransitionComponent","Slide","transitionDuration","enter","exit","capitalise","text","charAt","toUpperCase","slice","omitContainerKeys","classes","Object","keys","filter","key","reduce","obj","REASONS","TIMEOUT","CLICKAWAY","MAXSNACK","INSTRUCTED","transformer","origin","isDefined","value","numberOrNull","numberish","objectMerge","options","props","defaults","styles","theme","createStyles","display","flexWrap","flexGrow","breakpoints","up","minWidth","SnackbarContent","forwardRef","ref","className","clsx","withStyles","DIRECTION","right","left","bottom","top","getTransitionDirection","omitNonCollapseKeys","container","collapseContainer","wrapper","collapseWrapper","collapseWrapperDense","wrapperInner","collapseWrapperInner","CheckIcon","SvgIcon","d","WarningIcon","ErrorIcon","InfoIcon","iconStyles","fontSize","marginInlineEnd","defaultIconVariants","undefined","success","style","warning","error","info","createChainedFunction","funcs","extraArg","acc","func","args","argums","indexOf","push","apply","this","useEnhancedEffect","window","useEventCallback","fn","current","Snackbar","children","ClickAwayListenerProps","disableWindowBlurListener","onClose","onMouseEnter","onMouseLeave","open","resumeHideDuration","other","timerAutoHide","handleClose","setAutoHideTimer","autoHideDurationParam","clearTimeout","setTimeout","handlePause","handleResume","addEventListener","removeEventListener","React.createElement","ClickAwayListener","onClickAway","event","backgroundColor","emphasize","palette","background","mode","type","lessPadding","paddingLeft","variantSuccess","color","variantError","variantInfo","variantWarning","contentRoot","typography","body2","getContrastText","alignItems","padding","borderRadius","boxShadow","message","action","marginLeft","marginRight","wrappedRoot","position","transform","down","spacing","paddingRight","transition","transitions","create","easing","marginTop","marginBottom","width","SnackbarItem","timeout","useRef","useState","collapsed","setCollapsed","useEffect","snack","otherAriaAttributes","ariaAttributes","otherClassName","iconVariant","otherAction","otherContent","content","otherTranComponent","otherTranProps","TransitionProps","otherTranDuration","entered","singleContent","singleAction","singleAriaAttributes","snackMessage","singleTranComponent","singleTranProps","singleTranDuration","singleSnackProps","icon","_extends","transitionProps","direction","callbacks","cbName","Collapse","unmountOnExit","onExited","appear","onExit","onExiting","onEnter","onEntering","onEntered","requestClose","INSTRCUTED","role","singleClassName","id","useStyle","makeStyles","boxSizing","maxHeight","maxWidth","flexDirection","zIndex","snackbar","height","reverseColumns","SNACKBAR_INDENTS","topDense","bottomDense","leftDense","rightDense","center","SnackbarContainer","combinedClassname","memo","SnackbarProvider","opts","preventDuplicate","hasSpecifiedKey","Date","getTime","Math","random","merger","name","merge","_this","persist","setState","state","compareFunction","item","inQueue","queue","findIndex","inView","snacks","handleDisplaySnack","length","handleDismissOldest","processQueue","some","popped","ignore","map","node","isAppearing","Error","reason","shouldCloseAll","toBeClosed","find","handleCloseSnack","key1","key2","newState","contextValue","enqueueSnackbar","closeSnackbar","render","dontspread1","domRoot","categ","anchor","category","snackbars","_this2","handleExitedSnack","handleEnteredSnack","SnackbarContext","Provider","createPortal","Component","useContext","WrappedComponent","Consumer","context","hoistNonReactStatics"],"mappings":"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"}